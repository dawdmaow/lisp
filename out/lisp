/* Generated by the Nim Compiler v2.2.2 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI570434256 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570434255 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI536871245 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI570425399 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI570427200 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570425400 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI570425401 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI570427886 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI704643381 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI570431977 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570425394 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI570426079 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI570425630 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554444 = {size: 0,kind: 44,base: null,node: null,finalizer: null};
var NTI1107296604 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI570425465 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570425454 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570425453 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570425452 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570425451 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI570425448 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570425445 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI570425437 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI570425391 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI570425384 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1107296259 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI570425421 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI570425418 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570425415 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI570425406 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI570425393 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI570431561 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570425392 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI570431598 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI570425385 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI570425407 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI570425389 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI570425354 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554448 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI771753313 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1593836429 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI570436969 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI570436196 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI570436949 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI570436195 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1627390234 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570436908 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI570436782 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI570436780 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI570436775 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1224736913 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736800 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI570436778 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736951 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736830 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI570436776 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI570436774 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI956301392 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI956301399 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1593835558 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835557 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1593835549 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835548 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1627390054 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1627390053 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1627390052 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1627390051 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1627390050 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1627390049 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1627390044 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1593835530 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835540 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1593835529 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835539 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1593835527 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1593835528 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835538 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1593835537 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736861 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736860 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736859 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736858 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736857 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736856 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736855 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736854 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736853 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736852 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736851 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736850 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736849 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736848 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736847 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736846 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736845 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736844 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736843 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736842 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736841 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736840 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736839 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736838 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736837 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736910 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736798 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1224736957 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736954 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1224736953 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736833 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1224736956 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1224736834 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1224736903 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736792 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1224736892 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736904 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736793 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1224736891 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736890 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736909 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736797 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1224736889 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736888 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736905 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736794 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1224736887 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736895 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736906 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736795 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1224736894 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736908 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736907 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736796 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1224736879 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736782 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1224736893 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736786 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1224736886 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736785 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1224736783 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1224736885 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736884 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736883 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1224736882 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1224736784 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1694498869 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1694498868 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1627390056 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1627390055 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1627389960 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1627390045 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627390041 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627390048 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627390047 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1627389955 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1627390046 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1627390043 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1593835536 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1593835535 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1593835533 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI570436737 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555174 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555167 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1593836356 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1593836355 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI570436717 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI570436717 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "renderer0", len: 0, typ: NTI1593836355, name: "renderer0", sons: null}, 
{kind: 1, offset: "clientPostRenderCallback1", len: 0, typ: NTI1593836356, name: "clientPostRenderCallback1", sons: null}]};
NTI570436717.node = NNI570436717;
var NNI33555167 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555167.node = NNI33555167;
NTI570436717.base = NTI33555167;
NTI33555174.base = NTI33555171;
NTI33555175.base = NTI33555171;
var NNI33555171 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555174, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555175, name: "up", sons: null}]};
NTI33555171.node = NNI33555171;
NTI33555171.base = NTI33555167;
var NNI1627389955 = {kind: 2, offset: 0, typ: null, name: null, len: 213, sons: {"0": {kind: 1, offset: 0, typ: NTI1627389955, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1627389955, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1627389955, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1627389955, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1627389955, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1627389955, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1627389955, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1627389955, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1627389955, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1627389955, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1627389955, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1627389955, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1627389955, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1627389955, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI1627389955, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI1627389955, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI1627389955, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI1627389955, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI1627389955, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI1627389955, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI1627389955, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI1627389955, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI1627389955, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI1627389955, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI1627389955, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI1627389955, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI1627389955, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI1627389955, name: "hgroup", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI1627389955, name: "header", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI1627389955, name: "footer", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI1627389955, name: "address", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI1627389955, name: "main", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI1627389955, name: "p", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI1627389955, name: "hr", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI1627389955, name: "pre", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI1627389955, name: "blockquote", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI1627389955, name: "ol", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI1627389955, name: "ul", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI1627389955, name: "li", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI1627389955, name: "dl", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI1627389955, name: "dt", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI1627389955, name: "dd", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI1627389955, name: "figure", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI1627389955, name: "figcaption", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI1627389955, name: "div", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI1627389955, name: "a", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI1627389955, name: "em", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI1627389955, name: "strong", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI1627389955, name: "small", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI1627389955, name: "s", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI1627389955, name: "cite", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI1627389955, name: "quote", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI1627389955, name: "dfn", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI1627389955, name: "abbr", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI1627389955, name: "data", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI1627389955, name: "time", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI1627389955, name: "code", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI1627389955, name: "var", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI1627389955, name: "samp", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI1627389955, name: "kbd", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI1627389955, name: "sub", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI1627389955, name: "sup", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI1627389955, name: "i", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI1627389955, name: "b", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI1627389955, name: "u", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI1627389955, name: "mark", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI1627389955, name: "ruby", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI1627389955, name: "rt", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI1627389955, name: "rp", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI1627389955, name: "bdi", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI1627389955, name: "dbo", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI1627389955, name: "span", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI1627389955, name: "br", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI1627389955, name: "wbr", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI1627389955, name: "ins", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI1627389955, name: "del", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI1627389955, name: "img", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI1627389955, name: "iframe", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI1627389955, name: "embed", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI1627389955, name: "object", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI1627389955, name: "param", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI1627389955, name: "video", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI1627389955, name: "audio", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI1627389955, name: "source", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI1627389955, name: "track", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI1627389955, name: "canvas", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI1627389955, name: "map", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI1627389955, name: "area", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI1627389955, name: "animate", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI1627389955, name: "animateMotion", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI1627389955, name: "animateTransform", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI1627389955, name: "circle", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI1627389955, name: "clipPath", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI1627389955, name: "defs", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI1627389955, name: "desc", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI1627389955, name: "discard", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI1627389955, name: "ellipse", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI1627389955, name: "feBlend", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI1627389955, name: "feColorMatrix", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI1627389955, name: "feComponentTransfer", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI1627389955, name: "feComposite", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI1627389955, name: "feConvolveMatrix", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI1627389955, name: "feDiffuseLighting", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI1627389955, name: "feDisplacementMap", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI1627389955, name: "feDistantLight", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI1627389955, name: "feDropShadow", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI1627389955, name: "feFlood", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI1627389955, name: "feFuncA", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI1627389955, name: "feFuncB", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI1627389955, name: "feFuncG", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI1627389955, name: "feFuncR", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI1627389955, name: "feGaussianBlur", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI1627389955, name: "feImage", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI1627389955, name: "feMerge", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI1627389955, name: "feMergeNode", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI1627389955, name: "feMorphology", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI1627389955, name: "feOffset", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI1627389955, name: "fePointLight", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI1627389955, name: "feSpecularLighting", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI1627389955, name: "feSpotLight", len: 0, sons: null}, 
"120": {kind: 1, offset: 120, typ: NTI1627389955, name: "feTile", len: 0, sons: null}, 
"121": {kind: 1, offset: 121, typ: NTI1627389955, name: "feTurbulence", len: 0, sons: null}, 
"122": {kind: 1, offset: 122, typ: NTI1627389955, name: "filter", len: 0, sons: null}, 
"123": {kind: 1, offset: 123, typ: NTI1627389955, name: "foreignObject", len: 0, sons: null}, 
"124": {kind: 1, offset: 124, typ: NTI1627389955, name: "g", len: 0, sons: null}, 
"125": {kind: 1, offset: 125, typ: NTI1627389955, name: "image", len: 0, sons: null}, 
"126": {kind: 1, offset: 126, typ: NTI1627389955, name: "line", len: 0, sons: null}, 
"127": {kind: 1, offset: 127, typ: NTI1627389955, name: "linearGradient", len: 0, sons: null}, 
"128": {kind: 1, offset: 128, typ: NTI1627389955, name: "marker", len: 0, sons: null}, 
"129": {kind: 1, offset: 129, typ: NTI1627389955, name: "mask", len: 0, sons: null}, 
"130": {kind: 1, offset: 130, typ: NTI1627389955, name: "metadata", len: 0, sons: null}, 
"131": {kind: 1, offset: 131, typ: NTI1627389955, name: "mpath", len: 0, sons: null}, 
"132": {kind: 1, offset: 132, typ: NTI1627389955, name: "path", len: 0, sons: null}, 
"133": {kind: 1, offset: 133, typ: NTI1627389955, name: "pattern", len: 0, sons: null}, 
"134": {kind: 1, offset: 134, typ: NTI1627389955, name: "polygon", len: 0, sons: null}, 
"135": {kind: 1, offset: 135, typ: NTI1627389955, name: "polyline", len: 0, sons: null}, 
"136": {kind: 1, offset: 136, typ: NTI1627389955, name: "radialGradient", len: 0, sons: null}, 
"137": {kind: 1, offset: 137, typ: NTI1627389955, name: "rect", len: 0, sons: null}, 
"138": {kind: 1, offset: 138, typ: NTI1627389955, name: "set", len: 0, sons: null}, 
"139": {kind: 1, offset: 139, typ: NTI1627389955, name: "stop", len: 0, sons: null}, 
"140": {kind: 1, offset: 140, typ: NTI1627389955, name: "svg", len: 0, sons: null}, 
"141": {kind: 1, offset: 141, typ: NTI1627389955, name: "switch", len: 0, sons: null}, 
"142": {kind: 1, offset: 142, typ: NTI1627389955, name: "symbol", len: 0, sons: null}, 
"143": {kind: 1, offset: 143, typ: NTI1627389955, name: "text", len: 0, sons: null}, 
"144": {kind: 1, offset: 144, typ: NTI1627389955, name: "textPath", len: 0, sons: null}, 
"145": {kind: 1, offset: 145, typ: NTI1627389955, name: "tspan", len: 0, sons: null}, 
"146": {kind: 1, offset: 146, typ: NTI1627389955, name: "unknown", len: 0, sons: null}, 
"147": {kind: 1, offset: 147, typ: NTI1627389955, name: "use", len: 0, sons: null}, 
"148": {kind: 1, offset: 148, typ: NTI1627389955, name: "view", len: 0, sons: null}, 
"149": {kind: 1, offset: 149, typ: NTI1627389955, name: "maction", len: 0, sons: null}, 
"150": {kind: 1, offset: 150, typ: NTI1627389955, name: "math", len: 0, sons: null}, 
"151": {kind: 1, offset: 151, typ: NTI1627389955, name: "menclose", len: 0, sons: null}, 
"152": {kind: 1, offset: 152, typ: NTI1627389955, name: "merror", len: 0, sons: null}, 
"153": {kind: 1, offset: 153, typ: NTI1627389955, name: "mfenced", len: 0, sons: null}, 
"154": {kind: 1, offset: 154, typ: NTI1627389955, name: "mfrac", len: 0, sons: null}, 
"155": {kind: 1, offset: 155, typ: NTI1627389955, name: "mglyph", len: 0, sons: null}, 
"156": {kind: 1, offset: 156, typ: NTI1627389955, name: "mi", len: 0, sons: null}, 
"157": {kind: 1, offset: 157, typ: NTI1627389955, name: "mlabeledtr", len: 0, sons: null}, 
"158": {kind: 1, offset: 158, typ: NTI1627389955, name: "mmultiscripts", len: 0, sons: null}, 
"159": {kind: 1, offset: 159, typ: NTI1627389955, name: "mn", len: 0, sons: null}, 
"160": {kind: 1, offset: 160, typ: NTI1627389955, name: "mo", len: 0, sons: null}, 
"161": {kind: 1, offset: 161, typ: NTI1627389955, name: "mover", len: 0, sons: null}, 
"162": {kind: 1, offset: 162, typ: NTI1627389955, name: "mpadded", len: 0, sons: null}, 
"163": {kind: 1, offset: 163, typ: NTI1627389955, name: "mphantom", len: 0, sons: null}, 
"164": {kind: 1, offset: 164, typ: NTI1627389955, name: "mroot", len: 0, sons: null}, 
"165": {kind: 1, offset: 165, typ: NTI1627389955, name: "mrow", len: 0, sons: null}, 
"166": {kind: 1, offset: 166, typ: NTI1627389955, name: "ms", len: 0, sons: null}, 
"167": {kind: 1, offset: 167, typ: NTI1627389955, name: "mspace", len: 0, sons: null}, 
"168": {kind: 1, offset: 168, typ: NTI1627389955, name: "msqrt", len: 0, sons: null}, 
"169": {kind: 1, offset: 169, typ: NTI1627389955, name: "mstyle", len: 0, sons: null}, 
"170": {kind: 1, offset: 170, typ: NTI1627389955, name: "msub", len: 0, sons: null}, 
"171": {kind: 1, offset: 171, typ: NTI1627389955, name: "msubsup", len: 0, sons: null}, 
"172": {kind: 1, offset: 172, typ: NTI1627389955, name: "msup", len: 0, sons: null}, 
"173": {kind: 1, offset: 173, typ: NTI1627389955, name: "mtable", len: 0, sons: null}, 
"174": {kind: 1, offset: 174, typ: NTI1627389955, name: "mtd", len: 0, sons: null}, 
"175": {kind: 1, offset: 175, typ: NTI1627389955, name: "mtext", len: 0, sons: null}, 
"176": {kind: 1, offset: 176, typ: NTI1627389955, name: "mtr", len: 0, sons: null}, 
"177": {kind: 1, offset: 177, typ: NTI1627389955, name: "munder", len: 0, sons: null}, 
"178": {kind: 1, offset: 178, typ: NTI1627389955, name: "munderover", len: 0, sons: null}, 
"179": {kind: 1, offset: 179, typ: NTI1627389955, name: "semantics", len: 0, sons: null}, 
"180": {kind: 1, offset: 180, typ: NTI1627389955, name: "table", len: 0, sons: null}, 
"181": {kind: 1, offset: 181, typ: NTI1627389955, name: "caption", len: 0, sons: null}, 
"182": {kind: 1, offset: 182, typ: NTI1627389955, name: "colgroup", len: 0, sons: null}, 
"183": {kind: 1, offset: 183, typ: NTI1627389955, name: "col", len: 0, sons: null}, 
"184": {kind: 1, offset: 184, typ: NTI1627389955, name: "tbody", len: 0, sons: null}, 
"185": {kind: 1, offset: 185, typ: NTI1627389955, name: "thead", len: 0, sons: null}, 
"186": {kind: 1, offset: 186, typ: NTI1627389955, name: "tfoot", len: 0, sons: null}, 
"187": {kind: 1, offset: 187, typ: NTI1627389955, name: "tr", len: 0, sons: null}, 
"188": {kind: 1, offset: 188, typ: NTI1627389955, name: "td", len: 0, sons: null}, 
"189": {kind: 1, offset: 189, typ: NTI1627389955, name: "th", len: 0, sons: null}, 
"190": {kind: 1, offset: 190, typ: NTI1627389955, name: "form", len: 0, sons: null}, 
"191": {kind: 1, offset: 191, typ: NTI1627389955, name: "fieldset", len: 0, sons: null}, 
"192": {kind: 1, offset: 192, typ: NTI1627389955, name: "legend", len: 0, sons: null}, 
"193": {kind: 1, offset: 193, typ: NTI1627389955, name: "label", len: 0, sons: null}, 
"194": {kind: 1, offset: 194, typ: NTI1627389955, name: "input", len: 0, sons: null}, 
"195": {kind: 1, offset: 195, typ: NTI1627389955, name: "button", len: 0, sons: null}, 
"196": {kind: 1, offset: 196, typ: NTI1627389955, name: "select", len: 0, sons: null}, 
"197": {kind: 1, offset: 197, typ: NTI1627389955, name: "datalist", len: 0, sons: null}, 
"198": {kind: 1, offset: 198, typ: NTI1627389955, name: "optgroup", len: 0, sons: null}, 
"199": {kind: 1, offset: 199, typ: NTI1627389955, name: "option", len: 0, sons: null}, 
"200": {kind: 1, offset: 200, typ: NTI1627389955, name: "textarea", len: 0, sons: null}, 
"201": {kind: 1, offset: 201, typ: NTI1627389955, name: "keygen", len: 0, sons: null}, 
"202": {kind: 1, offset: 202, typ: NTI1627389955, name: "output", len: 0, sons: null}, 
"203": {kind: 1, offset: 203, typ: NTI1627389955, name: "progress", len: 0, sons: null}, 
"204": {kind: 1, offset: 204, typ: NTI1627389955, name: "meter", len: 0, sons: null}, 
"205": {kind: 1, offset: 205, typ: NTI1627389955, name: "details", len: 0, sons: null}, 
"206": {kind: 1, offset: 206, typ: NTI1627389955, name: "summary", len: 0, sons: null}, 
"207": {kind: 1, offset: 207, typ: NTI1627389955, name: "command", len: 0, sons: null}, 
"208": {kind: 1, offset: 208, typ: NTI1627389955, name: "menu", len: 0, sons: null}, 
"209": {kind: 1, offset: 209, typ: NTI1627389955, name: "bdo", len: 0, sons: null}, 
"210": {kind: 1, offset: 210, typ: NTI1627389955, name: "dialog", len: 0, sons: null}, 
"211": {kind: 1, offset: 211, typ: NTI1627389955, name: "slot", len: 0, sons: null}, 
"212": {kind: 1, offset: 212, typ: NTI1627389955, name: "template", len: 0, sons: null}}};
NTI1627389955.node = NNI1627389955;
NTI1627390047.base = NTI1627390043;
NTI1627390048.base = NTI33554450;
var NNI1627389960 = {kind: 2, offset: 0, typ: null, name: null, len: 61, sons: {"0": {kind: 1, offset: 0, typ: NTI1627389960, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1627389960, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1627389960, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1627389960, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1627389960, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1627389960, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1627389960, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1627389960, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1627389960, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1627389960, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1627389960, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1627389960, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1627389960, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1627389960, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI1627389960, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI1627389960, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI1627389960, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI1627389960, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI1627389960, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI1627389960, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI1627389960, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI1627389960, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI1627389960, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI1627389960, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI1627389960, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI1627389960, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI1627389960, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI1627389960, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI1627389960, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI1627389960, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI1627389960, name: "onkeyuplater", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI1627389960, name: "onload", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI1627389960, name: "ontransitioncancel", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI1627389960, name: "ontransitionend", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI1627389960, name: "ontransitionrun", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI1627389960, name: "ontransitionstart", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI1627389960, name: "onpaste", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI1627389960, name: "onwheel", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI1627389960, name: "onaudioprocess", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI1627389960, name: "oncanplay", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI1627389960, name: "oncanplaythrough", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI1627389960, name: "oncomplete", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI1627389960, name: "ondurationchange", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI1627389960, name: "onemptied", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI1627389960, name: "onended", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI1627389960, name: "onerror", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI1627389960, name: "onloadeddata", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI1627389960, name: "onloadedmetadata", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI1627389960, name: "onloadstart", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI1627389960, name: "onpause", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI1627389960, name: "onplay", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI1627389960, name: "onplaying", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI1627389960, name: "onprogress", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI1627389960, name: "onratechange", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI1627389960, name: "onseeked", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI1627389960, name: "onseeking", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI1627389960, name: "onstalled", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI1627389960, name: "onsuspend", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI1627389960, name: "ontimeupdate", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI1627389960, name: "onvolumechange", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI1627389960, name: "onwaiting", len: 0, sons: null}}};
NTI1627389960.node = NNI1627389960;
var NNI1627390045 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1627389960, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1627390055, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1627390056, name: "Field2", sons: null}]};
NTI1627390045.node = NNI1627390045;
NTI1627390041.base = NTI1627390045;
var NNI1694498869 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498869.node = NNI1694498869;
NTI1694498868.base = NTI1694498869;
NTI1224736883.base = NTI1224736784;
NTI1224736884.base = NTI1224736784;
NTI1224736885.base = NTI1224736784;
var NNI1224736783 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1224736783, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1224736783, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1224736783, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1224736783, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1224736783, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1224736783, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1224736783, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1224736783, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1224736783, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1224736783, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1224736783, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1224736783, name: "NotationNode", len: 0, sons: null}}};
NTI1224736783.node = NNI1224736783;
var NNI1224736879 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1224736879.node = NNI1224736879;
NTI1224736879.base = NTI33555167;
NTI1224736782.base = NTI1224736879;
NTI1224736908.base = NTI1224736786;
var NNI1224736907 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI33554450, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI33554450, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI33554450, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI1224736908, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI33554450, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI33554450, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI33554435, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI33554450, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI33554466, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}]};
NTI1224736907.node = NNI1224736907;
NTI1224736907.base = NTI1224736893;
NTI1224736796.base = NTI1224736907;
var NNI1224736906 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI33554466, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554466, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI33554435, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554450, name: "value", sons: null}]};
NTI1224736906.node = NNI1224736906;
NTI1224736906.base = NTI1224736893;
NTI1224736795.base = NTI1224736906;
NTI1224736894.base = NTI1224736795;
NTI1224736895.base = NTI1224736795;
var NNI1224736893 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI33554450, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI1224736782, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI33554466, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI33554466, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI33554450, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI33554466, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI1224736796, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI33554466, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1224736894, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI1224736895, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI33554435, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI33554435, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI33554450, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI33554466, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI33554450, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI33554435, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI33554435, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI33554435, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI33554435, name: "offsetTop", sons: null}]};
NTI1224736893.node = NNI1224736893;
NTI1224736893.base = NTI1224736882;
NTI1224736786.base = NTI1224736893;
var NNI1224736905 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1224736905.node = NNI1224736905;
NTI1224736905.base = NTI1224736893;
NTI1224736794.base = NTI1224736905;
NTI1224736887.base = NTI1224736794;
NTI1224736888.base = NTI1224736796;
var NNI1224736909 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI33554435, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI33554466, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI33554450, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}]};
NTI1224736909.node = NNI1224736909;
NTI1224736909.base = NTI1224736893;
NTI1224736797.base = NTI1224736909;
NTI1224736889.base = NTI1224736797;
NTI1224736890.base = NTI1224736786;
var NNI1224736904 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}]};
NTI1224736904.node = NNI1224736904;
NTI1224736904.base = NTI1224736893;
NTI1224736793.base = NTI1224736904;
NTI1224736891.base = NTI1224736793;
var NNI1224736903 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1224736903.node = NNI1224736903;
NTI1224736903.base = NTI1224736893;
NTI1224736792.base = NTI1224736903;
NTI1224736892.base = NTI1224736792;
var NNI1224736953 = {kind: 1, offset: "then", len: 0, typ: NTI1224736954, name: "then", sons: null};
NTI1224736953.node = NNI1224736953;
NTI1224736833.base = NTI1224736953;
var NNI1224736956 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI1224736833, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI1224736957, name: "onloadingdone", sons: null}]};
NTI1224736956.node = NNI1224736956;
NTI1224736834.base = NTI1224736956;
var NNI1224736886 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI1224736786, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI1224736786, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI33554450, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI33554450, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1224736786, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI33554450, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI33554450, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI33554450, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI33554450, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI1224736786, name: "head", sons: null}, 
{kind: 1, offset: "hidden", len: 0, typ: NTI33554466, name: "hidden", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI33554450, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI33554450, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI33554450, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI33554450, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI33554450, name: "URL", sons: null}, 
{kind: 1, offset: "visibilityState", len: 0, typ: NTI33554450, name: "visibilityState", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI33554450, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI1224736887, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI1224736888, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI1224736889, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI1224736890, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI1224736891, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI1224736892, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI1224736834, name: "fonts", sons: null}]};
NTI1224736886.node = NNI1224736886;
NTI1224736886.base = NTI1224736882;
NTI1224736785.base = NTI1224736886;
var NNI1224736910 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI33554450, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI33554450, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI33554450, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI33554450, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI33554450, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI33554450, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI33554450, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI33554450, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI33554450, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI33554450, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI33554450, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI33554450, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI33554450, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI33554450, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI33554450, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI33554450, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI33554450, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI33554450, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI33554450, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI33554450, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI33554450, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI33554450, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI33554450, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI33554450, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI33554450, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI33554450, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI33554450, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI33554450, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI33554450, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI33554450, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI33554450, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI33554450, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI33554450, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI33554450, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI33554450, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI33554450, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI33554450, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI33554450, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI33554450, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI33554450, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI33554450, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI33554450, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI33554450, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI33554450, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI33554450, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI33554450, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI33554450, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI33554450, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI33554450, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI33554450, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI33554450, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI33554450, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI33554450, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI33554450, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI33554450, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI33554450, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI33554450, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI33554450, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI33554450, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI33554450, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI33554450, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI33554450, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI33554450, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI33554450, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI33554450, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI33554450, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI33554450, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI33554450, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI33554450, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI33554450, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI33554450, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI33554450, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI33554450, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI33554450, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI33554450, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI33554450, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI33554450, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI33554450, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI33554450, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI33554450, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI33554450, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI33554450, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI33554450, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI33554450, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI33554450, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI33554450, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI33554450, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554450, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI33554450, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI33554450, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI33554450, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI33554450, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI33554450, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI33554450, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI33554450, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI33554450, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI33554450, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI33554450, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI33554450, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI33554450, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI33554450, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI33554450, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI33554450, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI33554450, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI33554450, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI33554450, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI33554450, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI33554450, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI33554450, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI33554450, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI33554450, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI33554450, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI33554450, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI33554450, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI33554450, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI33554450, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI33554450, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI33554450, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI33554450, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI33554450, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI33554450, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI33554450, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI33554450, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI33554450, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI33554450, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI33554450, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI33554450, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI33554450, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI33554450, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554450, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI33554450, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI33554450, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI33554450, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI33554450, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI33554450, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554450, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI33554450, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI33554450, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI33554450, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI33554450, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI33554450, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI33554450, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI33554450, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI33554450, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI33554450, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI33554450, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI33554450, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI33554450, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI33554450, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI33554450, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI33554450, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI33554450, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI33554450, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI33554450, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI33554450, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI33554450, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI33554450, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI33554450, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI33554450, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI33554450, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI33554450, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI33554450, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI33554450, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI33554450, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI33554450, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI33554450, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554450, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI33554450, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI33554450, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI33554450, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI33554450, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI33554450, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI33554450, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI33554450, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI33554450, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI33554450, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI33554450, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI33554450, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI33554450, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI33554450, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI33554450, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI33554450, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554450, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI33554450, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI33554450, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI33554450, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI33554450, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI33554450, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI33554450, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI33554450, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI33554450, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI33554450, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI33554450, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI33554450, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI33554450, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI33554450, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI33554450, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI33554450, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI33554450, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI33554450, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI33554450, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554450, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI33554450, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI33554450, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI33554450, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI33554450, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI33554450, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI33554450, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI33554450, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI33554450, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI33554450, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI33554450, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI33554450, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI33554450, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI33554450, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI33554450, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI33554450, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI33554450, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI33554450, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI33554450, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI33554450, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI33554450, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI33554450, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI33554450, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI33554450, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI33554450, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI33554450, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI33554450, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI33554450, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI33554450, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI33554450, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI33554450, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI33554450, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI33554450, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI33554450, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI33554450, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI33554450, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI33554450, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI33554450, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI33554450, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI33554450, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI33554450, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI33554450, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI33554450, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI33554450, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI33554450, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI33554450, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI33554450, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI33554450, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI33554450, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI33554450, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI33554450, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI33554450, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI33554450, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI33554450, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI33554450, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI33554450, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI33554450, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI33554450, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI33554450, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI33554450, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI33554450, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI33554450, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI33554450, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI33554450, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI33554450, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI33554450, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI33554450, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI33554450, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI33554450, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI33554450, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI33554450, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI33554450, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI33554450, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI33554450, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI33554450, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI33554450, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI33554450, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554450, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI33554450, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI33554450, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI33554450, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI33554450, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI33554450, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI33554450, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI33554450, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI33554450, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI33554450, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI33554450, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI33554450, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI33554450, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI33554450, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI33554450, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI33554450, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI33554450, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI33554450, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI33554450, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI33554450, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI33554450, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI33554450, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI33554450, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI33554450, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI33554450, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI33554450, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI33554450, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI33554450, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI33554450, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI33554450, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI33554450, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI33554450, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI33554450, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI33554450, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI33554450, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI33554450, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI33554450, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI33554450, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI33554450, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI33554450, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI33554450, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI33554450, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI33554450, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI33554450, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI33554450, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI33554450, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI33554450, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI33554450, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI33554450, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI33554450, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI33554450, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI33554450, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI33554450, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI33554450, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI33554450, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI33554450, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI33554450, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI33554450, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI33554450, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI33554450, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI33554450, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI33554450, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI33554450, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI33554450, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI33554450, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI33554450, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI33554450, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554450, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI33554450, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI33554450, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI33554450, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI33554450, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI33554450, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI33554450, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI33554450, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI33554450, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI33554450, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI33554450, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI33554450, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI33554450, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI33554450, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI33554450, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI33554450, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI33554450, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554450, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI33554450, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI33554450, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI33554450, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI33554450, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI33554450, name: "zIndex", sons: null}]};
NTI1224736910.node = NNI1224736910;
NTI1224736910.base = NTI33555167;
NTI1224736798.base = NTI1224736910;
var NNI1224736882 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI1224736883, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI1224736884, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1224736885, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI33554450, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI1224736784, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI1224736784, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI1224736784, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI33554450, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI1224736783, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI33554450, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI1224736784, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1224736784, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI1224736784, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI1224736785, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI33554450, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI33554450, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI33554450, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI33554450, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1224736798, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI33554450, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI1224736786, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI33554466, name: "isConnected", sons: null}]};
NTI1224736882.node = NNI1224736882;
var NNI1224736837 = {kind: 2, len: 24, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI1224736838, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI1224736839, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI1224736840, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI1224736841, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI1224736842, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI1224736843, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI1224736844, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI1224736845, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI1224736846, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI1224736847, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI1224736848, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI1224736849, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI1224736850, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI1224736851, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI1224736852, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI1224736853, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI1224736854, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI1224736855, name: "onselect", sons: null}, 
{kind: 1, offset: "onstorage", len: 0, typ: NTI1224736856, name: "onstorage", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI1224736857, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI1224736858, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI1224736859, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI1224736860, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI1224736861, name: "onloadend", sons: null}]};
NTI1224736837.node = NNI1224736837;
NTI1224736837.base = NTI33555167;
NTI1224736882.base = NTI1224736837;
NTI1224736784.base = NTI1224736882;
var NNI1627390046 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI1627389955, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI33554450, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI33554450, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI1627390047, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI1627390048, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI1627390041, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1694498868, name: "style", sons: null}, 
{kind: 1, offset: "styleVersion", len: 0, typ: NTI33554435, name: "styleVersion", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI1224736784, name: "dom", sons: null}]};
NTI1627390046.node = NNI1627390046;
NTI1627390046.base = NTI33555167;
NTI1627390043.base = NTI1627390046;
var NNI1593835527 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI1593835527, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1593835527, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1593835527, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1593835527, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1593835527, name: "pkDetach", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1593835527, name: "pkSame", len: 0, sons: null}}};
NTI1593835527.node = NNI1593835527;
var NNI1593835528 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI1593835527, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI1224736784, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI1224736784, name: "current", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI1627390043, name: "newNode", sons: null}, 
{kind: 1, offset: "oldNode", len: 0, typ: NTI1627390043, name: "oldNode", sons: null}]};
NTI1593835528.node = NNI1593835528;
NTI1593835538.base = NTI1593835528;
var NNI1593835529 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI1627390043, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI1627390043, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554435, name: "pos", sons: null}]};
NTI1593835529.node = NNI1593835529;
NTI1593835539.base = NTI1593835529;
var NNI1627390049 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI33554450, name: "key", sons: null}, 
{kind: 1, offset: "renderImpl", len: 0, typ: NTI1627390050, name: "renderImpl", sons: null}, 
{kind: 1, offset: "changedImpl", len: 0, typ: NTI1627390051, name: "changedImpl", sons: null}, 
{kind: 1, offset: "updatedImpl", len: 0, typ: NTI1627390052, name: "updatedImpl", sons: null}, 
{kind: 1, offset: "onAttachImpl", len: 0, typ: NTI1627390053, name: "onAttachImpl", sons: null}, 
{kind: 1, offset: "onDetachImpl", len: 0, typ: NTI1627390054, name: "onDetachImpl", sons: null}, 
{kind: 1, offset: "version", len: 0, typ: NTI33554435, name: "version", sons: null}, 
{kind: 1, offset: "renderedVersion", len: 0, typ: NTI33554435, name: "renderedVersion", sons: null}, 
{kind: 1, offset: "expanded", len: 0, typ: NTI1627390043, name: "expanded", sons: null}, 
{kind: 1, offset: "debugId", len: 0, typ: NTI33554435, name: "debugId", sons: null}]};
NTI1627390049.node = NNI1627390049;
NTI1627390049.base = NTI1627390046;
NTI1627390044.base = NTI1627390049;
var NNI1593835530 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "oldNode", len: 0, typ: NTI1627390044, name: "oldNode", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI1627390044, name: "newNode", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI1224736784, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI1224736784, name: "current", sons: null}]};
NTI1593835530.node = NNI1593835530;
NTI1593835540.base = NTI1593835530;
var NNI1593835549 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1593835549.node = NNI1593835549;
NTI1593835548.base = NTI1593835549;
var NNI1593835558 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1593835558.node = NNI1593835558;
NTI1593835557.base = NTI1593835558;
var NNI1593835535 = {kind: 2, len: 17, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "rootId", len: 0, typ: NTI33554450, name: "rootId", sons: null}, 
{kind: 1, offset: "renderer", len: 0, typ: NTI1593835536, name: "renderer", sons: null}, 
{kind: 1, offset: "currentTree", len: 0, typ: NTI1627390043, name: "currentTree", sons: null}, 
{kind: 1, offset: "postRenderCallback", len: 0, typ: NTI1593835537, name: "postRenderCallback", sons: null}, 
{kind: 1, offset: "toFocus", len: 0, typ: NTI1224736784, name: "toFocus", sons: null}, 
{kind: 1, offset: "toFocusV", len: 0, typ: NTI1627390043, name: "toFocusV", sons: null}, 
{kind: 1, offset: "renderId", len: 0, typ: NTI33554435, name: "renderId", sons: null}, 
{kind: 1, offset: "rendering", len: 0, typ: NTI33554466, name: "rendering", sons: null}, 
{kind: 1, offset: "patches", len: 0, typ: NTI1593835538, name: "patches", sons: null}, 
{kind: 1, offset: "patchLen", len: 0, typ: NTI33554435, name: "patchLen", sons: null}, 
{kind: 1, offset: "patchesV", len: 0, typ: NTI1593835539, name: "patchesV", sons: null}, 
{kind: 1, offset: "patchLenV", len: 0, typ: NTI33554435, name: "patchLenV", sons: null}, 
{kind: 1, offset: "runCount", len: 0, typ: NTI33554435, name: "runCount", sons: null}, 
{kind: 1, offset: "components", len: 0, typ: NTI1593835540, name: "components", sons: null}, 
{kind: 1, offset: "surpressRedraws", len: 0, typ: NTI33554466, name: "surpressRedraws", sons: null}, 
{kind: 1, offset: "byId", len: 0, typ: NTI1593835548, name: "byId", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI1593835557, name: "orphans", sons: null}]};
NTI1593835535.node = NNI1593835535;
NTI1593835533.base = NTI1593835535;
var NNI570436737 = {kind: 1, offset: "kxi0", len: 0, typ: NTI1593835533, name: "kxi0", sons: null};
NTI570436737.node = NNI570436737;
NTI570436737.base = NTI33555167;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555172 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555172.node = NNI33555172;
NTI33555172.base = NTI33555171;
NTI134217741.base = NTI33555172;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555172;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555172;
var NNI956301399 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI956301392, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI956301399.node = NNI956301399;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555172;
var NNI570436774 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "action0", len: 0, typ: NTI1627390055, name: "action0", sons: null}, 
{kind: 1, offset: "n1", len: 0, typ: NTI1627390043, name: "n1", sons: null}]};
NTI570436774.node = NNI570436774;
NTI570436774.base = NTI33555167;
var NNI1224736951 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1224736951.node = NNI1224736951;
NTI1224736951.base = NTI33555167;
NTI1224736830.base = NTI1224736951;
var NNI570436776 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "timer0", len: 0, typ: NTI1224736830, name: "timer0", sons: null}, 
{kind: 1, offset: "n1", len: 0, typ: NTI1627390043, name: "n1", sons: null}, 
{kind: 1, offset: "action2", len: 0, typ: NTI1627390055, name: "action2", sons: null}]};
NTI570436776.node = NNI570436776;
NTI570436776.base = NTI33555167;
var NNI1224736913 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bubbles", len: 0, typ: NTI33554466, name: "bubbles", sons: null}, 
{kind: 1, offset: "cancelBubble", len: 0, typ: NTI33554466, name: "cancelBubble", sons: null}, 
{kind: 1, offset: "cancelable", len: 0, typ: NTI33554466, name: "cancelable", sons: null}, 
{kind: 1, offset: "composed", len: 0, typ: NTI33554466, name: "composed", sons: null}, 
{kind: 1, offset: "currentTarget", len: 0, typ: NTI1224736784, name: "currentTarget", sons: null}, 
{kind: 1, offset: "defaultPrevented", len: 0, typ: NTI33554466, name: "defaultPrevented", sons: null}, 
{kind: 1, offset: "eventPhase", len: 0, typ: NTI33554435, name: "eventPhase", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI1224736784, name: "target", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "isTrusted", len: 0, typ: NTI33554466, name: "isTrusted", sons: null}]};
NTI1224736913.node = NNI1224736913;
NTI1224736913.base = NTI33555167;
NTI1224736800.base = NTI1224736913;
NTI570436775.base = NTI570436776;
var NNI570436778 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ev0", len: 0, typ: NTI1224736800, name: "ev0", sons: null}, 
{kind: 1, offset: "HEX3Aup", len: 0, typ: NTI570436775, name: ":up", sons: null}]};
NTI570436778.node = NNI570436778;
NTI570436778.base = NTI33555167;
var NNI570436780 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "n0", len: 0, typ: NTI1627390043, name: "n0", sons: null}, 
{kind: 1, offset: "action1", len: 0, typ: NTI1627390055, name: "action1", sons: null}]};
NTI570436780.node = NNI570436780;
NTI570436780.base = NTI33555167;
var NNI570436782 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "n0", len: 0, typ: NTI1627390043, name: "n0", sons: null}, 
{kind: 1, offset: "action1", len: 0, typ: NTI1627390055, name: "action1", sons: null}]};
NTI570436782.node = NNI570436782;
NTI570436782.base = NTI33555167;
var NNI570436908 = {kind: 1, offset: "kxi0", len: 0, typ: NTI1593835533, name: "kxi0", sons: null};
NTI570436908.node = NNI570436908;
NTI570436908.base = NTI33555167;
NTI1627390234.base = NTI33554450;
var NNI570436195 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI570436195, name: "basic", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI570436195, name: "advanced", len: 0, sons: null}}};
NTI570436195.node = NNI570436195;
var NNI570436949 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "action0", len: 0, typ: NTI1627390055, name: "action0", sons: null}, 
{kind: 1, offset: "kxi1", len: 0, typ: NTI1593835533, name: "kxi1", sons: null}]};
NTI570436949.node = NNI570436949;
NTI570436949.base = NTI33555167;
var NNI570436196 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI570436195, name: "kind", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "code", len: 0, typ: NTI33554449, name: "code", sons: null}]};
NTI570436196.node = NNI570436196;
var NNI570436969 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "action0", len: 0, typ: NTI1593836429, name: "action0", sons: null}, 
{kind: 1, offset: "kxi1", len: 0, typ: NTI1593835533, name: "kxi1", sons: null}]};
NTI570436969.node = NNI570436969;
NTI570436969.base = NTI33555167;
NTI771753313.base = NTI33554448;
var NNI570425354 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI570425354.node = NNI570425354;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555172;
var NNI570425389 = {kind: 2, offset: 0, typ: null, name: null, len: 13, sons: {"0": {kind: 1, offset: 0, typ: NTI570425389, name: "tkSymbol", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI570425389, name: "number-type", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI570425389, name: "string-type", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI570425389, name: "tkOpen", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI570425389, name: "tkClose", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI570425389, name: "tkKeyword", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI570425389, name: "tkBool", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI570425389, name: "tkAtomicType", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI570425389, name: "tkDot", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI570425389, name: "tkTag", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI570425389, name: "any-type", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI570425389, name: "void-type", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI570425389, name: "tkMember", len: 0, sons: null}}};
NTI570425389.node = NNI570425389;
var NNI570425385 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI570425385, name: "unquote", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI570425385, name: "unquote-splicing", len: 0, sons: null}}};
NTI570425385.node = NNI570425385;
NTI570425407.base = NTI570425385;
NTI570431598.base = NTI570425385;
var NNI570425392 = {kind: 2, offset: 0, typ: null, name: null, len: 20, sons: {"0": {kind: 1, offset: 0, typ: NTI570425392, name: "nkSymbol", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI570425392, name: "nkList", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI570425392, name: "nkFunction", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI570425392, name: "nkKeyword", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI570425392, name: "nkTable", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI570425392, name: "nkAtomicType", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI570425392, name: "nkObjectType", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI570425392, name: "nkEnumType", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI570425392, name: "nkObject", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI570425392, name: "nkAtomic", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI570425392, name: "nkDot", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI570425392, name: "nkTemplate", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI570425392, name: "nkTableType", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI570425392, name: "nkArrayType", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI570425392, name: "nkAnyType", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI570425392, name: "nkVoidType", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI570425392, name: "nkVoidValue", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI570425392, name: "nkClassType", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI570425392, name: "nkClassObj", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI570425392, name: "nkMember", len: 0, sons: null}}};
NTI570425392.node = NNI570425392;
var NNI570425421 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1107296259, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI570425393, name: "Field2", sons: null}]};
NTI570425421.node = NNI570425421;
NTI570425418.base = NTI570425421;
var NNI570425415 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI570425418, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI570425415.node = NNI570425415;
var NNI570425384 = {kind: 2, offset: 0, typ: null, name: null, len: 57, sons: {"0": {kind: 1, offset: 0, typ: NTI570425384, name: "quote", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI570425384, name: "eval", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI570425384, name: ":=", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI570425384, name: "if", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI570425384, name: "+", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI570425384, name: "\\", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI570425384, name: "echo", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI570425384, name: "repr", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI570425384, name: "block", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI570425384, name: "table", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI570425384, name: "must-equal", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI570425384, name: "object-type", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI570425384, name: "=", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI570425384, name: "str-add", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI570425384, name: "high", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI570425384, name: "low", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI570425384, name: "..", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI570425384, name: "expect", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI570425384, name: "to-str", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI570425384, name: "is-list", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI570425384, name: "==", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI570425384, name: "!=", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI570425384, name: "not", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI570425384, name: "empty?", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI570425384, name: "array-get", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI570425384, name: "filter-array", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI570425384, name: "-", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI570425384, name: "for", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI570425384, name: "len", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI570425384, name: "+=", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI570425384, name: "-=", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI570425384, name: "is-str", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI570425384, name: "class", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI570425384, name: "return", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI570425384, name: "or", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI570425384, name: "and", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI570425384, name: "contains", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI570425384, name: "template", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI570425384, name: "while", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI570425384, name: "<=", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI570425384, name: ">=", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI570425384, name: "<", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI570425384, name: ">", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI570425384, name: "add", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI570425384, name: "enum-type", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI570425384, name: "try", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI570425384, name: "except", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI570425384, name: "finally", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI570425384, name: "table-type", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI570425384, name: "array-type", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI570425384, name: "case", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI570425384, name: "table-set!", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI570425384, name: "table-get", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI570425384, name: "table-has-key", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI570425384, name: "continue", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI570425384, name: "break", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI570425384, name: "join-lists", len: 0, sons: null}}};
NTI570425384.node = NNI570425384;
var NNI570425391 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI570425391, name: "number", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI570425391, name: "string", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI570425391, name: "bool", len: 0, sons: null}}};
NTI570425391.node = NNI570425391;
NTI570425437.base = NTI570425393;
var NNI570425451 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1107296259, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI570425393, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI570425393, name: "Field2", sons: null}]};
NTI570425451.node = NNI570425451;
NTI570425448.base = NTI570425451;
var NNI570425445 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI570425448, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI570425445.node = NNI570425445;
NTI570425452.base = NTI33554449;
NTI570425453.base = NTI570425393;
NTI570425454.base = NTI33554449;
NTI570425465.base = NTI570425393;
var NNI570425406 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "line", len: 0, typ: NTI33554435, name: "line", sons: null}, 
{kind: 1, offset: "tags", len: 0, typ: NTI570425407, name: "tags", sons: null}, 
{kind: 1, offset: "enumType", len: 0, typ: NTI570425393, name: "enumType", sons: null}, 
{kind: 3, offset: "kind", len: 20, typ: NTI570425392, name: "kind", sons: [[setConstr(19), {kind: 1, offset: "member", len: 0, typ: NTI33554449, name: "member", sons: null}], 
[setConstr(17), {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI33554449, name: "className", sons: null}, 
{kind: 1, offset: "classParent", len: 0, typ: NTI570425393, name: "classParent", sons: null}, 
{kind: 1, offset: "classFields", len: 0, typ: NTI570425415, name: "classFields", sons: null}, 
{kind: 1, offset: "classMethods", len: 0, typ: NTI570425415, name: "classMethods", sons: null}]}], 
[setConstr(18), {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "classObjType", len: 0, typ: NTI570425393, name: "classObjType", sons: null}, 
{kind: 1, offset: "classObjFields", len: 0, typ: NTI570425415, name: "classObjFields", sons: null}, 
{kind: 1, offset: "classObjMethods", len: 0, typ: NTI570425415, name: "classObjMethods", sons: null}]}], 
[setConstr(14, 15, 16), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(10), {kind: 1, offset: "dot", len: 0, typ: NTI33554449, name: "dot", sons: null}], 
[setConstr(3), {kind: 1, offset: "keyword", len: 0, typ: NTI570425384, name: "keyword", sons: null}], 
[setConstr(9), {kind: 3, offset: "atomicKind", len: 3, typ: NTI570425391, name: "atomicKind", sons: [[setConstr(0), {kind: 1, offset: "num", len: 0, typ: NTI33554445, name: "num", sons: null}], 
[setConstr(1), {kind: 1, offset: "str", len: 0, typ: NTI33554449, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "boolean", len: 0, typ: NTI33554466, name: "boolean", sons: null}]]}], 
[setConstr(0), {kind: 1, offset: "sym", len: 0, typ: NTI33554449, name: "sym", sons: null}], 
[setConstr(5), {kind: 1, offset: "atomicType", len: 0, typ: NTI570425391, name: "atomicType", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kids", len: 0, typ: NTI570425437, name: "kids", sons: null}, 
{kind: 1, offset: "listType", len: 0, typ: NTI570425393, name: "listType", sons: null}]}], 
[setConstr(4), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tableVal", len: 0, typ: NTI570425445, name: "tableVal", sons: null}, 
{kind: 1, offset: "tableType", len: 0, typ: NTI570425393, name: "tableType", sons: null}]}], 
[setConstr(2), {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "funcParams", len: 0, typ: NTI570425452, name: "funcParams", sons: null}, 
{kind: 1, offset: "funcTypes", len: 0, typ: NTI570425453, name: "funcTypes", sons: null}, 
{kind: 1, offset: "funcBody", len: 0, typ: NTI570425393, name: "funcBody", sons: null}, 
{kind: 1, offset: "funcReturnType", len: 0, typ: NTI570425393, name: "funcReturnType", sons: null}, 
{kind: 1, offset: "funcObj", len: 0, typ: NTI570425393, name: "funcObj", sons: null}]}], 
[setConstr(11), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "templateParams", len: 0, typ: NTI570425454, name: "templateParams", sons: null}, 
{kind: 1, offset: "templateBody", len: 0, typ: NTI570425393, name: "templateBody", sons: null}]}], 
[setConstr(6), {kind: 1, offset: "objectTypeFields", len: 0, typ: NTI570425415, name: "objectTypeFields", sons: null}], 
[setConstr(8), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "objectType", len: 0, typ: NTI570425393, name: "objectType", sons: null}, 
{kind: 1, offset: "objectFields", len: 0, typ: NTI570425415, name: "objectFields", sons: null}]}], 
[setConstr(7), {kind: 1, offset: "enumTypeValues", len: 0, typ: NTI570425465, name: "enumTypeValues", sons: null}], 
[setConstr(12), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tableKeyType", len: 0, typ: NTI570425393, name: "tableKeyType", sons: null}, 
{kind: 1, offset: "tableValueType", len: 0, typ: NTI570425393, name: "tableValueType", sons: null}]}], 
[setConstr(13), {kind: 1, offset: "arrayValueType", len: 0, typ: NTI570425393, name: "arrayValueType", sons: null}]]}]};
NTI570425406.node = NNI570425406;
NTI570425393.base = NTI570425406;
NTI570431561.base = NTI570425393;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555173.base = NTI33555171;
NTI134217746.base = NTI33555173;
var NNI1107296604 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554444, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554444, name: "Field1", sons: null}]};
NTI1107296604.node = NNI1107296604;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
NTI134217747.base = NTI134217746;
var NNI570425630 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI570425393, name: "Field1", sons: null}]};
NTI570425630.node = NNI570425630;
var NNI570426079 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI570425393, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI570425393, name: "Field1", sons: null}]};
NTI570426079.node = NNI570426079;
var NNI570425394 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI570425394, name: "skBlock", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI570425394, name: "skFunction", len: 0, sons: null}}};
NTI570425394.node = NNI570425394;
NTI570431977.base = NTI570425393;
var NNI704643381 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI704643381.node = NNI704643381;
NTI570427886.base = NTI570425393;
var NNI570425401 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI570425401.node = NNI570425401;
NTI570425401.base = NTI33555173;
var NNI570425400 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI570425400.node = NNI570425400;
NTI570425400.base = NTI33555173;
NTI570427200.base = NTI570425393;
var NNI570425399 = {kind: 1, offset: "value", len: 0, typ: NTI570425393, name: "value", sons: null};
NTI570425399.node = NNI570425399;
NTI570425399.base = NTI33555173;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555172;
NTI536871245.base = NTI33554449;
NTI570434255.base = NTI33554449;
NTI570434256.base = NTI570425393;

function cstrToNimstr(c_p0) {
      var ln = c_p0.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_p0.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_p0.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_p0) {
  var result_33556910 = null;

    var res_33556964 = newSeq__system_u2507((s_p0).length);
    var i_33556965 = 0;
    var j_33556966 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556965 < (s_p0).length)) break Label2;
          var c_33556967 = s_p0[i_33556965];
          if ((c_33556967 < 128)) {
          res_33556964[j_33556966] = String.fromCharCode(c_33556967);
          i_33556965 += 1;
          }
          else {
            var helper_33556993 = newSeq__system_u2507(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556994 = c_33556967.toString(16);
                  if ((((code_33556994) == null ? 0 : (code_33556994).length) == 1)) {
                  helper_33556993.push("%0");;
                  }
                  else {
                  helper_33556993.push("%");;
                  }
                  
                  helper_33556993.push(code_33556994);;
                  i_33556965 += 1;
                  if ((((s_p0).length <= i_33556965) || (s_p0[i_33556965] < 128))) {
                  break Label3;
                  }
                  
                  c_33556967 = s_p0[i_33556965];
                }
            };
++excHandler;
            try {
            res_33556964[j_33556966] = decodeURIComponent(helper_33556993.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556964[j_33556966] = helper_33556993.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556966 += 1;
        }
    };
    if (res_33556964.length < j_33556966) { for (var i = res_33556964.length ; i < j_33556966 ; ++i) res_33556964.push(null); }
               else { res_33556964.length = j_33556966; };
    result_33556910 = res_33556964.join("");

  return result_33556910;

}

function raiseException(e_p0, ename_p1) {
    e_p0.name = ename_p1;
    if ((excHandler == 0)) {
    unhandledException(e_p0);
    }
    
    throw e_p0;

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_p0, src_p1, ti_p2) {
  var result_33557321 = null;

    switch (ti_p2.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer__system_u2869(ti_p2))) {
      result_33557321 = src_p1;
      }
      else {
        result_33557321 = [src_p1[0], src_p1[1]];
      }
      
      break;
    case 19:
            if (dest_p0 === null || dest_p0 === undefined) {
        dest_p0 = {};
      }
      else {
        for (var key in dest_p0) { delete dest_p0[key]; }
      }
      for (var key in src_p1) { dest_p0[key] = src_p1[key]; }
      result_33557321 = dest_p0;
    
      break;
    case 18:
    case 17:
      if (!((ti_p2.base == null))) {
      result_33557321 = nimCopy(dest_p0, src_p1, ti_p2.base);
      }
      else {
      if ((ti_p2.kind == 17)) {
      result_33557321 = (dest_p0 === null || dest_p0 === undefined) ? {m_type: ti_p2} : dest_p0;
      }
      else {
        result_33557321 = (dest_p0 === null || dest_p0 === undefined) ? {} : dest_p0;
      }
      }
      nimCopyAux(result_33557321, src_p1, ti_p2.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_p1)) { 
        if(dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
          dest_p0 = new src_p1.constructor(src_p1);
        } else {
          dest_p0.set(src_p1, 0);
        }
        result_33557321 = dest_p0;
      } else {
        if (src_p1 === null) {
          result_33557321 = null;
        }
        else {
          if (dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
            dest_p0 = new Array(src_p1.length);
          }
          result_33557321 = dest_p0;
          for (var i = 0; i < src_p1.length; ++i) {
            result_33557321[i] = nimCopy(result_33557321[i], src_p1[i], ti_p2.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_p1 === null) {
        result_33557321 = null;
      }
      else {
        if (dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
          dest_p0 = new Array(src_p1.length);
        }
        result_33557321 = dest_p0;
        for (var i = 0; i < src_p1.length; ++i) {
          result_33557321[i] = nimCopy(result_33557321[i], src_p1[i], ti_p2.base);
        }
      }
    
      break;
    case 28:
            if (src_p1 !== null) {
        result_33557321 = src_p1.slice(0);
      }
    
      break;
    default: 
      result_33557321 = src_p1;
      break;
    }

  return result_33557321;

}

function mnewString(len_p0) {
        var result = new Array(len_p0);
    for (var i = 0; i < len_p0; i++) {result[i] = 0;}
    return result;
  

  
}

function addInt(a_p0, b_p1) {
        var result = a_p0 + b_p1;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_p0, a_p1, b_p2) {
  var result_33557361 = 0;

  BeforeRet: {
    if (((a_p1 <= i_p0) && (i_p0 <= b_p2))) {
    result_33557361 = i_p0;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557361;

}

function chckIndx(i_p0, a_p1, b_p2) {
  var result_33557356 = 0;

  BeforeRet: {
    if (((a_p1 <= i_p0) && (i_p0 <= b_p2))) {
    result_33557356 = i_p0;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_p0, a_p1, b_p2);
    }
    
  };

  return result_33557356;

}

function subInt(a_p0, b_p1) {
        var result = a_p0 - b_p1;
    checkOverflowInt(result);
    return result;
  

  
}

function cmpClosures(a_p0, b_p1) {
        if (a_p0 !== null && a_p0.ClP_0 !== undefined &&
        b_p1 !== null && b_p1.ClP_0 !== undefined) {
      return a_p0.ClP_0 == b_p1.ClP_0 && a_p0.ClE_0 == b_p1.ClE_0;
    } else {
      return a_p0 == b_p1;
    }
  

  
}
var ConstSet2 = setConstr([88, 148]);
      var toTag_1627390300 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "html", "head", "title", "base", "link", "meta", "style", "script", "noscript", "body", "section", "nav", "article", "aside", "h1", "h2", "h3", "h4", "h5", "h6", "hgroup", "header", "footer", "address", "main", "p", "hr", "pre", "blockquote", "ol", "ul", "li", "dl", "dt", "dd", "figure", "figcaption", "div", "a", "em", "strong", "small", "s", "cite", "quote", "dfn", "abbr", "data", "time", "code", "var", "samp", "kbd", "sub", "sup", "i", "b", "u", "mark", "ruby", "rt", "rp", "bdi", "dbo", "span", "br", "wbr", "ins", "del", "img", "iframe", "embed", "object", "param", "video", "audio", "source", "track", "canvas", "map", "area", "animate", "animateMotion", "animateTransform", "circle", "clipPath", "defs", "desc", "discard", "ellipse", "feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence", "filter", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "set", "stop", "svg", "switch", "symbol", "text", "textPath", "tspan", "unknown", "use", "view", "maction", "math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msubsup", "msup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover", "semantics", "table", "caption", "colgroup", "col", "tbody", "thead", "tfoot", "tr", "td", "th", "form", "fieldset", "legend", "label", "input", "button", "select", "datalist", "optgroup", "option", "textarea", "keygen", "output", "progress", "meter", "details", "summary", "command", "menu", "bdo", "dialog", "slot", "template"];
var ConstSet3 = setConstr([149, 179]);
var ConstSet4 = setConstr([88, 148]);
      var toEventName_1627390377 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater", "load", "transitioncancel", "transitionend", "transitionrun", "transitionstart", "paste", "wheel", "audioprocess", "canplay", "canplaythrough", "complete", "durationchange", "emptied", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"];
var ConstSet5 = setConstr([88, 148]);

function nimMin(a_p0, b_p1) {
    var Temporary1;

  var result_33557144 = 0;

  BeforeRet: {
    if ((a_p0 <= b_p1)) {
    Temporary1 = a_p0;
    }
    else {
    Temporary1 = b_p1;
    }
    
    result_33557144 = Temporary1;
    break BeforeRet;
  };

  return result_33557144;

}

function makeNimstrLit(c_p0) {
      var result = [];
  for (var i = 0; i < c_p0.length; ++i) {
    result[i] = c_p0.charCodeAt(i);
  }
  return result;
  

  
}
            var scripts_570441196 = [{kind: 1, name: [99,104,101,115,115], code: makeNimstrLit("(block\x0A    (vec2 := (object-type ((x number) (y number)))) ;; 2D vector type\x0A    (Team := (enum-type \"white\" \"black\")) ;; Team enum type\x0A\x0A    (PieceKind := (enum-type \"pawn\" \"rook\" \"knight\" \"bishop\" \"queen\" \"king\")) \x0A    \x0A    ;; Type for a chess piece\x0A    (piece := (object-type ( \x0A        (kind PieceKind)\x0A        (pos vec2)\x0A        (team Team)\x0A        (did-pawn-move bool)\x0A    )))\x0A\x0A    ;; Type for a chess board\x0A    (State := (object-type (\x0A        (board (table-type vec2 piece))\x0A        (current-team Team)\x0A        (turn number)\x0A    )))\x0A\x0A    ;; Function to create a new chess piece\x0A    (new-state := (\\ () State\x0A        (current-team := \"white\")\x0A        (turn := 0)\x0A        (board := (table))\x0A        (for y (1 .. 8)\x0A            (for x (1 .. 8)\x0A                (if (not (contains (quote (1 2 7 8)) x))\x0A                    (continue)\x0A                )\x0A                (pos := (vec2 ((x x) (y y))))\x0A                (kind := (case x\x0A                    ((2 7) \"pawn\")\x0A                    ((1 8)\x0A                        (case y\x0A                            (1 \"rook\")\x0A                            (2 \"knight\")\x0A                            (3 \"bishop\")\x0A                            (4 \"queen\")\x0A                            (5 \"king\")\x0A                            (6 \"bishop\")\x0A                            (7 \"knight\")\x0A                            (8 \"rook\")\x0A                        )\x0A                    ))\x0A                )\x0A                (did-pawn-move := false)\x0A                (team := (if ((x == 1) or (x == 2)) \"white\" \"black\"))\x0A                (piece := (piece (\x0A                    (kind kind)\x0A                    (pos pos) \x0A                    (team team)\x0A                    (did-pawn-move did-pawn-move)\x0A                )))\x0A                (table-set! board pos piece)\x0A            )\x0A        )\x0A        (State ((board board) (current-team current-team) (turn turn)))\x0A    ))\x0A\x0A    ;; Function to translate a piece to a character\x0A    (piece-kind-char := (\\ ((kind PieceKind) (team Team)) string\x0A        (case team\x0A            (\"white\"\x0A                (case kind\x0A                    (\"pawn\" \"\xE2\x99\x99\")\x0A                    (\"rook\" \"\xE2\x99\x96\")\x0A                    (\"knight\" \"\xE2\x99\x98\")\x0A                    (\"bishop\" \"\xE2\x99\x97\")\x0A                    (\"queen\" \"\xE2\x99\x95\")\x0A                    (\"king\" \"\xE2\x99\x94\")\x0A                )\x0A            )\x0A            (\"black\"\x0A                (case kind\x0A                    (\"pawn\" \"\xE2\x99\x9F\")\x0A                    (\"rook\" \"\xE2\x99\x9C\")\x0A                    (\"knight\" \"\xE2\x99\x9E\")\x0A                    (\"bishop\" \"\xE2\x99\x9D\")\x0A                    (\"queen\" \"\xE2\x99\x9B\")\x0A                    (\"king\" \"\xE2\x99\x9A\")\x0A                )\x0A            )\x0A        )\x0A    ))\x0A \x0A    ;; Function to convert the state to a string representation\x0A    (state-as-str := (\\ ((state State)) string\x0A        (result := \"\")\x0A        (for y (1 .. 8)\x0A            (for x (1 .. 8)\x0A                (pos := (vec2 ((x x) (y y))))\x0A                (case (table-has-key state.board pos)\x0A                    (true\x0A                        (piece := (table-get state.board pos))\x0A                        (str-add result (piece-kind-char piece.kind piece.team))\x0A                    )\x0A                    (false\x0A                        (str-add result \".\")\x0A                    )\x0A                )\x0A                (str-add result \" \")\x0A            )\x0A            (str-add result \"\\n\") \x0A        )\x0A        result\x0A    ))\x0A\x0A    (state := (new-state)) ;; Create a new chess state\x0A    (tmp := (state-as-str state)) ;; Convert the state to a string representation\x0A    (echo tmp) ;; Print the string representation of the state\x0A)")}, {kind: 0, name: [99,108,97,115,115,101,115], code: makeNimstrLit(";; This script tests the class system of the language.\x0A;; It creates a base class Animal and a derived class Dog.\x0A;; It also creates a derived class DumbDog that inherits from Dog.\x0A\x0A(was-dog := false) ;; Global variable to track if the last animal was a dog\x0A\x0A\x0A(class Animal void ;; Base class\x0A    (field id number) ;; Field of type number\x0A\x0A    (method speak (\\ () void ;; Method with no arguments and no return value\x0A        (echo \"I am an animal\")\x0A        (was-dog = false) \x0A    ))\x0A)\x0A\x0A(class Dog Animal ;; Derived class\x0A    (field name string)\x0A\x0A    (method speak (\\ () void\x0A        (echo \"I am a dog\")\x0A        (echo \"My name is:\")\x0A        (echo @name)\x0A        (was-dog = true)\x0A    ))\x0A)\x0A\x0A(class DumbDog Dog) ;; Derived class from Dog\x0A\x0A(a := (Animal (id 1))) ;; Create an instance of Animal (variable of type Animal)\x0A(d := (Dog (name \"Burek\") (id 2))) ;; Create an instance of Dog (variable of type Dog)\x0A\x0A(a.id must-equal 1)\x0A(d.id must-equal 2)\x0A\x0A(a.speak) ;; Call the speak method of Animal\x0A(was-dog must-equal false)\x0A(d.speak) ;; Call the speak method of Dog\x0A(was-dog must-equal true)\x0A \x0A(a = d) ;; Assign the instance of Dog to the variable a, changing it\'s type to Animal\x0A\x0A(a.id must-equal 2)\x0A\x0A(was-dog = false)\x0A(a.speak)\x0A(was-dog must-equal true)\x0A\x0A(was-dog = false)\x0A(dd := (DumbDog (name \"Maks\") (id 3))) ;; Create an instance of DumbDog (variable of type DumbDog)\x0A(dd.speak)\x0A(was-dog must-equal true)")}, {kind: 0, name: [99,111,114,101], code: makeNimstrLit(";; Core tests for the language.\x0A\x0A(block \x0A    (block\x0A        (vec2 := (object-type ((x number) (y number)))) ;; Define a type with two fields: x and y.\x0A        (v := (vec2 ((x 10) (y 20)))) ;; Create an instance of vec2 with x=10 and y=20.\x0A        (v.x must-equal 10) ;; `must-equal` is a binary operator.\x0A        (v.y must-equal 20)\x0A        (person := (object-type ((name string) (pos vec2)))) ;; Define a type with a string field and a vec2 field.\x0A        (p := (person ((name \"John\") (pos v)))) ;; Create an instance of person with name \"John\" and position v.\x0A        (p.name must-equal \"John\")\x0A        (p.pos.x must-equal 10)\x0A        (p.pos.y must-equal 20)\x0A        (p.pos must-equal (vec2 ((x 10) (y 20))))\x0A    )\x0A\x0A    (block\x0A        (piece-kind := (enum-type \"pawn\" \"rook\" \"knight\" \"bishop\" \"queen\" \"king\")) ;; Define an enumeration type for chess pieces.\x0A        (x := (piece-kind \"pawn\")) ;; Create an instance of piece-kind with value \"pawn\".\x0A        (x must-equal \"pawn\")\x0A        (did-raise := false) ;; Variable (will go out of scope at the end of the parent `block`).\x0A        \x0A        (block\x0A            (y := (piece-kind \"rook\"))  \x0A            (y must-equal \"rook\")\x0A            (y = \"queen\") ;; Assign a new value to y. (The new value can\'t change the variable\'s type, for safety reasons.)\x0A            (y must-equal \"queen\")\x0A        )\x0A        \x0A        ;; Error catching test.\x0A        (try\x0A            (x = \"xyz\") ;; This is invalid because \"xyz\" is a string and `x` is a variable of type `piece-kind`.\x0A            (except\x0A                (did-raise = true)\x0A            )\x0A            (finally\x0A                (x = \"knight\")\x0A            )\x0A        )\x0A        (x must-equal \"knight\")\x0A        (did-raise must-equal true)\x0A    )\x0A\x0A    (block\x0A        (b := 2)\x0A        ((1 + b) must-equal 3) ;; `+` is a binary operator.\x0A        (block\x0A            (b := 10) ;; This `b` shadows the outer `b`.\x0A            ((1 + b) must-equal 11)\x0A        )\x0A        ((1 + b) must-equal 3) ;; This `b` is the outer `b`.\x0A    )\x0A\x0A    (block\x0A        (cond := false)\x0A        ((if cond \"prawda\" \"falsz\") must-equal \"falsz\") ;; `if` is a ternary operator.\x0A    )\x0A\x0A    (block\x0A        ;; Define a function `f` that takes two arguments and returns their sum.\x0A        ;; `any` is a special pseudo-type that avoid type checking the value returned by the function.\x0A        ;; `a` and `b` are implicitly untyped, look below to see typed function parameters.\x0A        (f := (\\ (a b) any (a + b))) \x0A\x0A        ((f 10 20) must-equal 30) ;; We call `f`.\x0A\x0A        ;; We create a new table datatype with some key-value pairs and get the value of key \"b\".\x0A        (((table (\"a\" \"A\") (\"b\" \"B\") (\"c\" \"C\")) \"b\") must-equal \"B\")\x0A    )\x0A\x0A    (block\x0A        ;; Define a function `f` that takes two arguments of type number and returns their sum.\x0A        ;; The types are checked at runtime.\x0A        (f := (\\ ((a number) (b number)) number (a + b)))\x0A        ((f 100 200) must-equal 300)\x0A    )\x0A\x0A    (block\x0A        (x := false)\x0A        (y := false)\x0A        (f := (\\ () void (x = true) (y = true))) ;; Function with multiple statements without an explicit containing `block`.\x0A        (f) ;; Call the function `f`.\x0A        (x must-equal true)\x0A        (y must-equal true)\x0A    )\x0A)")}, {kind: 0, name: [104,101,108,108,111,45,119,111,114,108,100], code: makeNimstrLit(";; Functions are called by placing them as the first elemenet a paranthesis pair.\x0A;; The other elements are the arguments to the function.\x0A;; `echo` is a function that prints its arguments to the console.\x0A(echo \"Hello world!\")")}, {kind: 0, name: [104,116,109,108], code: makeNimstrLit(";; HTML builder function (translated AST nodes tree to a HTML string).\x0A\x0A(block\x0A    ;; Tags that shouldn\'t be closed.\x0A    (self-closing-tags := (quote (\x0A        \"area\" \"base\" \"br\" \"col\" \"embed\" \"hr\" \"img\" \"input\" \"keygen\" \"link\" \"menuitem\" \"meta\" \"param\" \"source\" \"track\" \"wbr\"\x0A    )))\x0A\x0A    ;; This is the functino.\x0A    (build-html := (\\ (tree) any\x0A        ;; Build HTML from a tree made of nested lists.\x0A        \x0A        (result := \"\")\x0A        ;; HTML output is appended to this variable.\x0A\x0A        (indent := (- 1))\x0A        ;; We keep indentation for pretty formatting.\x0A\x0A        (helper := (\\ (l) any\x0A            ;; This function recursively travels the tree.\x0A            ;; This function won\'t be accessible from the outside of the build-html function.\x0A\x0A            (for _ (0 .. indent)\x0A                (str-add result \"  \") ;; For pretty output.\x0A            )\x0A            ;; Padding for nested tags\x0A\x0A            (expect (is-list l) true)\x0A            (expect (len l) 3)\x0A            ;; Every tag is a list with name, attributes and body.\x0A\x0A            (tag := (to-str (l 0))) ;; First element is tag.\x0A            (attributes := (l 1)) ;; Second element is attributes.\x0A            (body := (l 2)) ;; Body is the last element.\x0A\x0A            (str-add result \"<\" tag) ;; Opening the tag.\x0A\x0A            (if (not (empty? attributes))\x0A                (str-add result \" \") \x0A            )\x0A            ;; Apply HTML attributes.\x0A            (for (idx el) attributes\x0A                (expect (is-list el) true)\x0A                (expect (len el) 2)\x0A                \x0A                (field-name := (el 0))\x0A                (field-val := (el 1))\x0A                \x0A                (str-add result\x0A                (to-str field-name)\x0A                \"=\\\"\"\x0A                (to-str field-val)\x0A                \"\\\"\"\x0A                )\x0A                (if (!= idx (high attributes))\x0A                    (str-add result \" \")\x0A                )\x0A            ) \x0A\x0A            (str-add result \">\") ;; Closing the bracket pair.\x0A\x0A            (if (is-list body) ;; If body is a list, then it\'s a nested tag.\x0A                (if (not (empty? body))\x0A                    (block\x0A                        (str-add result \"\\n\")\x0A                        \x0A                        (for el body\x0A                            (indent += 1)\x0A\x0A                            (helper el) ;; Recursive call!\x0A                            (str-add result \"\\n\")\x0A\x0A                            (indent -= 1)\x0A                        )\x0A                    )\x0A                )\x0A                (block\x0A                    (expect (is-str body) true)  ;; Expecting text content for the tag.\x0A\x0A                    (str-add result \"\\n\")\x0A                    (for _ (0 .. (indent + 1))\x0A                        (str-add result \"  \")\x0A                    )\x0A                    (str-add result body)\x0A                    (str-add result \"\\n\")\x0A                )\x0A            )\x0A\x0A            (if (not (contains self-closing-tags tag)) ;; Close the opened tag (if it\'s not self-closing).\x0A                (block\x0A                    (for _ (0 .. indent)\x0A                        (str-add result \"  \")\x0A                    )\x0A                    (str-add result \"</\")\x0A                    (str-add result tag)\x0A                    (str-add result \">\")\x0A                )\x0A\x0A                (block\x0A                    (expect (empty? body) true) ;; If it\'s a self-closing tag, then it can\'t have a body anyway.\x0A                )\x0A            )\x0A        ))\x0A\x0A        (helper tree)\x0A        \x0A        result ;; Implicit return.\x0A    ))\x0A\x0A    (html :=\x0A      (build-html\x0A        (quote\x0A          (\"div\" ((\"css\" \"bg-red-500 w-full\") (\"style\" \"opacity: 0.5\")) (\x0A            (\"input\" ((\"type\" \"text\") (\"name\" \"username\")) ())\x0A            (\"input\" ((\"type\" \"password\") (\"name\" \"password\")) ())\x0A            (\"div\" () (\x0A              (\"div\" () \"text\")\x0A            ))\x0A          ))\x0A        )\x0A      )\x0A    )\x0A\x0A    (expected-html := \"<div css=\\\"bg-red-500 w-full\\\" style=\\\"opacity: 0.5\\\">\\n  <input type=\\\"text\\\" name=\\\"username\\\">\\n  <input type=\\\"password\\\" name=\\\"password\\\">\\n  <div>\\n    <div>\\n      text\\n    </div>\\n  </div>\\n</div>\")\x0A\x0A    (html must-equal expected-html)\x0A)")}, {kind: 0, name: [109,97,99,114,111,115], code: makeNimstrLit(";; Macros tests\x0A;; This script tests the macro system of the language.\x0A\x0A(block\x0A    (block\x0A        ;; Template that runs `body` if `cond` is false (inverse of `if`)\x0A        ;; ^unqote is used to unquote the body (\"inlining\" it in the code *without* evaluation!)\x0A        ;; ^unquote-splicing is used to unquote the body (\"inlining\" it in the code *with* evaluation!), but it also unpacks all the elements such that they belong to the parent node (in this case, `block`).\x0A        (unless := (template (cond body)\x0A            (if (not ^unquote cond)\x0A                (block\x0A                    ^unquote-splicing body\x0A                )\x0A            )\x0A        ))\x0A\x0A        (x := false)\x0A        (y := false)\x0A        (counter := 0)\x0A\x0A        (unless true ((y = true) (counter += 1))) ;; should not run\x0A        (unless false ((x = true) (counter += 1))) ;; should run\x0A\x0A        (counter must-equal 1)\x0A        (y must-equal false)\x0A        (x must-equal true)\x0A    )\x0A\x0A    (block\x0A        ;; TODO: need a macro magic that will automatically 1) quote input 2) evaluate output before returning it\x0A\x0A        ;; This is a macro that reverses the `input` expression nodes (not recursive, depth=1) and evaluates the expression.\x0A        (reverse-expr := (\\ (input) any\x0A            (helper := (\\ (input) any\x0A                (if (not (is-list input))\x0A                    (return input)\x0A                )\x0A\x0A                (result := (quote ()))\x0A                ;; (echo result)\x0A                (i := (high input))\x0A                (while (i >= 0)\x0A                    (add result (helper (input i)))\x0A                    (i -= 1)\x0A                )\x0A                result\x0A            ))\x0A\x0A            (result := (helper input))\x0A\x0A            (eval result)\x0A        ))\x0A\x0A        ((reverse-expr (quote (1 2 3 4 5 +))) must-equal 15) ;; This works because if we reverse the arguments, + is the first element, making the expression a function call.\x0A    )\x0A)")}];

function eqStrings(a_p0, b_p1) {
        if (a_p0 == b_p1) return true;
    if (a_p0 === null && b_p1.length == 0) return true;
    if (b_p1 === null && a_p0.length == 0) return true;
    if ((!a_p0) || (!b_p1)) return false;
    var alen = a_p0.length;
    if (alen != b_p1.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_p0[i] != b_p1[i]) return false;
    return true;
  

  
}

function reprEnum(e_p0, typ_p1) {
  var result_33557626 = [];

    var tmp_33557627 = false;
    var item_33557628 = typ_p1.node.sons[e_p0];
    tmp_33557627 = item_33557628 !== undefined;
    if (tmp_33557627) {
    result_33557626 = nimCopy(null, makeNimstrLit(item_33557628.name), NTI33554449);
    }
    else {
      result_33557626 = nimCopy(null, (HEX24__systemZdollars_u8(e_p0)).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41]), NTI33554449);
    }
    

  return result_33557626;

}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
var ConstSet6 = setConstr();

function addChar(x_p0, c_p1) {
    x_p0.push(c_p1);

  
}
var ConstSet7 = setConstr(12);

function raiseFieldError2(f_p0, discVal_p1) {
    raiseException({message: (f_p0).concat(discVal_p1,[39]), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_p0) {
  var result_33556445 = [];

    if (x_p0) {
    result_33556445 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556445 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556445;

}

function reprDiscriminant(e_p0, typ_p1) {
    var Temporary1;

  var result_33557664 = [];

    switch (typ_p1.kind) {
    case 14:
      Temporary1 = reprEnum(e_p0, typ_p1);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_p0 == 0)));
      break;
    default: 
      Temporary1 = HEX24__systemZdollars_u8(e_p0);
      break;
    }
    result_33557664 = nimCopy(null, Temporary1, NTI33554449);

  return result_33557664;

}

function SetCard(a_p0) {
        var result = 0;
    for (var elem in a_p0) { ++result; }
    return result;
  

  
}
var ConstSet8 = setConstr();
var ConstSet9 = setConstr(1);
var ConstSet10 = setConstr();
var ConstSet11 = setConstr(1);
var ConstSet12 = setConstr();
var ConstSet13 = setConstr(1);
var ConstSet14 = setConstr(9);
var ConstSet15 = setConstr(9);
var ConstSet16 = setConstr(9);
var ConstSet17 = setConstr(8);
var ConstSet18 = setConstr();
var ConstSet19 = setConstr(1);
var ConstSet20 = setConstr(7);
var ConstSet21 = setConstr();
var ConstSet22 = setConstr(1);
var ConstSet23 = setConstr();
var ConstSet24 = setConstr(1);
var ConstSet25 = setConstr(0);
var ConstSet26 = setConstr();
var ConstSet27 = setConstr(1);
var ConstSet28 = setConstr(1);
var ConstSet29 = setConstr();
var ConstSet30 = setConstr(1);
var ConstSet31 = setConstr(2);
var ConstSet32 = setConstr();
var ConstSet33 = setConstr(1);
var ConstSet34 = setConstr(5);
var ConstSet35 = setConstr();
var ConstSet36 = setConstr(1);
var ConstSet37 = setConstr(6);
var ConstSet38 = setConstr();
var ConstSet39 = setConstr(1);
var ConstSet40 = setConstr(1);
var ConstSet41 = setConstr(1);
var ConstSet42 = setConstr(1);
var ConstSet43 = setConstr(12, 2, 10, 4, 29, 26, 30, 20, 34, 35, 16, 39, 41, 40, 42);
var ConstSet44 = setConstr(3);
var ConstSet45 = setConstr(1);
var ConstSet46 = setConstr(1);
var ConstSet47 = setConstr(12, 2, 10, 4, 29, 26, 30, 20, 34, 35, 16, 39, 41, 40, 42);
var ConstSet48 = setConstr(3);
var ConstSet49 = setConstr(1);
var ConstSet50 = setConstr(1);
var ConstSet51 = setConstr(1);
var ConstSet52 = setConstr(1);
var ConstSet53 = setConstr(1);
var ConstSet54 = setConstr(13, 10);
var ConstSet55 = setConstr(33, [37, 38], [42, 43], [45, 58], [60, 90], 92, [94, 95], [97, 122], 124, 126);
var ConstSet56 = setConstr(33, [37, 38], [42, 43], [45, 58], [60, 90], 92, [94, 95], [97, 122], 124, 126);
              var tags_570431170 = [[117,110,113,117,111,116,101], [117,110,113,117,111,116,101,45,115,112,108,105,99,105,110,103]];
var ConstSet57 = setConstr([65, 90]);
var ConstSet58 = setConstr(34, 92);

function nimCharToStr(x_p0) {
  var result_33556448 = [];

    result_33556448 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556448[0] = x_p0;

  return result_33556448;

}
var ConstSet59 = setConstr(46, [48, 57]);
var ConstSet60 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet61 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet62 = setConstr([48, 57]);
var ConstSet63 = setConstr([48, 57]);
var ConstSet64 = setConstr(101, 69);
var ConstSet65 = setConstr([48, 57]);
var ConstSet66 = setConstr([48, 57]);

function nimParseBiggestFloat(s_p0, number_p1, number_p1_Idx) {
    var Temporary1;

  var result_33557484 = 0;

  BeforeRet: {
    var sign_33557485 = false;
    var i_33557486 = 0;
    if ((s_p0[i_33557486] == 43)) {
    i_33557486 += 1;
    }
    else {
    if ((s_p0[i_33557486] == 45)) {
    sign_33557485 = true;
    i_33557486 += 1;
    }
    }
    if (((s_p0[i_33557486] == 78) || (s_p0[i_33557486] == 110))) {
    if (((s_p0[(i_33557486 + 1)] == 65) || (s_p0[(i_33557486 + 1)] == 97))) {
    if (((s_p0[(i_33557486 + 2)] == 78) || (s_p0[(i_33557486 + 2)] == 110))) {
    if (!((ConstSet60[s_p0[(i_33557486 + 3)]] != undefined))) {
    number_p1[number_p1_Idx] = NaN;
    result_33557484 = (i_33557486 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557484 = 0;
    break BeforeRet;
    }
    
    if (((s_p0[i_33557486] == 73) || (s_p0[i_33557486] == 105))) {
    if (((s_p0[(i_33557486 + 1)] == 78) || (s_p0[(i_33557486 + 1)] == 110))) {
    if (((s_p0[(i_33557486 + 2)] == 70) || (s_p0[(i_33557486 + 2)] == 102))) {
    if (!((ConstSet61[s_p0[(i_33557486 + 3)]] != undefined))) {
    if (sign_33557485) {
    Temporary1 = -Infinity;
    }
    else {
    Temporary1 = Infinity;
    }
    
    number_p1[number_p1_Idx] = Temporary1;
    result_33557484 = (i_33557486 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557484 = 0;
    break BeforeRet;
    }
    
    var buf_33557505 = [];
    if (sign_33557485) {
    addChar(buf_33557505, 45);;
    }
    
    Label2: {
        Label3: while (true) {
        if (!(ConstSet62[s_p0[i_33557486]] != undefined)) break Label3;
          addChar(buf_33557505, s_p0[i_33557486]);;
          i_33557486 += 1;
          Label4: {
              Label5: while (true) {
              if (!(s_p0[i_33557486] == 95)) break Label5;
                i_33557486 += 1;
              }
          };
        }
    };
    if ((s_p0[i_33557486] == 46)) {
    addChar(buf_33557505, s_p0[i_33557486]);;
    i_33557486 += 1;
    Label6: {
        Label7: while (true) {
        if (!(ConstSet63[s_p0[i_33557486]] != undefined)) break Label7;
          addChar(buf_33557505, s_p0[i_33557486]);;
          i_33557486 += 1;
          Label8: {
              Label9: while (true) {
              if (!(s_p0[i_33557486] == 95)) break Label9;
                i_33557486 += 1;
              }
          };
        }
    };
    }
    
    if (((buf_33557505).length == (sign_33557485 ? 1 : 0))) {
    result_33557484 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet64[s_p0[i_33557486]] != undefined)) {
    addChar(buf_33557505, s_p0[i_33557486]);;
    i_33557486 += 1;
    if ((s_p0[i_33557486] == 43)) {
    i_33557486 += 1;
    }
    else {
    if ((s_p0[i_33557486] == 45)) {
    addChar(buf_33557505, s_p0[i_33557486]);;
    i_33557486 += 1;
    }
    }
    if (!((ConstSet65[s_p0[i_33557486]] != undefined))) {
    result_33557484 = 0;
    break BeforeRet;
    }
    
    Label10: {
        Label11: while (true) {
        if (!(ConstSet66[s_p0[i_33557486]] != undefined)) break Label11;
          addChar(buf_33557505, s_p0[i_33557486]);;
          i_33557486 += 1;
          Label12: {
              Label13: while (true) {
              if (!(s_p0[i_33557486] == 95)) break Label13;
                i_33557486 += 1;
              }
          };
        }
    };
    }
    
    number_p1[number_p1_Idx] = parseFloatNative__system_u3030(buf_33557505);
    result_33557484 = i_33557486;
  };

  return result_33557484;

}
var ConstSet67 = setConstr(33, [37, 38], [42, 43], [45, 58], [60, 90], 92, [94, 95], [97, 122], 124, 126);
var ConstSet68 = setConstr(33, [37, 38], [42, 43], [45, 58], [60, 90], 92, [94, 95], [97, 122], 124, 126);
              var atomicTypes_570431020 = [[110,117,109,98,101,114], [115,116,114,105,110,103], [98,111,111,108]];
              var keywords_570430949 = [[113,117,111,116,101], [101,118,97,108], [58,61], [105,102], [43], [92], [101,99,104,111], [114,101,112,114], [98,108,111,99,107], [116,97,98,108,101], [109,117,115,116,45,101,113,117,97,108], [111,98,106,101,99,116,45,116,121,112,101], [61], [115,116,114,45,97,100,100], [104,105,103,104], [108,111,119], [46,46], [101,120,112,101,99,116], [116,111,45,115,116,114], [105,115,45,108,105,115,116], [61,61], [33,61], [110,111,116], [101,109,112,116,121,63], [97,114,114,97,121,45,103,101,116], [102,105,108,116,101,114,45,97,114,114,97,121], [45], [102,111,114], [108,101,110], [43,61], [45,61], [105,115,45,115,116,114], [99,108,97,115,115], [114,101,116,117,114,110], [111,114], [97,110,100], [99,111,110,116,97,105,110,115], [116,101,109,112,108,97,116,101], [119,104,105,108,101], [60,61], [62,61], [60], [62], [97,100,100], [101,110,117,109,45,116,121,112,101], [116,114,121], [101,120,99,101,112,116], [102,105,110,97,108,108,121], [116,97,98,108,101,45,116,121,112,101], [97,114,114,97,121,45,116,121,112,101], [99,97,115,101], [116,97,98,108,101,45,115,101,116,33], [116,97,98,108,101,45,103,101,116], [116,97,98,108,101,45,104,97,115,45,107,101,121], [99,111,110,116,105,110,117,101], [98,114,101,97,107], [106,111,105,110,45,108,105,115,116,115]];

function mulInt(a_p0, b_p1) {
        var result = a_p0 * b_p1;
    checkOverflowInt(result);
    return result;
  

  
}

function divInt(a_p0, b_p1) {
        if (b_p1 == 0) raiseDivByZero();
    if (b_p1 == -1 && a_p0 == 2147483647) raiseOverflow();
    return Math.trunc(a_p0 / b_p1);
  

  
}
var ConstSet69 = setConstr(18);
var ConstSet70 = setConstr(19);
var ConstSet71 = setConstr(19);
var ConstSet72 = setConstr(10);

function nimMax(a_p0, b_p1) {
    var Temporary1;

  var result_33557148 = 0;

  BeforeRet: {
    if ((b_p1 <= a_p0)) {
    Temporary1 = a_p0;
    }
    else {
    Temporary1 = b_p1;
    }
    
    result_33557148 = Temporary1;
    break BeforeRet;
  };

  return result_33557148;

}
var ConstSet73 = setConstr(0);
var ConstSet74 = setConstr(0);
var ConstSet75 = setConstr(0);
var ConstSet76 = setConstr(0);
var ConstSet77 = setConstr(8);
var ConstSet78 = setConstr(18);
var ConstSet79 = setConstr(18);

function reprAny(p_p0, p_p0_Idx, typ_p1) {
  var result_33557816 = [[]];

    var cl_33557817 = [({recDepth: 0, indent: 0})];
    initReprClosure__system_u3290(cl_33557817[0]);
    reprAux__system_u3292(result_33557816, 0, p_p0, p_p0_Idx, typ_p1, cl_33557817[0]);

  return result_33557816[0];

}
var ConstSet80 = setConstr(3);
var ConstSet81 = setConstr(3);
var ConstSet82 = setConstr(1);
var ConstSet83 = setConstr(1);
var ConstSet84 = setConstr(19);
var ConstSet85 = setConstr(17);
var ConstSet86 = setConstr(17);
var ConstSet87 = setConstr(17);
var ConstSet88 = setConstr(17);
var ConstSet89 = setConstr(17);
var ConstSet90 = setConstr(18);
var ConstSet91 = setConstr(18);
var ConstSet92 = setConstr(18);
var ConstSet93 = setConstr(18);
var ConstSet94 = setConstr(10);
var ConstSet95 = setConstr(3);
var ConstSet96 = setConstr(9);
var ConstSet97 = setConstr(9);
var ConstSet98 = setConstr(0);
var ConstSet99 = setConstr(1);
var ConstSet100 = setConstr(2);
var ConstSet101 = setConstr(0);
var ConstSet102 = setConstr(5);
var ConstSet103 = setConstr(1);
var ConstSet104 = setConstr(1);
var ConstSet105 = setConstr(1);
var ConstSet106 = setConstr(4);
var ConstSet107 = setConstr(4);
var ConstSet108 = setConstr(4);
var ConstSet109 = setConstr(2);
var ConstSet110 = setConstr(2);
var ConstSet111 = setConstr(2);
var ConstSet112 = setConstr(2);
var ConstSet113 = setConstr(2);
var ConstSet114 = setConstr(2);
var ConstSet115 = setConstr(2);
var ConstSet116 = setConstr(2);
var ConstSet117 = setConstr(11);
var ConstSet118 = setConstr(11);
var ConstSet119 = setConstr(11);
var ConstSet120 = setConstr(6);
var ConstSet121 = setConstr(8);
var ConstSet122 = setConstr(8);
var ConstSet123 = setConstr(8);
var ConstSet124 = setConstr(7);
var ConstSet125 = setConstr(12);
var ConstSet126 = setConstr(12);
var ConstSet127 = setConstr(12);
var ConstSet128 = setConstr(12);
var ConstSet129 = setConstr(13);
var ConstSet130 = setConstr(13);
var ConstSet131 = setConstr(4);
var ConstSet132 = setConstr(4);
var ConstSet133 = setConstr(5);
var ConstSet134 = setConstr(5);
var ConstSet135 = setConstr(9);
var ConstSet136 = setConstr(9);
var ConstSet137 = setConstr(9);
var ConstSet138 = setConstr(0);
var ConstSet139 = setConstr(0);
var ConstSet140 = setConstr(1);
var ConstSet141 = setConstr(1);
var ConstSet142 = setConstr(2);
var ConstSet143 = setConstr(2);
var ConstSet144 = setConstr(6);
var ConstSet145 = setConstr(6);
var ConstSet146 = setConstr(8);
var ConstSet147 = setConstr(8);
var ConstSet148 = setConstr(7);
var ConstSet149 = setConstr(7);
var ConstSet150 = setConstr(12);
var ConstSet151 = setConstr(12);
var ConstSet152 = setConstr(12);
var ConstSet153 = setConstr(12);
var ConstSet154 = setConstr(13);
var ConstSet155 = setConstr(13);
var ConstSet156 = setConstr(19);
var ConstSet157 = setConstr(17);
var ConstSet158 = setConstr(17);
var ConstSet159 = setConstr(17);
var ConstSet160 = setConstr(17);
var ConstSet161 = setConstr(17);
var ConstSet162 = setConstr(18);
var ConstSet163 = setConstr(18);
var ConstSet164 = setConstr(5);
var ConstSet165 = setConstr(0);
var ConstSet166 = setConstr(3);
var ConstSet167 = setConstr(10);
var ConstSet168 = setConstr(12);
var ConstSet169 = setConstr(12);
var ConstSet170 = setConstr(13);
var ConstSet171 = setConstr(7);
var ConstSet172 = setConstr(9);
var ConstSet173 = setConstr(0);
var ConstSet174 = setConstr(1);
var ConstSet175 = setConstr(2);
var ConstSet176 = setConstr(8);
var ConstSet177 = setConstr(6);
var ConstSet178 = setConstr(4);
var ConstSet179 = setConstr(1);
var ConstSet180 = setConstr(10);
var ConstSet181 = setConstr(1);
var ConstSet182 = setConstr(1);
var ConstSet183 = setConstr(1);
var ConstSet184 = setConstr(1);
var ConstSet185 = setConstr(19);
var ConstSet186 = setConstr(17);
var ConstSet187 = setConstr(17);
var ConstSet188 = setConstr(17);
var ConstSet189 = setConstr(17);
var ConstSet190 = setConstr(17);
var ConstSet191 = setConstr(18);
var ConstSet192 = setConstr(18);
var ConstSet193 = setConstr(18);
var ConstSet194 = setConstr(18);
var ConstSet195 = setConstr(10);
var ConstSet196 = setConstr(3);
var ConstSet197 = setConstr(9);
var ConstSet198 = setConstr(9);
var ConstSet199 = setConstr(0);
var ConstSet200 = setConstr(1);
var ConstSet201 = setConstr(2);
var ConstSet202 = setConstr(0);
var ConstSet203 = setConstr(5);
var ConstSet204 = setConstr(1);
var ConstSet205 = setConstr(1);
var ConstSet206 = setConstr(1);
var ConstSet207 = setConstr(4);
var ConstSet208 = setConstr(4);
var ConstSet209 = setConstr(4);
var ConstSet210 = setConstr(2);
var ConstSet211 = setConstr(2);
var ConstSet212 = setConstr(2);
var ConstSet213 = setConstr(2);
var ConstSet214 = setConstr(2);
var ConstSet215 = setConstr(2);
var ConstSet216 = setConstr(2);
var ConstSet217 = setConstr(2);
var ConstSet218 = setConstr(11);
var ConstSet219 = setConstr(11);
var ConstSet220 = setConstr(11);
var ConstSet221 = setConstr(6);
var ConstSet222 = setConstr(8);
var ConstSet223 = setConstr(8);
var ConstSet224 = setConstr(8);
var ConstSet225 = setConstr(7);
var ConstSet226 = setConstr(12);
var ConstSet227 = setConstr(12);
var ConstSet228 = setConstr(12);
var ConstSet229 = setConstr(12);
var ConstSet230 = setConstr(13);
var ConstSet231 = setConstr(13);
var ConstSet232 = setConstr(7);
var ConstSet233 = setConstr(7);
var ConstSet234 = setConstr(1);
var ConstSet235 = setConstr(1);
var ConstSet236 = setConstr(9);
var ConstSet237 = setConstr(9);
var ConstSet238 = setConstr(0);
var ConstSet239 = setConstr(1);
var ConstSet240 = setConstr(0);
var ConstSet241 = setConstr(17);
var ConstSet242 = setConstr(17);
var ConstSet243 = setConstr(17);
var ConstSet244 = setConstr(17);
var ConstSet245 = setConstr(1);
var ConstSet246 = setConstr(1);
var ConstSet247 = setConstr(0);
var ConstSet248 = setConstr(0);
var ConstSet249 = setConstr(18);
var ConstSet250 = setConstr(0);
var ConstSet251 = setConstr(0);
var ConstSet252 = setConstr(7, 5, 6, 12, 14, 15, 17, 13);
var ConstSet253 = setConstr(17, 18);
var ConstSet254 = setConstr(17, 18);
var ConstSet255 = setConstr(18);
var ConstSet256 = setConstr(18);
var ConstSet257 = setConstr(17);
var ConstSet258 = setConstr(17);
var ConstSet259 = setConstr(7);
var ConstSet260 = setConstr(4);
var ConstSet261 = setConstr(12);
var ConstSet262 = setConstr(12);
var ConstSet263 = setConstr(1);
var ConstSet264 = setConstr(13);
var ConstSet265 = setConstr(1);
var ConstSet266 = setConstr(9);
var ConstSet267 = setConstr(8);
var ConstSet268 = setConstr(1);
var ConstSet269 = setConstr(4);
var ConstSet270 = setConstr(18);
var ConstSet271 = setConstr(0);
var ConstSet272 = setConstr(18);
var ConstSet273 = setConstr(0);
var ConstSet274 = setConstr(18);
var ConstSet275 = setConstr(18);
var ConstSet276 = setConstr(17);
var ConstSet277 = setConstr(18);
var ConstSet278 = setConstr(19);
var ConstSet279 = setConstr(18);
var ConstSet280 = setConstr(18);
var ConstSet281 = setConstr(18);
var ConstSet282 = setConstr(18);
var ConstSet283 = setConstr(18);
var ConstSet284 = setConstr(12);
var ConstSet285 = setConstr(12);
var ConstSet286 = setConstr(13);
var ConstSet287 = setConstr(7);
var ConstSet288 = setConstr(7);
var ConstSet289 = setConstr(0);
var ConstSet290 = setConstr(3);
var ConstSet291 = setConstr(10);
var ConstSet292 = setConstr(5);
var ConstSet293 = setConstr(9);
var ConstSet294 = setConstr(9);
var ConstSet295 = setConstr(0);
var ConstSet296 = setConstr(0);
var ConstSet297 = setConstr(1);
var ConstSet298 = setConstr(1);
var ConstSet299 = setConstr(2);
var ConstSet300 = setConstr(2);
var ConstSet301 = setConstr(1);
var ConstSet302 = setConstr(1);
var ConstSet303 = setConstr(4);
var ConstSet304 = setConstr(4);
var ConstSet305 = setConstr(2);
var ConstSet306 = setConstr(2);
var ConstSet307 = setConstr(2);
var ConstSet308 = setConstr(2);
var ConstSet309 = setConstr(2);
var ConstSet310 = setConstr(2);
var ConstSet311 = setConstr(2);
var ConstSet312 = setConstr(2);
var ConstSet313 = setConstr(2);
var ConstSet314 = setConstr(2);
var ConstSet315 = setConstr(2);
var ConstSet316 = setConstr(11);
var ConstSet317 = setConstr(11);
var ConstSet318 = setConstr(11);
var ConstSet319 = setConstr(11);
var ConstSet320 = setConstr(6);
var ConstSet321 = setConstr(6);
var ConstSet322 = setConstr(8);
var ConstSet323 = setConstr(8);
var ConstSet324 = setConstr(8);
var ConstSet325 = setConstr(8);
var ConstSet326 = setConstr(17);
var ConstSet327 = setConstr(2);
var ConstSet328 = setConstr(18);
var ConstSet329 = setConstr(17);
var ConstSet330 = setConstr(1);
var ConstSet331 = setConstr(1);
var ConstSet332 = setConstr(1);
var ConstSet333 = setConstr(8);
var ConstSet334 = setConstr(0);
var ConstSet335 = setConstr(0);
var ConstSet336 = setConstr(6);
var ConstSet337 = setConstr(0);
var ConstSet338 = setConstr(0);
var ConstSet339 = setConstr(7, 5, 6, 12, 14, 15, 17, 13);
var ConstSet340 = setConstr(1);
var ConstSet341 = setConstr(1);
var ConstSet342 = setConstr(1);
var ConstSet343 = setConstr(4);
var ConstSet344 = setConstr(18);
var ConstSet345 = setConstr(18);
var ConstSet346 = setConstr(1);
var ConstSet347 = setConstr(1);
var ConstSet348 = setConstr(0);
var ConstSet349 = setConstr(8);
var ConstSet350 = setConstr(0);
var ConstSet351 = setConstr(6);
var ConstSet352 = setConstr(8);
var ConstSet353 = setConstr(1);
var ConstSet354 = setConstr(4);
var ConstSet355 = setConstr(1);
var ConstSet356 = setConstr(1);
var ConstSet357 = setConstr(1);
var ConstSet358 = setConstr(3);
var ConstSet359 = setConstr(1);
var ConstSet360 = setConstr(12);
var ConstSet361 = setConstr(4);
var ConstSet362 = setConstr(4);
var ConstSet363 = setConstr(12);
var ConstSet364 = setConstr(4);
var ConstSet365 = setConstr(4);
var ConstSet366 = setConstr(12);
var ConstSet367 = setConstr(4);
var ConstSet368 = setConstr(12);
var ConstSet369 = setConstr(4);
var ConstSet370 = setConstr(4);
var ConstSet371 = setConstr(1);
var ConstSet372 = setConstr(1);
var ConstSet373 = setConstr(1);
var ConstSet374 = setConstr(1);
var ConstSet375 = setConstr(1);
var ConstSet376 = setConstr(7, 5, 6, 12, 14, 15, 17, 13);
var ConstSet377 = setConstr(7, 5, 6, 12, 14, 15, 17, 13);
var ConstSet378 = setConstr(7, 5, 6, 12, 14, 15, 17, 13);
var ConstSet379 = setConstr(7);
var ConstSet380 = setConstr(1);
var ConstSet381 = setConstr(3);
var ConstSet382 = setConstr(1);
var ConstSet383 = setConstr(1);
var ConstSet384 = setConstr(1);

function isObj(obj_p0, subclass_p1) {
  var result_33557434 = false;

  BeforeRet: {
    var x_33557435 = obj_p0;
    if ((x_33557435 == subclass_p1)) {
    result_33557434 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557435 == subclass_p1))) break Label2;
          if ((x_33557435 == null)) {
          result_33557434 = false;
          break BeforeRet;
          }
          
          x_33557435 = x_33557435.base;
        }
    };
    result_33557434 = true;
    break BeforeRet;
  };

  return result_33557434;

}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException__system_u2017()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet385 = setConstr(1);
var ConstSet386 = setConstr(1);
var ConstSet387 = setConstr(1);
var ConstSet388 = setConstr(9);
var ConstSet389 = setConstr(9);
var ConstSet390 = setConstr(9);
var ConstSet391 = setConstr(9);
var ConstSet392 = setConstr(0);
var ConstSet393 = setConstr(0);
var ConstSet394 = setConstr(9);
var ConstSet395 = setConstr(9);
var ConstSet396 = setConstr(9);
var ConstSet397 = setConstr(9);
var ConstSet398 = setConstr(0);
var ConstSet399 = setConstr(0);
var ConstSet400 = setConstr(9);
var ConstSet401 = setConstr(9);
var ConstSet402 = setConstr(9);
var ConstSet403 = setConstr(9);
var ConstSet404 = setConstr(0);
var ConstSet405 = setConstr(0);
var ConstSet406 = setConstr(9);
var ConstSet407 = setConstr(9);
var ConstSet408 = setConstr(9);
var ConstSet409 = setConstr(9);
var ConstSet410 = setConstr(0);
var ConstSet411 = setConstr(0);
var ConstSet412 = setConstr(9);
var ConstSet413 = setConstr(9);
var ConstSet414 = setConstr(2);
var ConstSet415 = setConstr(1);
var ConstSet416 = setConstr(1);
var ConstSet417 = setConstr(0);
var ConstSet418 = setConstr(1);
var ConstSet419 = setConstr(1);
var ConstSet420 = setConstr(1);
var ConstSet421 = setConstr(0);
var ConstSet422 = setConstr(0);
var ConstSet423 = setConstr(1);
var ConstSet424 = setConstr(9);
var ConstSet425 = setConstr(1);
var ConstSet426 = setConstr(9);
var ConstSet427 = setConstr(9);
var ConstSet428 = setConstr(2);
var ConstSet429 = setConstr(9);
var ConstSet430 = setConstr(9);
var ConstSet431 = setConstr(9);
var ConstSet432 = setConstr(9);
var ConstSet433 = setConstr(0);
var ConstSet434 = setConstr(0);
var ConstSet435 = setConstr(9);
var ConstSet436 = setConstr(9);
var ConstSet437 = setConstr(9);
var ConstSet438 = setConstr(9);
var ConstSet439 = setConstr(0);
var ConstSet440 = setConstr(0);
var ConstSet441 = setConstr(2);
var ConstSet442 = setConstr(2);
var ConstSet443 = setConstr(0, 1);
var ConstSet444 = setConstr(1);
var ConstSet445 = setConstr(1);
var ConstSet446 = setConstr(0);
var ConstSet447 = setConstr(0);
var ConstSet448 = setConstr(1);
var ConstSet449 = setConstr(9);
var ConstSet450 = setConstr(9);
var ConstSet451 = setConstr(9);
var ConstSet452 = setConstr(9);
var ConstSet453 = setConstr(1);
var ConstSet454 = setConstr(1);
var ConstSet455 = setConstr(7, 5, 6, 12, 14, 15, 17, 13);
var ConstSet456 = setConstr(0);
var ConstSet457 = setConstr(0);
var ConstSet458 = setConstr(1);
var ConstSet459 = setConstr(17);
var ConstSet460 = setConstr(0);
var ConstSet461 = setConstr(0);
var ConstSet462 = setConstr(7, 5, 6, 12, 14, 15, 17, 13);
var ConstSet463 = setConstr(17);
var ConstSet464 = setConstr(0);
var ConstSet465 = setConstr(1);
var ConstSet466 = setConstr(17);
var ConstSet467 = setConstr(0);
var ConstSet468 = setConstr(0);
var ConstSet469 = setConstr(17);
var ConstSet470 = setConstr(0);
var ConstSet471 = setConstr(0);
var ConstSet472 = setConstr(0);
var ConstSet473 = setConstr(1);
var ConstSet474 = setConstr(1);
var ConstSet475 = setConstr(1);
var ConstSet476 = setConstr(6);
var ConstSet477 = setConstr(0);
var ConstSet478 = setConstr(0);
var ConstSet479 = setConstr(1);
var ConstSet480 = setConstr(7, 5, 6, 12, 14, 15, 17, 13);
var ConstSet481 = setConstr(6);
var ConstSet482 = setConstr(0);
var ConstSet483 = setConstr(12);
var ConstSet484 = setConstr(4);
var ConstSet485 = setConstr(12);
var ConstSet486 = setConstr(4);
var ConstSet487 = setConstr(1);
var ConstSet488 = setConstr(1);
var ConstSet489 = setConstr(1);
var ConstSet490 = setConstr(4);
var ConstSet491 = setConstr(1);
var ConstSet492 = setConstr(7, 5, 6, 12, 14, 15, 17, 13);
var ConstSet493 = setConstr(1);
var ConstSet494 = setConstr(0);
var ConstSet495 = setConstr(1);
var ConstSet496 = setConstr(1);
var ConstSet497 = setConstr(1);
var ConstSet498 = setConstr(7, 5, 6, 12, 14, 15, 17, 13);
var ConstSet499 = setConstr(0);
var ConstSet500 = setConstr(1);
var ConstSet501 = setConstr(0);
var ConstSet502 = setConstr(0);
var ConstSet503 = setConstr(0);
var ConstSet504 = setConstr(2);
var ConstSet505 = setConstr(1);
var ConstSet506 = setConstr(9);
var ConstSet507 = setConstr(9);
var ConstSet508 = setConstr(2);
var ConstSet509 = setConstr(1);
var ConstSet510 = setConstr(1);
var ConstSet511 = setConstr(0);
var ConstSet512 = setConstr(9);
var ConstSet513 = setConstr(9);
var ConstSet514 = setConstr(0);
var ConstSet515 = setConstr(0);
var ConstSet516 = setConstr(0);
var ConstSet517 = setConstr(0);
var ConstSet518 = setConstr(0);
var ConstSet519 = setConstr(0);
var ConstSet520 = setConstr(11);
var ConstSet521 = setConstr(11);
var ConstSet522 = setConstr(11);
var ConstSet523 = setConstr(0);
var ConstSet524 = setConstr(0);
var ConstSet525 = setConstr(0);
var ConstSet526 = setConstr(0);
var ConstSet527 = setConstr(0);
var ConstSet528 = setConstr(1);
var ConstSet529 = setConstr(0);
var ConstSet530 = setConstr(1);
var ConstSet531 = setConstr(1);
var ConstSet532 = setConstr(1);
var ConstSet533 = setConstr(1);
var ConstSet534 = setConstr(1);
var ConstSet535 = setConstr(2);
var ConstSet536 = setConstr(2);
var ConstSet537 = setConstr(2);
var ConstSet538 = setConstr(2);
var ConstSet539 = setConstr(2);
var ConstSet540 = setConstr(2);
var ConstSet541 = setConstr(1);
var ConstSet542 = setConstr(2);
var ConstSet543 = setConstr(2);
var ConstSet544 = setConstr(2);
var ConstSet545 = setConstr(2);
var objectID_1107296434 = [0];
var svgNamespace_1627390178 = [[104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,50,48,48,48,47,115,118,103]];
var mathNamespace_1627390179 = [[104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,49,57,57,56,47,77,97,116,104,47,77,97,116,104,77,76]];
var gid_1627390692 = [0];
var vcomponents_1660944406 = [{}];
var kxi__ = null;

function resize__lisp_u16063() {
          fitAddon.fit();
      editor.resize();
    

  
}

function add__system_u1942(x_p0, x_p0_Idx, y_p1) {
          if (x_p0[x_p0_Idx] === null) { x_p0[x_p0_Idx] = []; }
      var off = x_p0[x_p0_Idx].length;
      x_p0[x_p0_Idx].length += y_p1.length;
      for (var i = 0; i < y_p1.length; ++i) {
        x_p0[x_p0_Idx][off+i] = y_p1.charCodeAt(i);
      }
    

  
}

function newSeq__system_u2507(len_p0) {
  var result_33556943 = [];

    result_33556943 = new Array(len_p0); for (var i = 0 ; i < len_p0 ; ++i) { result_33556943[i] = null; }
  return result_33556943;

}

function unhandledException(e_p0) {
    var buf_33556658 = [[]];
    if (!(((e_p0.message).length == 0))) {
    buf_33556658[0].push.apply(buf_33556658[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556658[0].push.apply(buf_33556658[0], e_p0.message);;
    }
    else {
    buf_33556658[0].push.apply(buf_33556658[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556658[0].push.apply(buf_33556658[0], [32,91]);;
    add__system_u1942(buf_33556658, 0, e_p0.name);
    buf_33556658[0].push.apply(buf_33556658[0], [93,10]);;
    var cbuf_33556659 = toJSStr(buf_33556658[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556659);
  }
  else {
    throw cbuf_33556659;
  }
  

  
}

function newSeq__pkgZkaraxZkarax_u1619(len_p0) {
  var result_1593837143 = [];

    result_1593837143 = new Array(len_p0); for (var i = 0 ; i < len_p0 ; ++i) { result_1593837143[i] = ({k: 0, parent: null, current: null, newNode: null, oldNode: null}); }
  return result_1593837143;

}

function newSeq__pkgZkaraxZkarax_u1660(len_p0) {
  var result_1593837184 = [];

    result_1593837184 = new Array(len_p0); for (var i = 0 ; i < len_p0 ; ++i) { result_1593837184[i] = ({parent: null, newChild: null, pos: 0}); }
  return result_1593837184;

}

function HEX3Aanonymous__pkgZkaraxZkarax_u1458() {
    dodraw__pkgZkaraxZkarax_u1453(this.kxi0);

  
}

function isFatPointer__system_u2869(ti_p0) {
  var result_33557303 = false;

  BeforeRet: {
    result_33557303 = !((ConstSet1[ti_p0.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557303;

}

function nimCopyAux(dest_p0, src_p1, n_p2) {
    switch (n_p2.kind) {
    case 0:
      break;
    case 1:
            dest_p0[n_p2.offset] = nimCopy(dest_p0[n_p2.offset], src_p1[n_p2.offset], n_p2.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_p2.sons.length; i++) {
      nimCopyAux(dest_p0, src_p1, n_p2.sons[i]);
    }
    
      break;
    case 3:
            dest_p0[n_p2.offset] = nimCopy(dest_p0[n_p2.offset], src_p1[n_p2.offset], n_p2.typ);
      for (var i = 0; i < n_p2.sons.length; ++i) {
        nimCopyAux(dest_p0, src_p1, n_p2.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_p0) {
        if (a_p0 > 2147483647 || a_p0 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars__stdZprivateZdigitsutils_u202(result_p0, result_p0_Idx, x_p1, start_p2, n_p3) {
    var Temporary1;

    var old_301990096 = (result_p0[result_p0_Idx]).length;
    if (result_p0[result_p0_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_p3), 0, 2147483647), Temporary1)) { for (var i = result_p0[result_p0_Idx].length; i < Temporary1; ++i) result_p0[result_p0_Idx].push(0); }
         else {result_p0[result_p0_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990110 = 0;
      var i_570441684 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_570441684 < n_p3)) break Label4;
            iHEX60gensym4_301990110 = i_570441684;
            result_p0[result_p0_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_p0[result_p0_Idx]).length - 1)] = x_p1.charCodeAt(chckIndx(addInt(start_p2, iHEX60gensym4_301990110), 0, (x_p1).length - 1));
            i_570441684 = addInt(i_570441684, 1);
          }
      };
    };

  
}

function addChars__stdZprivateZdigitsutils_u198(result_p0, result_p0_Idx, x_p1) {
    addChars__stdZprivateZdigitsutils_u202(result_p0, result_p0_Idx, x_p1, 0, ((x_p1) == null ? 0 : (x_p1).length));

  
}

function addInt__stdZprivateZdigitsutils_u223(result_p0, result_p0_Idx, x_p1) {
    addChars__stdZprivateZdigitsutils_u198(result_p0, result_p0_Idx, ((x_p1) + ""));

  
}

function addInt__stdZprivateZdigitsutils_u241(result_p0, result_p0_Idx, x_p1) {
    addInt__stdZprivateZdigitsutils_u223(result_p0, result_p0_Idx, BigInt(x_p1));

  
}

function HEX24__systemZdollars_u8(x_p0) {
  var result_385875978 = [[]];

    result_385875978[0] = nimCopy(null, [], NTI33554449);
    addInt__stdZprivateZdigitsutils_u241(result_385875978, 0, x_p0);

  return result_385875978[0];

}

function raiseIndexError(i_p0, a_p1, b_p2) {
    var Temporary1;

    if ((b_p2 < a_p1)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32]).concat(HEX24__systemZdollars_u8(i_p0),[32,110,111,116,32,105,110,32],HEX24__systemZdollars_u8(a_p1),[32,46,46,32],HEX24__systemZdollars_u8(b_p2));
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function HEX5BHEX5D__pkgZkaraxZkarax_u1470(s_p0, x_p1) {
  var result_1593836996 = [];

    var a_1593836998 = x_p1.a;
    var L_1593837004 = addInt(subInt(subInt((s_p0).length, x_p1.b), a_1593836998), 1);
    result_1593836996 = new Array(chckRange(L_1593837004, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_1593837004, 0, 2147483647) ; ++i) { result_1593836996[i] = null; }    Label1: {
      var i_1593837013 = 0;
      var i_570441687 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570441687 < L_1593837004)) break Label3;
            i_1593837013 = i_570441687;
            result_1593836996[chckIndx(i_1593837013, 0, (result_1593836996).length - 1)] = s_p0[chckIndx(addInt(i_1593837013, a_1593836998), 0, (s_p0).length - 1)];
            i_570441687 = addInt(i_570441687, 1);
          }
      };
    };

  return result_1593836996;

}

function HEX2EHEX2E__stdZenumutils_u105(a_p0, b_p1) {
  var result_956301424 = ({a: 0, b: 0});

    result_956301424 = nimCopy(result_956301424, {a: a_p0, b: b_p1}, NTI956301399);

  return result_956301424;

}

function sysFatal__stdZassertions_u44(message_p1) {
    raiseException({message: nimCopy(null, message_p1, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert__stdZassertions_u42(msg_p0) {
    sysFatal__stdZassertions_u44(msg_p0);

  
}

function failedAssertImpl__stdZassertions_u84(msg_p0) {
    raiseAssert__stdZassertions_u42(msg_p0);

  
}

function valueHEX3D__pkgZkaraxZvdom_u477(n_p0, v_p1) {
    n_p0.text = v_p1;

  
}

function value__pkgZkaraxZvdom_u474(n_p0) {
  var result_1627390428 = null;

    result_1627390428 = n_p0.text;

  return result_1627390428;

}

function wrapper__pkgZkaraxZkarax_u282() {
    var vHEX60gensym15_1593835804 = this.ev0.target.value;
    valueHEX3D__pkgZkaraxZvdom_u477(this.HEX3Aup.n1, vHEX60gensym15_1593835804);
    if (!(!(cmpClosures(this.HEX3Aup.action2, null)))) {
    failedAssertImpl__stdZassertions_u84([107,97,114,97,120,46,110,105,109,40,55,57,44,32,51,41,32,96,97,99,116,105,111,110,32,33,61,32,110,105,108,96,32]);
    }
    
    this.HEX3Aup.action2(this.ev0, this.HEX3Aup.n1);
    if (!((value__pkgZkaraxZvdom_u474(this.HEX3Aup.n1) == vHEX60gensym15_1593835804))) {
    this.ev0.target.value = value__pkgZkaraxZvdom_u474(this.HEX3Aup.n1);
    }
    

  
}

function HEX3Aanonymous__pkgZkaraxZkarax_u280(ev_p0) {
    var Temporary1;

    var HEX3Aenv_570441737 = null;
    HEX3Aenv_570441737 = {m_type: NTI570436778, ev0: null, HEX3Aup: null};
    HEX3Aenv_570441737.ev0 = ev_p0;
    HEX3Aenv_570441737.HEX3Aup = this;
    if (!((this.timer0 == null))) {
    clearTimeout(this.timer0);
    }
    
    Temporary1 = wrapper__pkgZkaraxZkarax_u282.bind(HEX3Aenv_570441737); Temporary1.ClP_0 = wrapper__pkgZkaraxZkarax_u282; Temporary1.ClE_0 = HEX3Aenv_570441737;
    this.timer0 = setTimeout(Temporary1, 400);

  
}

function laterWrapper__pkgZkaraxZkarax_u275() {
    var Temporary1;

  var result_1593835796 = null;

    var HEX3Aenv_570441736 = null;
    HEX3Aenv_570441736 = {m_type: NTI570436776, timer0: null, n1: null, action2: null};
    HEX3Aenv_570441736.action2 = this.action0;
    HEX3Aenv_570441736.n1 = this.n1;
    HEX3Aenv_570441736.timer0 = null;
    Temporary1 = HEX3Aanonymous__pkgZkaraxZkarax_u280.bind(HEX3Aenv_570441736); Temporary1.ClP_0 = HEX3Aanonymous__pkgZkaraxZkarax_u280; Temporary1.ClE_0 = HEX3Aenv_570441736;
    result_1593835796 = Temporary1;

  return result_1593835796;

}

function addEventShell__pkgZkaraxZkarax_u93(d_p0, name_p1, h_p2) {
    d_p0.addEventListener(name_p1, h_p2, false);
    if ((d_p0.karaxEvents == null)) {
    d_p0.karaxEvents = new Array(0);
    }
    
    d_p0.karaxEvents.push({Field0: name_p1, Field1: h_p2});

  
}

function HEX3Aanonymous__pkgZkaraxZkarax_u246(ev_p0) {
    if ((ev_p0.keyCode == 13)) {
    var vHEX60gensym8_1593835769 = ev_p0.target.value;
    valueHEX3D__pkgZkaraxZvdom_u477(this.n0, vHEX60gensym8_1593835769);
    if (!(!(cmpClosures(this.action1, null)))) {
    failedAssertImpl__stdZassertions_u84([107,97,114,97,120,46,110,105,109,40,55,57,44,32,51,41,32,96,97,99,116,105,111,110,32,33,61,32,110,105,108,96,32]);
    }
    
    this.action1(ev_p0, this.n0);
    if (!((value__pkgZkaraxZvdom_u474(this.n0) == vHEX60gensym8_1593835769))) {
    ev_p0.target.value = value__pkgZkaraxZvdom_u474(this.n0);
    }
    
    }
    

  
}

function enterWrapper__pkgZkaraxZkarax_u242() {
    var Temporary1;

  var result_1593835763 = null;

    var HEX3Aenv_570441836 = null;
    HEX3Aenv_570441836 = {m_type: NTI570436780, n0: null, action1: null};
    HEX3Aenv_570441836.action1 = this.action0;
    HEX3Aenv_570441836.n0 = this.n1;
    Temporary1 = HEX3Aanonymous__pkgZkaraxZkarax_u246.bind(HEX3Aenv_570441836); Temporary1.ClP_0 = HEX3Aanonymous__pkgZkaraxZkarax_u246; Temporary1.ClE_0 = HEX3Aenv_570441836;
    result_1593835763 = Temporary1;

  return result_1593835763;

}

function HEX3Aanonymous__pkgZkaraxZkarax_u201(ev_p0) {
    if ((((this.n0.kind == 200) || (this.n0.kind == 194)) || (this.n0.kind == 196))) {
    var vHEX60gensym1_1593835736 = ev_p0.target.value;
    valueHEX3D__pkgZkaraxZvdom_u477(this.n0, vHEX60gensym1_1593835736);
    if (!(!(cmpClosures(this.action1, null)))) {
    failedAssertImpl__stdZassertions_u84([107,97,114,97,120,46,110,105,109,40,55,57,44,32,51,41,32,96,97,99,116,105,111,110,32,33,61,32,110,105,108,96,32]);
    }
    
    this.action1(ev_p0, this.n0);
    if (!((value__pkgZkaraxZvdom_u474(this.n0) == vHEX60gensym1_1593835736))) {
    ev_p0.target.value = value__pkgZkaraxZvdom_u474(this.n0);
    }
    
    }
    else {
    this.action1(ev_p0, this.n0);
    }
    

  
}

function stdWrapper__pkgZkaraxZkarax_u197() {
    var Temporary1;

  var result_1593835718 = null;

    var HEX3Aenv_570441869 = null;
    HEX3Aenv_570441869 = {m_type: NTI570436782, n0: null, action1: null};
    HEX3Aenv_570441869.action1 = this.action0;
    HEX3Aenv_570441869.n0 = this.n1;
    Temporary1 = HEX3Aanonymous__pkgZkaraxZkarax_u201.bind(HEX3Aenv_570441869); Temporary1.ClP_0 = HEX3Aanonymous__pkgZkaraxZkarax_u201; Temporary1.ClE_0 = HEX3Aenv_570441869;
    result_1593835718 = Temporary1;

  return result_1593835718;

}

function wrapEvent__pkgZkaraxZkarax_u191(d_p0, n_p1, k_p2, action_p3) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_1593835716 = null;

    var HEX3Aenv_570441820 = null;
    HEX3Aenv_570441820 = {m_type: NTI570436774, action0: null, n1: null};
    HEX3Aenv_570441820.n1 = n_p1;
    HEX3Aenv_570441820.action0 = action_p3;
    switch (k_p2) {
    case 30:
      Temporary1 = laterWrapper__pkgZkaraxZkarax_u275.bind(HEX3Aenv_570441820); Temporary1.ClP_0 = laterWrapper__pkgZkaraxZkarax_u275; Temporary1.ClE_0 = HEX3Aenv_570441820;
      result_1593835716 = Temporary1();
      addEventShell__pkgZkaraxZkarax_u93(d_p0, "keyup", result_1593835716);
      break;
    case 29:
      Temporary2 = enterWrapper__pkgZkaraxZkarax_u242.bind(HEX3Aenv_570441820); Temporary2.ClP_0 = enterWrapper__pkgZkaraxZkarax_u242; Temporary2.ClE_0 = HEX3Aenv_570441820;
      result_1593835716 = Temporary2();
      addEventShell__pkgZkaraxZkarax_u93(d_p0, "keyup", result_1593835716);
      break;
    default: 
      Temporary3 = stdWrapper__pkgZkaraxZkarax_u197.bind(HEX3Aenv_570441820); Temporary3.ClP_0 = stdWrapper__pkgZkaraxZkarax_u197; Temporary3.ClE_0 = HEX3Aenv_570441820;
      result_1593835716 = Temporary3();
      addEventShell__pkgZkaraxZkarax_u93(d_p0, toEventName_1627390377[chckIndx(k_p2, 0, (toEventName_1627390377).length - 1)], result_1593835716);
      break;
    }

  return result_1593835716;

}

function applyEvents__pkgZkaraxZkarax_u318(n_p0) {
    var dest_1593835840 = n_p0.dom;
    Label1: {
      var i_1593835848 = 0;
      var colontmp__570441710 = 0;
      colontmp__570441710 = (n_p0.events).length;
      var i_570441711 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570441711 < colontmp__570441710)) break Label3;
            i_1593835848 = i_570441711;
            n_p0.events[chckIndx(i_1593835848, 0, (n_p0.events).length - 1)]["Field2"] = wrapEvent__pkgZkaraxZkarax_u191(dest_1593835840, n_p0, n_p0.events[chckIndx(i_1593835848, 0, (n_p0.events).length - 1)]["Field0"], n_p0.events[chckIndx(i_1593835848, 0, (n_p0.events).length - 1)]["Field1"]);
            i_570441711 = addInt(i_570441711, 1);
          }
      };
    };

  
}

function applyStyle__pkgZkaraxZvstyles_u537(n_p0, s_p1) {
    n_p0.style = {};
    Label1: {
      var i_1694499368 = 0;
      var colontmp__570441935 = 0;
      colontmp__570441935 = subInt(s_p1.length, 1);
      var res_570441936 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570441936 <= colontmp__570441935)) break Label3;
            i_1694499368 = res_570441936;
            n_p0.style[s_p1[i_1694499368]] = s_p1[addInt(i_1694499368, 1)];
            res_570441936 = addInt(res_570441936, 2);
          }
      };
    };

  
}

function toDom__pkgZkaraxZkarax_u347(n_p0, useAttachedNode_p1, kxi_p2) {
      var Temporary1;

  var result_1593835871 = null;

  BeforeRet: {
    if (useAttachedNode_p1) {
    if (!((n_p0.dom == null))) {
    if (!((n_p0.id == null))) {
    kxi_p2.byId[n_p0.id] = n_p0;
    }
    
    result_1593835871 = n_p0.dom;
    break BeforeRet;
    }
    
    }
    
    if ((n_p0.kind == 0)) {
    result_1593835871 = document.createTextNode(n_p0.text);
    n_p0.dom = result_1593835871;
    if (!((n_p0.id == null))) {
    kxi__.byId[n_p0.id] = n_p0;
    }
    
    }
    else {
    if ((n_p0.kind == 6)) {
    result_1593835871 = document.createElement("div");
    result_1593835871.innerHTML = n_p0.text;
    n_p0.dom = result_1593835871;
    if (!((n_p0.id == null))) {
    kxi__.byId[n_p0.id] = n_p0;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_p0.kind == 3)) {
    var x_1593835911 = vcomponents_1660944406[0][n_p0.text](n_p0.kids);
    result_1593835871 = toDom__pkgZkaraxZkarax_u347(x_1593835911, useAttachedNode_p1, kxi_p2);
    n_p0.dom = result_1593835871;
    if (!((n_p0.id == null))) {
    kxi__.byId[n_p0.id] = n_p0;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_p0.kind == 4)) {
    result_1593835871 = n_p0.dom;
    if (!(!((result_1593835871 == null)))) {
    failedAssertImpl__stdZassertions_u84([107,97,114,97,120,46,110,105,109,40,49,56,53,44,32,53,41,32,96,114,101,115,117,108,116,32,33,61,32,110,105,108,96,32]);
    }
    
    n_p0.dom = result_1593835871;
    if (!((n_p0.id == null))) {
    kxi__.byId[n_p0.id] = n_p0;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_p0.kind == 5)) {
    var x_1593835941 = n_p0;
    if (!(cmpClosures(x_1593835941.onAttachImpl, null))) {
    x_1593835941.onAttachImpl(x_1593835941);
    }
    
    if (!(!(cmpClosures(x_1593835941.renderImpl, null)))) {
    failedAssertImpl__stdZassertions_u84([107,97,114,97,120,46,110,105,109,40,49,57,50,44,32,53,41,32,96,120,46,114,101,110,100,101,114,73,109,112,108,32,33,61,32,110,105,108,96,32]);
    }
    
    if ((x_1593835941.expanded == null)) {
    x_1593835941.expanded = x_1593835941.renderImpl(x_1593835941);
    }
    
    if (!(!((x_1593835941.expanded == null)))) {
    failedAssertImpl__stdZassertions_u84([107,97,114,97,120,46,110,105,109,40,49,57,54,44,32,53,41,32,96,120,46,101,120,112,97,110,100,101,100,32,33,61,32,110,105,108,96,32]);
    }
    
    result_1593835871 = toDom__pkgZkaraxZkarax_u347(x_1593835941.expanded, useAttachedNode_p1, kxi_p2);
    n_p0.dom = result_1593835871;
    if (!((n_p0.id == null))) {
    kxi__.byId[n_p0.id] = n_p0;
    }
    
    break BeforeRet;
    }
    else {
      if ((ConstSet2[n_p0.kind] != undefined)) {
      Temporary1 = document.createElementNS(toJSStr(svgNamespace_1627390178[0]), toTag_1627390300[chckIndx(n_p0.kind, 0, (toTag_1627390300).length - 1)]);
      }
      else {
      if ((ConstSet3[n_p0.kind] != undefined)) {
      Temporary1 = document.createElementNS(toJSStr(mathNamespace_1627390179[0]), toTag_1627390300[chckIndx(n_p0.kind, 0, (toTag_1627390300).length - 1)]);
      }
      else {
      Temporary1 = document.createElement(toTag_1627390300[chckIndx(n_p0.kind, 0, (toTag_1627390300).length - 1)]);
      }
      }
      result_1593835871 = Temporary1;
      n_p0.dom = result_1593835871;
      if (!((n_p0.id == null))) {
      kxi__.byId[n_p0.id] = n_p0;
      }
      
      Label2: {
        var k_1593835988 = null;
        Label3: {
          var i_570441695 = 0;
          var colontmp__570441696 = 0;
          colontmp__570441696 = (n_p0.kids).length;
          var i_570441697 = 0;
          Label4: {
              Label5: while (true) {
              if (!(i_570441697 < colontmp__570441696)) break Label5;
                i_570441695 = i_570441697;
                k_1593835988 = n_p0.kids[chckIndx(i_570441695, 0, (n_p0.kids).length - 1)];
                result_1593835871.appendChild(toDom__pkgZkaraxZkarax_u347(k_1593835988, useAttachedNode_p1, kxi_p2));
                i_570441697 = addInt(i_570441697, 1);
              }
          };
        };
      };
      if (!((n_p0.text == null))) {
      result_1593835871.value = n_p0.text;
      }
      
    }
    }}}}
    if (!((n_p0.id == null))) {
    result_1593835871.id = n_p0.id;
    }
    
    if (!((n_p0.class == null))) {
    if ((ConstSet4[n_p0.kind] != undefined)) {
    result_1593835871.className.baseVal = n_p0.class;
    }
    else {
    result_1593835871.className = n_p0.class;
    }
    
    }
    
    Label6: {
      var k_1593835993 = null;
      var v_1593835994 = null;
      Label7: {
        var i_570441705 = 0;
        var colontmp__570441706 = 0;
        colontmp__570441706 = subInt((n_p0.attrs).length, 2);
        var res_570441707 = 0;
        Label8: {
            Label9: while (true) {
            if (!(res_570441707 <= colontmp__570441706)) break Label9;
              i_570441705 = res_570441707;
              k_1593835993 = n_p0.attrs[chckIndx(i_570441705, 0, (n_p0.attrs).length - 1)];
              v_1593835994 = n_p0.attrs[chckIndx(addInt(i_570441705, 1), 0, (n_p0.attrs).length - 1)];
              if (!((v_1593835994 == null))) {
              result_1593835871.setAttribute(k_1593835993, v_1593835994);
              }
              
              res_570441707 = addInt(res_570441707, 2);
            }
        };
      };
    };
    applyEvents__pkgZkaraxZkarax_u318(n_p0);
    if (((!((kxi_p2 == null)) && (n_p0 == kxi_p2.toFocusV)) && (kxi_p2.toFocus == null))) {
    kxi_p2.toFocus = result_1593835871;
    }
    
    if (!((n_p0.style == null))) {
    applyStyle__pkgZkaraxZvstyles_u537(result_1593835871, n_p0.style);
    n_p0.styleVersion = (n_p0.style.__version || 0);
    }
    
  };

  return result_1593835871;

}

function replaceById__pkgZkaraxZkarax_u567(id_p0, newTree_p1) {
    var x_1593836090 = document.getElementById(id_p0);
    x_1593836090.parentNode.replaceChild(newTree_p1, x_1593836090);
    newTree_p1.id = id_p0;

  
}

function len__pkgZkaraxZvdom_u841(x_p0) {
  var result_1627390795 = 0;

    result_1627390795 = (x_p0.kids).length;

  return result_1627390795;

}

function HEX5BHEX5D__pkgZkaraxZvdom_u848(x_p0, idx_p1) {
  var result_1627390803 = null;

    result_1627390803 = x_p0.kids[chckIndx(idx_p1, 0, (x_p0.kids).length - 1)];

  return result_1627390803;

}

function eq__pkgZkaraxZvstyles_u258(a_p0, b_p1) {
  var result_1694499077 = false;

  BeforeRet: {
    if ((a_p0 == null)) {
    if ((b_p1 == null)) {
    result_1694499077 = true;
    break BeforeRet;
    }
    else {
      result_1694499077 = false;
      break BeforeRet;
    }
    
    }
    else {
    if ((b_p1 == null)) {
    result_1694499077 = false;
    break BeforeRet;
    }
    }
    if (!((a_p0.length == b_p1.length))) {
    result_1694499077 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_1694499112 = 0;
      var colontmp__570441962 = 0;
      colontmp__570441962 = a_p0.length;
      var i_570441963 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570441963 < colontmp__570441962)) break Label3;
            i_1694499112 = i_570441963;
            if (!((a_p0[i_1694499112] == b_p1[i_1694499112]))) {
            result_1694499077 = false;
            break BeforeRet;
            }
            
            i_570441963 = addInt(i_570441963, 1);
          }
      };
    };
    result_1694499077 = true;
    break BeforeRet;
  };

  return result_1694499077;

}

function versionMatch__pkgZkaraxZvstyles_u305(s_p0, version_p1) {
  var result_1694499124 = false;

    result_1694499124 = ((s_p0 == null) || ((s_p0.__version || 0) == version_p1));

  return result_1694499124;

}

function sameAttrs__pkgZkaraxZvdom_u1043(a_p0, b_p1) {
  var result_1627390998 = false;

  BeforeRet: {
    if (((a_p0.attrs).length == (b_p1.attrs).length)) {
    result_1627390998 = true;
    Label1: {
      var i_1627391012 = 0;
      var colontmp__570441966 = 0;
      colontmp__570441966 = (a_p0.attrs).length;
      var i_570441967 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570441967 < colontmp__570441966)) break Label3;
            i_1627391012 = i_570441967;
            if (!((a_p0.attrs[chckIndx(i_1627391012, 0, (a_p0.attrs).length - 1)] == b_p1.attrs[chckIndx(i_1627391012, 0, (b_p1.attrs).length - 1)]))) {
            result_1627390998 = false;
            break BeforeRet;
            }
            
            i_570441967 = addInt(i_570441967, 1);
          }
      };
    };
    }
    
  };

  return result_1627390998;

}

function eq__pkgZkaraxZkarax_u580(a_p0, b_p1, recursive_p2) {
  var result_1593836104 = 0;

  BeforeRet: {
    if (!((a_p0.kind == b_p1.kind))) {
    result_1593836104 = 1;
    break BeforeRet;
    }
    
    if (!((a_p0.id == b_p1.id))) {
    result_1593836104 = 1;
    break BeforeRet;
    }
    
    result_1593836104 = 3;
    if (!((a_p0.index == b_p1.index))) {
    result_1593836104 = 1;
    break BeforeRet;
    }
    
    if ((a_p0.kind == 0)) {
    if (!((a_p0.text == b_p1.text))) {
    result_1593836104 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((a_p0.kind == 3)) {
    if (!((a_p0.text == b_p1.text))) {
    result_1593836104 = 1;
    break BeforeRet;
    }
    
    if (!((len__pkgZkaraxZvdom_u841(a_p0) == len__pkgZkaraxZvdom_u841(b_p1)))) {
    result_1593836104 = 1;
    break BeforeRet;
    }
    
    Label1: {
      var i_1593836121 = 0;
      var colontmp__570441954 = 0;
      colontmp__570441954 = len__pkgZkaraxZvdom_u841(a_p0);
      var i_570441955 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570441955 < colontmp__570441954)) break Label3;
            i_1593836121 = i_570441955;
            if ((eq__pkgZkaraxZkarax_u580(HEX5BHEX5D__pkgZkaraxZvdom_u848(a_p0, i_1593836121), HEX5BHEX5D__pkgZkaraxZvdom_u848(b_p1, i_1593836121), recursive_p2) == 1)) {
            result_1593836104 = 1;
            break BeforeRet;
            }
            
            i_570441955 = addInt(i_570441955, 1);
          }
      };
    };
    }
    else {
    if ((a_p0.kind == 4)) {
    if ((a_p0.dom == b_p1.dom)) {
    result_1593836104 = 3;
    break BeforeRet;
    }
    else {
      result_1593836104 = 1;
      break BeforeRet;
    }
    
    }
    else {
    if ((a_p0.kind == 6)) {
    if (!((a_p0.text == b_p1.text))) {
    result_1593836104 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((b_p1.kind == 5)) {
    if (!((a_p0.text == b_p1.text))) {
    result_1593836104 = 1;
    break BeforeRet;
    }
    
    if (!((a_p0.key == b_p1.key))) {
    result_1593836104 = 1;
    break BeforeRet;
    }
    
    result_1593836104 = 0;
    break BeforeRet;
    }
    }}}}
    if (((!((a_p0.class == b_p1.class)) || !((eq__pkgZkaraxZvstyles_u258(a_p0.style, b_p1.style) && versionMatch__pkgZkaraxZvstyles_u305(a_p0.style, b_p1.styleVersion)))) || !(sameAttrs__pkgZkaraxZvdom_u1043(a_p0, b_p1)))) {
    result_1593836104 = 2;
    break BeforeRet;
    }
    
    if (recursive_p2) {
    if (!((len__pkgZkaraxZvdom_u841(a_p0) == len__pkgZkaraxZvdom_u841(b_p1)))) {
    result_1593836104 = 1;
    break BeforeRet;
    }
    
    Label4: {
      var i_1593836147 = 0;
      var colontmp__570441958 = 0;
      colontmp__570441958 = len__pkgZkaraxZvdom_u841(a_p0);
      var i_570441959 = 0;
      Label5: {
          Label6: while (true) {
          if (!(i_570441959 < colontmp__570441958)) break Label6;
            i_1593836147 = i_570441959;
            if (!((eq__pkgZkaraxZkarax_u580(HEX5BHEX5D__pkgZkaraxZvdom_u848(a_p0, i_1593836147), HEX5BHEX5D__pkgZkaraxZvdom_u848(b_p1, i_1593836147), true) == 3))) {
            result_1593836104 = 1;
            break BeforeRet;
            }
            
            i_570441959 = addInt(i_570441959, 1);
          }
      };
    };
    }
    
    break BeforeRet;
  };

  return result_1593836104;

}

function updateStyles__pkgZkaraxZkarax_u648(newNode_p0, oldNode_p1) {
    if (!((oldNode_p1.dom == null))) {
    if (!((newNode_p0.style == null))) {
    applyStyle__pkgZkaraxZvstyles_u537(oldNode_p1.dom, newNode_p0.style);
    newNode_p0.styleVersion = (newNode_p0.style.__version || 0);
    }
    else {
      oldNode_p1.dom.style = {m_type: NTI1224736910, alignContent: null, alignItems: null, alignSelf: null, all: null, animation: null, animationDelay: null, animationDirection: null, animationDuration: null, animationFillMode: null, animationIterationCount: null, animationName: null, animationPlayState: null, animationTimingFunction: null, backdropFilter: null, backfaceVisibility: null, background: null, backgroundAttachment: null, backgroundBlendMode: null, backgroundClip: null, backgroundColor: null, backgroundImage: null, backgroundOrigin: null, backgroundPosition: null, backgroundRepeat: null, backgroundSize: null, blockSize: null, border: null, borderBlock: null, borderBlockColor: null, borderBlockEnd: null, borderBlockEndColor: null, borderBlockEndStyle: null, borderBlockEndWidth: null, borderBlockStart: null, borderBlockStartColor: null, borderBlockStartStyle: null, borderBlockStartWidth: null, borderBlockStyle: null, borderBlockWidth: null, borderBottom: null, borderBottomColor: null, borderBottomLeftRadius: null, borderBottomRightRadius: null, borderBottomStyle: null, borderBottomWidth: null, borderCollapse: null, borderColor: null, borderEndEndRadius: null, borderEndStartRadius: null, borderImage: null, borderImageOutset: null, borderImageRepeat: null, borderImageSlice: null, borderImageSource: null, borderImageWidth: null, borderInline: null, borderInlineColor: null, borderInlineEnd: null, borderInlineEndColor: null, borderInlineEndStyle: null, borderInlineEndWidth: null, borderInlineStart: null, borderInlineStartColor: null, borderInlineStartStyle: null, borderInlineStartWidth: null, borderInlineStyle: null, borderInlineWidth: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRadius: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderSpacing: null, borderStartEndRadius: null, borderStartStartRadius: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopLeftRadius: null, borderTopRightRadius: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, boxDecorationBreak: null, boxShadow: null, boxSizing: null, breakAfter: null, breakBefore: null, breakInside: null, captionSide: null, caretColor: null, clear: null, clip: null, clipPath: null, color: null, colorAdjust: null, columnCount: null, columnFill: null, columnGap: null, columnRule: null, columnRuleColor: null, columnRuleStyle: null, columnRuleWidth: null, columnSpan: null, columnWidth: null, columns: null, contain: null, content: null, counterIncrement: null, counterReset: null, counterSet: null, cursor: null, direction: null, display: null, emptyCells: null, filter: null, flex: null, flexBasis: null, flexDirection: null, flexFlow: null, flexGrow: null, flexShrink: null, flexWrap: null, cssFloat: null, font: null, fontFamily: null, fontFeatureSettings: null, fontKerning: null, fontLanguageOverride: null, fontOpticalSizing: null, fontSize: null, fontSizeAdjust: null, fontStretch: null, fontStyle: null, fontSynthesis: null, fontVariant: null, fontVariantAlternates: null, fontVariantCaps: null, fontVariantEastAsian: null, fontVariantLigatures: null, fontVariantNumeric: null, fontVariantPosition: null, fontVariationSettings: null, fontWeight: null, gap: null, grid: null, gridArea: null, gridAutoColumns: null, gridAutoFlow: null, gridAutoRows: null, gridColumn: null, gridColumnEnd: null, gridColumnStart: null, gridRow: null, gridRowEnd: null, gridRowStart: null, gridTemplate: null, gridTemplateAreas: null, gridTemplateColumns: null, gridTemplateRows: null, hangingPunctuation: null, height: null, hyphens: null, imageOrientation: null, imageRendering: null, inlineSize: null, inset: null, insetBlock: null, insetBlockEnd: null, insetBlockStart: null, insetInline: null, insetInlineEnd: null, insetInlineStart: null, isolation: null, justifyContent: null, justifyItems: null, justifySelf: null, left: null, letterSpacing: null, lineBreak: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBlock: null, marginBlockEnd: null, marginBlockStart: null, marginBottom: null, marginInline: null, marginInlineEnd: null, marginInlineStart: null, marginLeft: null, marginRight: null, marginTop: null, mask: null, maskBorder: null, maskBorderMode: null, maskBorderOutset: null, maskBorderRepeat: null, maskBorderSlice: null, maskBorderSource: null, maskBorderWidth: null, maskClip: null, maskComposite: null, maskImage: null, maskMode: null, maskOrigin: null, maskPosition: null, maskRepeat: null, maskSize: null, maskType: null, maxBlockSize: null, maxHeight: null, maxInlineSize: null, maxWidth: null, minBlockSize: null, minHeight: null, minInlineSize: null, minWidth: null, mixBlendMode: null, objectFit: null, objectPosition: null, offset: null, offsetAnchor: null, offsetDistance: null, offsetPath: null, offsetRotate: null, opacity: null, order: null, orphans: null, outline: null, outlineColor: null, outlineOffset: null, outlineStyle: null, outlineWidth: null, overflow: null, overflowAnchor: null, overflowBlock: null, overflowInline: null, overflowWrap: null, overflowX: null, overflowY: null, overscrollBehavior: null, overscrollBehaviorBlock: null, overscrollBehaviorInline: null, overscrollBehaviorX: null, overscrollBehaviorY: null, padding: null, paddingBlock: null, paddingBlockEnd: null, paddingBlockStart: null, paddingBottom: null, paddingInline: null, paddingInlineEnd: null, paddingInlineStart: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pageBreakInside: null, paintOrder: null, perspective: null, perspectiveOrigin: null, placeContent: null, placeItems: null, placeSelf: null, pointerEvents: null, position: null, quotes: null, resize: null, right: null, rotate: null, rowGap: null, scale: null, scrollBehavior: null, scrollMargin: null, scrollMarginBlock: null, scrollMarginBlockEnd: null, scrollMarginBlockStart: null, scrollMarginBottom: null, scrollMarginInline: null, scrollMarginInlineEnd: null, scrollMarginInlineStart: null, scrollMarginLeft: null, scrollMarginRight: null, scrollMarginTop: null, scrollPadding: null, scrollPaddingBlock: null, scrollPaddingBlockEnd: null, scrollPaddingBlockStart: null, scrollPaddingBottom: null, scrollPaddingInline: null, scrollPaddingInlineEnd: null, scrollPaddingInlineStart: null, scrollPaddingLeft: null, scrollPaddingRight: null, scrollPaddingTop: null, scrollSnapAlign: null, scrollSnapStop: null, scrollSnapType: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, scrollbarWidth: null, shapeImageThreshold: null, shapeMargin: null, shapeOutside: null, tabSize: null, tableLayout: null, textAlign: null, textAlignLast: null, textCombineUpright: null, textDecoration: null, textDecorationColor: null, textDecorationLine: null, textDecorationSkipInk: null, textDecorationStyle: null, textDecorationThickness: null, textEmphasis: null, textEmphasisColor: null, textEmphasisPosition: null, textEmphasisStyle: null, textIndent: null, textJustify: null, textOrientation: null, textOverflow: null, textRendering: null, textShadow: null, textTransform: null, textUnderlineOffset: null, textUnderlinePosition: null, top: null, touchAction: null, transform: null, transformBox: null, transformOrigin: null, transformStyle: null, transition: null, transitionDelay: null, transitionDuration: null, transitionProperty: null, transitionTimingFunction: null, translate: null, unicodeBidi: null, verticalAlign: null, visibility: null, whiteSpace: null, widows: null, width: null, willChange: null, wordBreak: null, wordSpacing: null, writingMode: null, zIndex: null};
    }
    
    if ((ConstSet5[oldNode_p1.kind] != undefined)) {
    oldNode_p1.dom.className.baseVal = newNode_p0.class;
    }
    else {
    oldNode_p1.dom.className = newNode_p0.class;
    }
    
    }
    
    oldNode_p1.style = newNode_p0.style;
    oldNode_p1.class = newNode_p0.class;

  
}

function takeOverAttr__pkgZkaraxZvdom_u833(newNode_p0, oldNode_p1) {
    oldNode_p1.attrs = newNode_p0.attrs;

  
}

function updateAttributes__pkgZkaraxZkarax_u1062(newNode_p0, oldNode_p1) {
    if (!((oldNode_p1.dom == null))) {
    Label1: {
      var k_1593836589 = null;
      var __1593836590 = null;
      Label2: {
        var i_570441971 = 0;
        var colontmp__570441972 = 0;
        colontmp__570441972 = subInt((oldNode_p1.attrs).length, 2);
        var res_570441973 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_570441973 <= colontmp__570441972)) break Label4;
              i_570441971 = res_570441973;
              k_1593836589 = oldNode_p1.attrs[chckIndx(i_570441971, 0, (oldNode_p1.attrs).length - 1)];
              __1593836590 = oldNode_p1.attrs[chckIndx(addInt(i_570441971, 1), 0, (oldNode_p1.attrs).length - 1)];
              oldNode_p1.dom.removeAttribute(k_1593836589);
              res_570441973 = addInt(res_570441973, 2);
            }
        };
      };
    };
    Label5: {
      var k_1593836591 = null;
      var v_1593836592 = null;
      Label6: {
        var i_570441977 = 0;
        var colontmp__570441978 = 0;
        colontmp__570441978 = subInt((newNode_p0.attrs).length, 2);
        var res_570441979 = 0;
        Label7: {
            Label8: while (true) {
            if (!(res_570441979 <= colontmp__570441978)) break Label8;
              i_570441977 = res_570441979;
              k_1593836591 = newNode_p0.attrs[chckIndx(i_570441977, 0, (newNode_p0.attrs).length - 1)];
              v_1593836592 = newNode_p0.attrs[chckIndx(addInt(i_570441977, 1), 0, (newNode_p0.attrs).length - 1)];
              if (!((v_1593836592 == null))) {
              oldNode_p1.dom.setAttribute(k_1593836591, v_1593836592);
              }
              
              res_570441979 = addInt(res_570441979, 2);
            }
        };
      };
    };
    }
    
    takeOverAttr__pkgZkaraxZvdom_u833(newNode_p0, oldNode_p1);

  
}

function getAttr__pkgZkaraxZvdom_u820(n_p0, key_p1) {
  var result_1627390775 = null;

  BeforeRet: {
    Label1: {
      var i_1627390784 = 0;
      var colontmp__570441982 = 0;
      colontmp__570441982 = subInt((n_p0.attrs).length, 2);
      var res_570441983 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570441983 <= colontmp__570441982)) break Label3;
            i_1627390784 = res_570441983;
            if ((n_p0.attrs[chckIndx(i_1627390784, 0, (n_p0.attrs).length - 1)] == key_p1)) {
            result_1627390775 = n_p0.attrs[chckIndx(addInt(i_1627390784, 1), 0, (n_p0.attrs).length - 1)];
            break BeforeRet;
            }
            
            res_570441983 = addInt(res_570441983, 2);
          }
      };
    };
  };

  return result_1627390775;

}

function removeAllEventHandlers__pkgZkaraxZkarax_u149(d_p0) {
    if (!((d_p0.karaxEvents == null))) {
    Label1: {
      var i_1593835686 = 0;
      var colontmp__570441986 = 0;
      colontmp__570441986 = d_p0.karaxEvents.length;
      var i_570441987 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570441987 < colontmp__570441986)) break Label3;
            i_1593835686 = i_570441987;
            d_p0.removeEventListener(d_p0.karaxEvents[i_1593835686]["Field0"], d_p0.karaxEvents[i_1593835686]["Field1"], false);
            i_570441987 = addInt(i_570441987, 1);
          }
      };
    };
    }
    

  
}

function mergeEvents__pkgZkaraxZkarax_u1073(newNode_p0, oldNode_p1, kxi_p2) {
    var d_1593836597 = oldNode_p1.dom;
    if (!((d_1593836597 == null))) {
    removeAllEventHandlers__pkgZkaraxZkarax_u149(d_1593836597);
    }
    
    oldNode_p1.events = newNode_p0.events;
    applyEvents__pkgZkaraxZkarax_u318(oldNode_p1);

  
}

function addPatch__pkgZkaraxZkarax_u1082(kxi_p0, ka_p1, parenta_p2, currenta_p3, na_p4, oldNode_p5) {
    var L_1593836609 = kxi_p0.patchLen;
    if (((kxi_p0.patches).length <= L_1593836609)) {
    kxi_p0.patches.push({k: ka_p1, parent: parenta_p2, current: currenta_p3, newNode: na_p4, oldNode: oldNode_p5});;
    }
    else {
      kxi_p0.patches[chckIndx(L_1593836609, 0, (kxi_p0.patches).length - 1)].k = ka_p1;
      kxi_p0.patches[chckIndx(L_1593836609, 0, (kxi_p0.patches).length - 1)].parent = parenta_p2;
      kxi_p0.patches[chckIndx(L_1593836609, 0, (kxi_p0.patches).length - 1)].current = currenta_p3;
      kxi_p0.patches[chckIndx(L_1593836609, 0, (kxi_p0.patches).length - 1)].newNode = na_p4;
      kxi_p0.patches[chckIndx(L_1593836609, 0, (kxi_p0.patches).length - 1)].oldNode = oldNode_p5;
    }
    
    kxi_p0.patchLen = addInt(kxi_p0.patchLen, 1);

  
}

function diff__pkgZkaraxZkarax_u1246(newNode_p0, oldNode_p1, parent_p2, current_p3, kxi_p4) {
      var Temporary1;

  BeforeRet: {
    var result_1593836772 = eq__pkgZkaraxZkarax_u580(newNode_p0, oldNode_p1, false);
    switch (result_1593836772) {
    case 0:
      kxi_p4.components.push({oldNode: oldNode_p1, newNode: newNode_p0, parent: parent_p2, current: current_p3});;
      break;
    case 3:
    case 2:
      newNode_p0.dom = oldNode_p1.dom;
      if ((result_1593836772 == 2)) {
      updateStyles__pkgZkaraxZkarax_u648(newNode_p0, oldNode_p1);
      updateAttributes__pkgZkaraxZkarax_u1062(newNode_p0, oldNode_p1);
      if ((oldNode_p1.kind == 0)) {
      oldNode_p1.text = newNode_p0.text;
      oldNode_p1.dom.nodeValue = newNode_p0.text;
      }
      
      if ((oldNode_p1.kind == 194)) {
      oldNode_p1.dom.value = newNode_p0.text;
      var checked_1593836789 = getAttr__pkgZkaraxZvdom_u820(newNode_p0, "checked");
      if ((checked_1593836789 == null)) {
      Temporary1 = false;
      }
      else {
      Temporary1 = true;
      }
      
      oldNode_p1.dom.checked = Temporary1;
      }
      
      if ((oldNode_p1.kind == 200)) {
      oldNode_p1.dom.value = newNode_p0.text;
      }
      
      }
      
      if ((!(((newNode_p0.events).length == 0)) || !(((oldNode_p1.events).length == 0)))) {
      mergeEvents__pkgZkaraxZkarax_u1073(newNode_p0, oldNode_p1, kxi_p4);
      }
      
      var newLength_1593836800 = len__pkgZkaraxZvdom_u841(newNode_p0);
      var oldLength_1593836801 = len__pkgZkaraxZvdom_u841(oldNode_p1);
      if (((newLength_1593836800 == 0) && (oldLength_1593836801 == 0))) {
      break BeforeRet;
      }
      
      var minLength_1593836802 = nimMin(newLength_1593836800, oldLength_1593836801);
      if (!((oldNode_p1.kind == newNode_p0.kind))) {
      failedAssertImpl__stdZassertions_u84([107,97,114,97,120,46,110,105,109,40,53,50,56,44,32,53,41,32,96,111,108,100,78,111,100,101,46,107,105,110,100,32,61,61,32,110,101,119,78,111,100,101,46,107,105,110,100,96,32]);
      }
      
      var commonPrefix_1593836812 = 0;
      Label2: {
          Label3: while (true) {
          if (!(commonPrefix_1593836812 < minLength_1593836802)) break Label3;
            if ((eq__pkgZkaraxZkarax_u580(HEX5BHEX5D__pkgZkaraxZvdom_u848(newNode_p0, commonPrefix_1593836812), HEX5BHEX5D__pkgZkaraxZvdom_u848(oldNode_p1, commonPrefix_1593836812), true) == 3)) {
            addPatch__pkgZkaraxZkarax_u1082(kxi_p4, 5, null, null, HEX5BHEX5D__pkgZkaraxZvdom_u848(newNode_p0, commonPrefix_1593836812), HEX5BHEX5D__pkgZkaraxZvdom_u848(oldNode_p1, commonPrefix_1593836812));
            commonPrefix_1593836812 = addInt(commonPrefix_1593836812, 1);
            }
            else {
              break Label2;
            }
            
          }
      };
      var oldPos_1593836822 = subInt(oldLength_1593836801, 1);
      var newPos_1593836823 = subInt(newLength_1593836800, 1);
      Label4: {
          Label5: while (true) {
          if (!((commonPrefix_1593836812 <= oldPos_1593836822) && (commonPrefix_1593836812 <= newPos_1593836823))) break Label5;
            if ((eq__pkgZkaraxZkarax_u580(HEX5BHEX5D__pkgZkaraxZvdom_u848(newNode_p0, newPos_1593836823), HEX5BHEX5D__pkgZkaraxZvdom_u848(oldNode_p1, oldPos_1593836822), true) == 3)) {
            addPatch__pkgZkaraxZkarax_u1082(kxi_p4, 5, null, null, HEX5BHEX5D__pkgZkaraxZvdom_u848(newNode_p0, newPos_1593836823), HEX5BHEX5D__pkgZkaraxZvdom_u848(oldNode_p1, oldPos_1593836822));
            oldPos_1593836822 = subInt(oldPos_1593836822, 1);
            newPos_1593836823 = subInt(newPos_1593836823, 1);
            }
            else {
              break Label4;
            }
            
          }
      };
      var pos_1593836838 = addInt(nimMin(oldPos_1593836822, newPos_1593836823), 1);
      Label6: {
        var i_1593836843 = 0;
        var colontmp__570441941 = 0;
        colontmp__570441941 = subInt(pos_1593836838, 1);
        var res_570441942 = commonPrefix_1593836812;
        Label7: {
            Label8: while (true) {
            if (!(res_570441942 <= colontmp__570441941)) break Label8;
              i_1593836843 = res_570441942;
              diff__pkgZkaraxZkarax_u1246(HEX5BHEX5D__pkgZkaraxZvdom_u848(newNode_p0, i_1593836843), HEX5BHEX5D__pkgZkaraxZvdom_u848(oldNode_p1, i_1593836843), current_p3, HEX5BHEX5D__pkgZkaraxZvdom_u848(oldNode_p1, i_1593836843).dom, kxi_p4);
              res_570441942 = addInt(res_570441942, 1);
            }
        };
      };
      if ((addInt(oldPos_1593836822, 1) == oldLength_1593836801)) {
      Label9: {
        var i_1593836848 = 0;
        var res_570441945 = pos_1593836838;
        Label10: {
            Label11: while (true) {
            if (!(res_570441945 <= newPos_1593836823)) break Label11;
              i_1593836848 = res_570441945;
              addPatch__pkgZkaraxZkarax_u1082(kxi_p4, 2, current_p3, null, HEX5BHEX5D__pkgZkaraxZvdom_u848(newNode_p0, i_1593836848), null);
              res_570441945 = addInt(res_570441945, 1);
            }
        };
      };
      }
      else {
        var before_1593836849 = current_p3.childNodes[chckIndx(addInt(oldPos_1593836822, 1), 0, (current_p3.childNodes).length - 1)];
        Label12: {
          var i_1593836854 = 0;
          var res_570441948 = pos_1593836838;
          Label13: {
              Label14: while (true) {
              if (!(res_570441948 <= newPos_1593836823)) break Label14;
                i_1593836854 = res_570441948;
                addPatch__pkgZkaraxZkarax_u1082(kxi_p4, 3, current_p3, before_1593836849, HEX5BHEX5D__pkgZkaraxZvdom_u848(newNode_p0, i_1593836854), null);
                res_570441948 = addInt(res_570441948, 1);
              }
          };
        };
      }
      
      Label15: {
        var i_1593836859 = 0;
        var res_570441951 = pos_1593836838;
        Label16: {
            Label17: while (true) {
            if (!(res_570441951 <= oldPos_1593836822)) break Label17;
              i_1593836859 = res_570441951;
              addPatch__pkgZkaraxZkarax_u1082(kxi__, 4, null, null, null, HEX5BHEX5D__pkgZkaraxZvdom_u848(oldNode_p1, i_1593836859));
              addPatch__pkgZkaraxZkarax_u1082(kxi_p4, 1, current_p3, current_p3.childNodes[chckIndx(i_1593836859, 0, (current_p3.childNodes).length - 1)], null, null);
              res_570441951 = addInt(res_570441951, 1);
            }
        };
      };
      break;
    case 1:
      addPatch__pkgZkaraxZkarax_u1082(kxi__, 4, null, null, null, oldNode_p1);
      addPatch__pkgZkaraxZkarax_u1082(kxi_p4, 0, parent_p2, current_p3, newNode_p0, null);
      break;
    case 4:
      if (true) {
      failedAssertImpl__stdZassertions_u84([107,97,114,97,120,46,110,105,109,40,53,55,48,44,32,50,54,41,32,96,102,97,108,115,101,96,32,101,113,32,114,101,116,117,114,110,101,100,32,117,115,101,110,101,119,78,111,100,101]);
      }
      
      break;
    }
  };

  
}

function applyComponents__pkgZkaraxZkarax_u1364(kxi_p0) {
    var i_1593836886 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1593836886 < (kxi_p0.components).length)) break Label2;
          var x_1593836891 = kxi_p0.components[chckIndx(i_1593836886, 0, (kxi_p0.components).length - 1)].oldNode;
          var newNode_1593836892 = kxi_p0.components[chckIndx(i_1593836886, 0, (kxi_p0.components).length - 1)].newNode;
          if ((!(cmpClosures(x_1593836891.changedImpl, null)) && x_1593836891.changedImpl(x_1593836891, newNode_1593836892))) {
          var current_1593836897 = kxi_p0.components[chckIndx(i_1593836886, 0, (kxi_p0.components).length - 1)].current;
          var parent_1593836898 = kxi_p0.components[chckIndx(i_1593836886, 0, (kxi_p0.components).length - 1)].parent;
          x_1593836891.updatedImpl(x_1593836891, newNode_1593836892);
          var oldExpanded_1593836899 = x_1593836891.expanded;
          x_1593836891.expanded = x_1593836891.renderImpl(x_1593836891);
          x_1593836891.renderedVersion = x_1593836891.version;
          if ((oldExpanded_1593836899 == null)) {
          addPatch__pkgZkaraxZkarax_u1082(kxi__, 4, null, null, null, x_1593836891);
          addPatch__pkgZkaraxZkarax_u1082(kxi_p0, 0, parent_1593836898, current_1593836897, x_1593836891.expanded, null);
          }
          else {
            diff__pkgZkaraxZkarax_u1246(x_1593836891.expanded, oldExpanded_1593836899, parent_1593836898, current_1593836897, kxi_p0);
          }
          
          }
          
          i_1593836886 = addInt(i_1593836886, 1);
        }
    };
    if (kxi_p0.components.length < 0) { for (var i = kxi_p0.components.length ; i < 0 ; ++i) kxi_p0.components.push(({oldNode: null, newNode: null, parent: null, current: null})); }
               else { kxi_p0.components.length = 0; };

  
}

function reapplyEvents__pkgZkaraxZkarax_u329(n_p0) {
    removeAllEventHandlers__pkgZkaraxZkarax_u149(n_p0.dom);
    applyEvents__pkgZkaraxZkarax_u318(n_p0);

  
}

function moveDom__pkgZkaraxZkarax_u1176(dest_p0, src_p1) {
    dest_p0.dom = src_p1.dom;
    src_p1.dom = null;
    reapplyEvents__pkgZkaraxZkarax_u329(dest_p0);
    if (!((dest_p0.id == null))) {
    kxi__.byId[dest_p0.id] = dest_p0;
    }
    
    if (!((len__pkgZkaraxZvdom_u841(dest_p0) == len__pkgZkaraxZvdom_u841(src_p1)))) {
    failedAssertImpl__stdZassertions_u84([107,97,114,97,120,46,110,105,109,40,52,49,57,44,32,51,41,32,96,100,101,115,116,46,108,101,110,32,61,61,32,115,114,99,46,108,101,110,96,32]);
    }
    
    Label1: {
      var i_1593836714 = 0;
      var colontmp__570441997 = 0;
      colontmp__570441997 = len__pkgZkaraxZvdom_u841(dest_p0);
      var i_570441998 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570441998 < colontmp__570441997)) break Label3;
            i_1593836714 = i_570441998;
            moveDom__pkgZkaraxZkarax_u1176(HEX5BHEX5D__pkgZkaraxZvdom_u848(dest_p0, i_1593836714), HEX5BHEX5D__pkgZkaraxZvdom_u848(src_p1, i_1593836714));
            i_570441998 = addInt(i_570441998, 1);
          }
      };
    };

  
}

function HEX5BHEX5DHEX3D__pkgZkaraxZvdom_u852(x_p0, idx_p1, y_p2) {
    x_p0.kids[chckIndx(idx_p1, 0, (x_p0.kids).length - 1)] = y_p2;

  
}

function applyPatch__pkgZkaraxZkarax_u1195(kxi_p0) {
    Label1: {
      var i_1593836721 = 0;
      var i_570441991 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570441991 < kxi_p0.patchLen)) break Label3;
            i_1593836721 = i_570441991;
            var p_1593836722 = nimCopy(null, kxi_p0.patches[chckIndx(i_1593836721, 0, (kxi_p0.patches).length - 1)], NTI1593835528);
            switch (p_1593836722.k) {
            case 0:
              var nn_1593836723 = toDom__pkgZkaraxZkarax_u347(p_1593836722.newNode, true, kxi_p0);
              if ((p_1593836722.parent == null)) {
              replaceById__pkgZkaraxZkarax_u567(kxi_p0.rootId, nn_1593836723);
              }
              else {
                if ((p_1593836722.current.parentNode == p_1593836722.parent)) {
                p_1593836722.parent.replaceChild(nn_1593836723, p_1593836722.current);
                }
                else {
                p_1593836722.parent.appendChild(nn_1593836723);
                }
                
              }
              
              break;
            case 5:
              moveDom__pkgZkaraxZkarax_u1176(p_1593836722.newNode, p_1593836722.oldNode);
              break;
            case 1:
              p_1593836722.parent.removeChild(p_1593836722.current);
              break;
            case 2:
              var nn_1593836732 = toDom__pkgZkaraxZkarax_u347(p_1593836722.newNode, true, kxi_p0);
              p_1593836722.parent.appendChild(nn_1593836732);
              break;
            case 3:
              var nn_1593836733 = toDom__pkgZkaraxZkarax_u347(p_1593836722.newNode, true, kxi_p0);
              p_1593836722.parent.insertBefore(nn_1593836733, p_1593836722.current);
              break;
            case 4:
              var n_1593836734 = p_1593836722.oldNode;
              if (!((n_1593836734.id == null))) {
              delete kxi_p0.byId[n_1593836734.id];
              }
              
              if ((n_1593836734.kind == 5)) {
              var x_1593836744 = n_1593836734;
              if (!(cmpClosures(x_1593836744.onDetachImpl, null))) {
              x_1593836744.onDetachImpl(x_1593836744);
              }
              
              }
              
              if (!(kxi_p0.surpressRedraws)) {
              n_1593836734.dom = null;
              }
              
              break;
            }
            i_570441991 = addInt(i_570441991, 1);
          }
      };
    };
    kxi_p0.patchLen = 0;
    Label4: {
      var i_1593836753 = 0;
      var i_570441994 = 0;
      Label5: {
          Label6: while (true) {
          if (!(i_570441994 < kxi_p0.patchLenV)) break Label6;
            i_1593836753 = i_570441994;
            var p_1593836754 = nimCopy(null, kxi_p0.patchesV[chckIndx(i_1593836753, 0, (kxi_p0.patchesV).length - 1)], NTI1593835529);
            HEX5BHEX5DHEX3D__pkgZkaraxZvdom_u852(p_1593836754.parent, p_1593836754.pos, p_1593836754.newChild);
            if (!(!((p_1593836754.newChild.dom == null)))) {
            failedAssertImpl__stdZassertions_u84([107,97,114,97,120,46,110,105,109,40,52,53,56,44,32,53,41,32,96,112,46,110,101,119,67,104,105,108,100,46,100,111,109,32,33,61,32,110,105,108,96,32]);
            }
            
            i_570441994 = addInt(i_570441994, 1);
          }
      };
    };
    kxi_p0.patchLenV = 0;

  
}

function dodraw__pkgZkaraxZkarax_u1453(kxi_p0) {
    var Temporary1;

  BeforeRet: {
    var HEX3Aenv_570441647 = null;
    HEX3Aenv_570441647 = {m_type: NTI570436737, kxi0: null};
    HEX3Aenv_570441647.kxi0 = kxi_p0;
    if ((HEX3Aenv_570441647.kxi0.renderer == null)) {
    break BeforeRet;
    }
    
    HEX3Aenv_570441647.kxi0.renderId = 0;
    if (HEX3Aenv_570441647.kxi0.rendering) {
    Temporary1 = HEX3Aanonymous__pkgZkaraxZkarax_u1458.bind(HEX3Aenv_570441647); Temporary1.ClP_0 = HEX3Aanonymous__pkgZkaraxZkarax_u1458; Temporary1.ClE_0 = HEX3Aenv_570441647;
    HEX3Aenv_570441647.kxi0.renderId = window.requestAnimationFrame(Temporary1);
    break BeforeRet;
    }
    
    HEX3Aenv_570441647.kxi0.rendering = true;
    var rdata_1593836979 = {hashPart: null, queryString: null};
    if ((window.location.hash.indexOf("?")>=0)) {
    var hashSplit_1593836980 = window.location.hash.split("?");
    rdata_1593836979.hashPart = hashSplit_1593836980[chckIndx(0, 0, (hashSplit_1593836980).length - 1)];
    rdata_1593836979.queryString = (HEX5BHEX5D__pkgZkaraxZkarax_u1470(hashSplit_1593836980, HEX2EHEX2E__stdZenumutils_u105(1, 1)).join("?"));
    }
    else {
      rdata_1593836979.hashPart = window.location.hash;
      rdata_1593836979.queryString = window.location.search;
    }
    
    var newtree_1593837014 = HEX3Aenv_570441647.kxi0.renderer(rdata_1593836979);
    HEX3Aenv_570441647.kxi0.runCount = addInt(HEX3Aenv_570441647.kxi0.runCount, 1);
    newtree_1593837014.id = HEX3Aenv_570441647.kxi0.rootId;
    HEX3Aenv_570441647.kxi0.toFocus = null;
    if ((HEX3Aenv_570441647.kxi0.currentTree == null)) {
    var asdom_1593837024 = toDom__pkgZkaraxZkarax_u347(newtree_1593837014, true, HEX3Aenv_570441647.kxi0);
    replaceById__pkgZkaraxZkarax_u567(HEX3Aenv_570441647.kxi0.rootId, asdom_1593837024);
    }
    else {
      var olddom_1593837025 = document.getElementById(HEX3Aenv_570441647.kxi0.rootId);
      diff__pkgZkaraxZkarax_u1246(newtree_1593837014, HEX3Aenv_570441647.kxi0.currentTree, null, olddom_1593837025, HEX3Aenv_570441647.kxi0);
    }
    
    applyComponents__pkgZkaraxZkarax_u1364(HEX3Aenv_570441647.kxi0);
    applyPatch__pkgZkaraxZkarax_u1195(HEX3Aenv_570441647.kxi0);
    HEX3Aenv_570441647.kxi0.currentTree = newtree_1593837014;
    if (!((HEX3Aenv_570441647.kxi0.postRenderCallback == null))) {
    HEX3Aenv_570441647.kxi0.postRenderCallback(rdata_1593836979);
    }
    
    if (!((HEX3Aenv_570441647.kxi0.toFocus == null))) {
    HEX3Aenv_570441647.kxi0.toFocus.focus();
    }
    
    HEX3Aenv_570441647.kxi0.rendering = false;
  };

  
}

function init__pkgZkaraxZkarax_u1555(ev_p0) {
    var Temporary1;

function HEX3Aanonymous__pkgZkaraxZkarax_u1557() {
    dodraw__pkgZkaraxZkarax_u1453(kxi__);

  
}

    Temporary1 = HEX3Aanonymous__pkgZkaraxZkarax_u1557.bind(null); Temporary1.ClP_0 = HEX3Aanonymous__pkgZkaraxZkarax_u1557; Temporary1.ClE_0 = null;
    kxi__.renderId = window.requestAnimationFrame(Temporary1);

  
}

function HEX3Aanonymous__pkgZkaraxZkarax_u1552() {
    dodraw__pkgZkaraxZkarax_u1453(this.kxi0);

  
}

function redraw__pkgZkaraxZkarax_u1550(kxi_p0) {
    var Temporary1;

    var HEX3Aenv_570442003 = null;
    HEX3Aenv_570442003 = {m_type: NTI570436908, kxi0: null};
    HEX3Aenv_570442003.kxi0 = kxi_p0;
    if ((HEX3Aenv_570442003.kxi0.renderId == 0)) {
    Temporary1 = HEX3Aanonymous__pkgZkaraxZkarax_u1552.bind(HEX3Aenv_570442003); Temporary1.ClP_0 = HEX3Aanonymous__pkgZkaraxZkarax_u1552; Temporary1.ClE_0 = HEX3Aenv_570442003;
    HEX3Aenv_570442003.kxi0.renderId = window.requestAnimationFrame(Temporary1);
    }
    

  
}

function setRenderer__pkgZkaraxZkarax_u1589(renderer_p0, root_p1, clientPostRenderCallback_p2) {
    var Temporary1;
    var Temporary2;

function HEX3Aanonymous__pkgZkaraxZkarax_u1713() {
    redraw__pkgZkaraxZkarax_u1550(kxi__);

  
}

  var result_1593837117 = null;

    if ((document.getElementById(root_p1) == null)) {
    var msg_1593837121 = (("Could not find a <div> with id=" + root_p1) + ". Karax needs it as its rendering target.");
    raiseException({message: cstrToNimstr(msg_1593837121), parent: null, m_type: NTI33555171, name: null, trace: [], up: null}, "Exception");
    }
    
    result_1593837117 = {rootId: root_p1, renderer: renderer_p0, postRenderCallback: clientPostRenderCallback_p2, patches: newSeq__pkgZkaraxZkarax_u1619(60), patchesV: newSeq__pkgZkaraxZkarax_u1660(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, rendering: false, patchLen: 0, patchLenV: 0, runCount: 0};
    kxi__ = result_1593837117;
    Temporary1 = init__pkgZkaraxZkarax_u1555.bind(null); Temporary1.ClP_0 = init__pkgZkaraxZkarax_u1555; Temporary1.ClE_0 = null;
    window.addEventListener("load", Temporary1, false);
    Temporary2 = HEX3Aanonymous__pkgZkaraxZkarax_u1713.bind(null); Temporary2.ClP_0 = HEX3Aanonymous__pkgZkaraxZkarax_u1713; Temporary2.ClE_0 = null;
    window.onhashchange = Temporary2;

  return result_1593837117;

}

function wrapRenderer__pkgZkaraxZkarax_u1877(data_p0) {
  var result_1593837399 = null;

    result_1593837399 = this.renderer0();

  return result_1593837399;

}

function wrapPostRender__pkgZkaraxZkarax_u1880(data_p0) {
    if (!(cmpClosures(this.clientPostRenderCallback1, null))) {
    this.clientPostRenderCallback1();
    }
    

  
}

function setRenderer__pkgZkaraxZkarax_u1870(renderer_p0, root_p1, clientPostRenderCallback_p2) {
    var Temporary1;
    var Temporary2;

  var result_1593837396 = null;

    var HEX3Aenv_570441610 = null;
    HEX3Aenv_570441610 = {m_type: NTI570436717, renderer0: null, clientPostRenderCallback1: null};
    HEX3Aenv_570441610.renderer0 = renderer_p0;
    HEX3Aenv_570441610.clientPostRenderCallback1 = clientPostRenderCallback_p2;
    Temporary1 = wrapRenderer__pkgZkaraxZkarax_u1877.bind(HEX3Aenv_570441610); Temporary1.ClP_0 = wrapRenderer__pkgZkaraxZkarax_u1877; Temporary1.ClE_0 = HEX3Aenv_570441610;
    Temporary2 = wrapPostRender__pkgZkaraxZkarax_u1880.bind(HEX3Aenv_570441610); Temporary2.ClP_0 = wrapPostRender__pkgZkaraxZkarax_u1880; Temporary2.ClE_0 = HEX3Aenv_570441610;
    result_1593837396 = setRenderer__pkgZkaraxZkarax_u1589(Temporary1, root_p1, Temporary2);

  return result_1593837396;

}

function newVNode__pkgZkaraxZvdom_u939(kind_p0) {
  var result_1627390893 = null;

    result_1627390893 = {kind: kind_p0, index: (-1), m_type: NTI1627390046, id: null, class: null, text: null, kids: [], attrs: [], events: [], style: null, styleVersion: 0, dom: null};

  return result_1627390893;

}

function add__pkgZkaraxZvdom_u856(parent_p0, kid_p1) {
    parent_p0.kids.push(kid_p1);;

  
}

function tree__pkgZkaraxZvdom_u942(kind_p0, kids_p1) {
  var result_1627390897 = null;

    result_1627390897 = newVNode__pkgZkaraxZvdom_u939(kind_p0);
    Label1: {
      var k_1627390910 = null;
      var i_570442051 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570442051 < (kids_p1).length)) break Label3;
            k_1627390910 = kids_p1[chckIndx(i_570442051, 0, (kids_p1).length - 1)];
            add__pkgZkaraxZvdom_u856(result_1627390897, k_1627390910);
            i_570442051 += 1;
          }
      };
    };

  return result_1627390897;

}

function setAttr__pkgZkaraxZvdom_u771(n_p0, key_p1, val_p2) {
  BeforeRet: {
    if (((n_p0.attrs).length == 0)) {
    n_p0.attrs = nimCopy(null, [key_p1, val_p2], NTI1627390234);
    }
    else {
      Label1: {
        var i_1627390743 = 0;
        var colontmp__570442054 = 0;
        colontmp__570442054 = subInt((n_p0.attrs).length, 2);
        var res_570442055 = 0;
        Label2: {
            Label3: while (true) {
            if (!(res_570442055 <= colontmp__570442054)) break Label3;
              i_1627390743 = res_570442055;
              if ((n_p0.attrs[chckIndx(i_1627390743, 0, (n_p0.attrs).length - 1)] == key_p1)) {
              n_p0.attrs[chckIndx(addInt(i_1627390743, 1), 0, (n_p0.attrs).length - 1)] = val_p2;
              break BeforeRet;
              }
              
              res_570442055 = addInt(res_570442055, 2);
            }
        };
      };
      n_p0.attrs.push(key_p1);;
      n_p0.attrs.push(val_p2);;
    }
    
  };

  
}

function setAttr__pkgZkaraxZvdom_u816(n_p0, key_p1, val_p2) {
    var Temporary1;

    if (val_p2) {
    Temporary1 = "";
    }
    else {
    Temporary1 = null;
    }
    
    setAttr__pkgZkaraxZvdom_u771(n_p0, key_p1, Temporary1);

  
}

function text__pkgZkaraxZvdom_u1010(s_p0) {
  var result_1627390964 = null;

    result_1627390964 = {kind: 0, text: toJSStr(s_p0), index: (-1), m_type: NTI1627390046, id: null, class: null, kids: [], attrs: [], events: [], style: null, styleVersion: 0, dom: null};

  return result_1627390964;

}

function addEventListener__pkgZkaraxZvdom_u1061(n_p0, event_p1, handler_p2) {
    n_p0.events.push({Field0: event_p1, Field1: handler_p2, Field2: null});;

  
}

function wrapper__pkgZkaraxZkarax_u1968(ev_p0, n_p1) {
    this.action0(ev_p0, n_p1);
    if (!(this.kxi1.surpressRedraws)) {
    redraw__pkgZkaraxZkarax_u1550(this.kxi1);
    }
    

  
}

function addEventHandler__pkgZkaraxZkarax_u1963(n_p0, k_p1, action_p2, kxi_p3) {
    var Temporary1;

    var HEX3Aenv_570442061 = null;
    HEX3Aenv_570442061 = {m_type: NTI570436949, action0: null, kxi1: null};
    HEX3Aenv_570442061.action0 = action_p2;
    HEX3Aenv_570442061.kxi1 = kxi_p3;
    Temporary1 = wrapper__pkgZkaraxZkarax_u1968.bind(HEX3Aenv_570442061); Temporary1.ClP_0 = wrapper__pkgZkaraxZkarax_u1968; Temporary1.ClE_0 = HEX3Aenv_570442061;
    addEventListener__pkgZkaraxZvdom_u1061(n_p0, k_p1, Temporary1);

  
}

function wrapper__pkgZkaraxZkarax_u1977(ev_p0, n_p1) {
    this.action0();
    if (!(this.kxi1.surpressRedraws)) {
    redraw__pkgZkaraxZkarax_u1550(this.kxi1);
    }
    

  
}

function addEventHandler__pkgZkaraxZkarax_u1971(n_p0, k_p1, action_p2, kxi_p3) {
    var Temporary1;

    var HEX3Aenv_570442098 = null;
    HEX3Aenv_570442098 = {m_type: NTI570436969, action0: null, kxi1: null};
    HEX3Aenv_570442098.action0 = action_p2;
    HEX3Aenv_570442098.kxi1 = kxi_p3;
    Temporary1 = wrapper__pkgZkaraxZkarax_u1977.bind(HEX3Aenv_570442098); Temporary1.ClP_0 = wrapper__pkgZkaraxZkarax_u1977; Temporary1.ClE_0 = HEX3Aenv_570442098;
    addEventListener__pkgZkaraxZvdom_u1061(n_p0, k_p1, Temporary1);

  
}

function clearTerminal__lisp_u12() {
          console.clear();
      term.clear();
    

  
}

function nsuContinuesWith(s_p0, substr_p1, start_p2) {
  var result_771753431 = false;

  BeforeRet: {
    result_771753431 = false;
    var i_771753432 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if (((substr_p1).length <= i_771753432)) {
          result_771753431 = true;
          break BeforeRet;
          }
          
          if ((((s_p0).length <= addInt(i_771753432, start_p2)) || !((s_p0[chckIndx(addInt(i_771753432, start_p2), 0, (s_p0).length - 1)] == substr_p1[chckIndx(i_771753432, 0, (substr_p1).length - 1)])))) {
          result_771753431 = false;
          break BeforeRet;
          }
          
          i_771753432 = addInt(i_771753432, 1);
        }
    };
  };

  return result_771753431;

}

function multiReplace__pureZstrutils_u1930(s_p0, replacements_p1) {
                      var Temporary10;

  var result_771753869 = [];

    result_771753869 = nimCopy(null, mnewString(0), NTI33554449);
    var i_771753870 = 0;
    var fastChk_771753871 = nimCopy(null, ConstSet6, NTI771753313);
    Label1: {
      var sub_771753885 = [];
      var by_771753886 = [];
      var i_570442139 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570442139 < (replacements_p1).length)) break Label3;
            sub_771753885 = replacements_p1[chckIndx(i_570442139, 0, (replacements_p1).length - 1)]["Field0"];
            by_771753886 = replacements_p1[chckIndx(i_570442139, 0, (replacements_p1).length - 1)]["Field1"];
            if ((0 < (sub_771753885).length)) {
            fastChk_771753871[sub_771753885[chckIndx(0, 0, (sub_771753885).length - 1)]] = true;
            }
            
            i_570442139 += 1;
          }
      };
    };
    Label4: {
        Label5: while (true) {
        if (!(i_771753870 < (s_p0).length)) break Label5;
          Label6: {
            if ((fastChk_771753871[s_p0[chckIndx(i_771753870, 0, (s_p0).length - 1)]] != undefined)) {
            Label7: {
              var sub_771753899 = [];
              var by_771753900 = [];
              var i_570442143 = 0;
              Label8: {
                  Label9: while (true) {
                  if (!(i_570442143 < (replacements_p1).length)) break Label9;
                    sub_771753899 = replacements_p1[chckIndx(i_570442143, 0, (replacements_p1).length - 1)]["Field0"];
                    by_771753900 = replacements_p1[chckIndx(i_570442143, 0, (replacements_p1).length - 1)]["Field1"];
                      if (!(0 < (sub_771753899).length)) Temporary10 = false; else {                        Temporary10 = nsuContinuesWith(s_p0, sub_771753899, chckRange(i_771753870, 0, 2147483647));                      }                    if (Temporary10) {
                    result_771753869.push.apply(result_771753869, by_771753900);;
                    i_771753870 = addInt(i_771753870, (sub_771753899).length);
                    break Label6;
                    }
                    
                    i_570442143 += 1;
                  }
              };
            };
            }
            
            addChar(result_771753869, s_p0[chckIndx(i_771753870, 0, (s_p0).length - 1)]);;
            i_771753870 = addInt(i_771753870, 1);
          };
        }
    };

  return result_771753869;

}

function print__lisp_u13(s_p0) {
    rawEcho(s_p0);
    var cs_570425359 = toJSStr(multiReplace__pureZstrutils_u1930(s_p0, [nimCopy(null, {Field0: [13], Field1: []}, NTI570425354), nimCopy(null, {Field0: [10], Field1: [13,10]}, NTI570425354)]));
    term.write(cs_570425359);
    term.write("\r\n");

  
}

function styled__lisp_u15853(s_p0, color_p1) {
  var result_570441200 = [];

    result_570441200 = nimCopy(null, ([27,91]).concat(color_p1,[109],s_p0,[27,91,48,109]), NTI33554449);

  return result_570441200;

}

function HEX5BHEX5D__lisp_u8998(s_p0, i_p1) {
  var result_570434346 = null;
  var result_570434346_Idx = 0;

    result_570434346 = s_p0; result_570434346_Idx = chckIndx(subInt((s_p0).length, i_p1), 0, (s_p0).length - 1);

  return [result_570434346, result_570434346_Idx];

}

function delete__lisp_u9180(x_p0, x_p0_Idx, i_p1) {
    if (((x_p0[x_p0_Idx]).length - 1 < i_p1)) {
    raiseException({message: ([105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,58,32,39]).concat(HEX24__systemZdollars_u8(i_p1),[39,32,60,32,39],HEX24__systemZdollars_u8((x_p0[x_p0_Idx]).length),[39,32,102,97,105,108,101,100]), m_type: NTI134217749, parent: null, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    x_p0[x_p0_Idx].splice(i_p1, 1);

  
}

function pop__lisp_u8100(s_p0, s_p0_Idx) {
  var result_570433447 = null;

    var L_570433451 = subInt((s_p0[s_p0_Idx]).length, 1);
    result_570433447 = s_p0[s_p0_Idx][chckIndx(L_570433451, 0, (s_p0[s_p0_Idx]).length - 1)];
    if (s_p0[s_p0_Idx].length < chckRange(L_570433451, 0, 2147483647)) { for (var i = s_p0[s_p0_Idx].length ; i < chckRange(L_570433451, 0, 2147483647) ; ++i) s_p0[s_p0_Idx].push(null); }
               else { s_p0[s_p0_Idx].length = chckRange(L_570433451, 0, 2147483647); };

  return result_570433447;

}

function add__lisp_u8865(x_p0, x_p0_Idx, y_p1) {
    var Temporary1;

    var xl_570434216 = (x_p0[x_p0_Idx]).length;
    if (x_p0[x_p0_Idx].length < (Temporary1 = chckRange(addInt(xl_570434216, (y_p1).length), 0, 2147483647), Temporary1)) { for (var i = x_p0[x_p0_Idx].length ; i < Temporary1 ; ++i) x_p0[x_p0_Idx].push(null); }
               else { x_p0[x_p0_Idx].length = Temporary1; };
    Label2: {
      var i_570434231 = 0;
      var colontmp__570442157 = 0;
      colontmp__570442157 = (y_p1).length - 1;
      var res_570442158 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_570442158 <= colontmp__570442157)) break Label4;
            i_570434231 = res_570442158;
            x_p0[x_p0_Idx][chckIndx(addInt(xl_570434216, i_570434231), 0, (x_p0[x_p0_Idx]).length - 1)] = y_p1[chckIndx(i_570434231, 0, (y_p1).length - 1)];
            res_570442158 = addInt(res_570442158, 1);
          }
      };
    };

  
}

function postProcessing__lisp_u8847(root_p0) {
          var Temporary3;
            var Temporary4;
            var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;
            var Temporary9;
            var Temporary10;
            var Temporary11;
            var Temporary12;
            var Temporary13;
            var Temporary14;
          var Temporary15;
          var Temporary16;
          var Temporary17;
          var Temporary18;
          var Temporary19;
          var Temporary20;
          var Temporary21;

    var stack_570434197 = [[root_p0]];
    Label1: {
        Label2: while (true) {
        if (!(0 < (stack_570434197[0]).length)) break Label2;
          var n_570434204 = pop__lisp_u8100(stack_570434197, 0);
          if ((n_570434204.kind == 1)) {
          var Temporary3 = n_570434204;
          if (ConstSet40[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI570425392)); }
          add__lisp_u8865(stack_570434197, 0, Temporary3.kids);
            var Temporary4 = n_570434204;
            if (ConstSet41[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI570425392)); }
          if (((Temporary4.kids).length == 3)) {
            var Temporary5 = n_570434204;
            if (ConstSet42[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI570425392)); }
          if (((Temporary6 = Temporary5.kids, Temporary6)[chckIndx(0, 0, (Temporary6).length - 1)].kind == 3)) {
            var Temporary7 = n_570434204;
            if (ConstSet45[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI570425392)); }
            var Temporary9 = (Temporary8 = Temporary7.kids, Temporary8)[chckIndx(0, 0, (Temporary8).length - 1)];
            if (ConstSet44[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'keyword\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI570425392)); }
          if ((ConstSet43[Temporary9.keyword] != undefined)) {
          if (true) {
          var inst_570434245 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1006, Field2: 13};
          raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434245.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_570434204.line),makeNimstrLit("): Binary operator must be used like this: (a + b) instead of (+ a b)")));
          }
          
          }
          
          }
          else {
            var Temporary10 = n_570434204;
            if (ConstSet46[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI570425392)); }
          if (((Temporary11 = Temporary10.kids, Temporary11)[chckIndx(1, 0, (Temporary11).length - 1)].kind == 3)) {
            var Temporary12 = n_570434204;
            if (ConstSet49[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI570425392)); }
            var Temporary14 = (Temporary13 = Temporary12.kids, Temporary13)[chckIndx(1, 0, (Temporary13).length - 1)];
            if (ConstSet48[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'keyword\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI570425392)); }
          if ((ConstSet47[Temporary14.keyword] != undefined)) {
          var Temporary15 = n_570434204;
          if (ConstSet50[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI570425392)); }
          var Temporary16 = n_570434204;
          if (ConstSet51[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI570425392)); }
          var Temporary18 = n_570434204;
          if (ConstSet52[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI570425392)); }
          var Temporary20 = n_570434204;
          if (ConstSet53[Temporary20.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary20.kind, NTI570425392)); }
          Temporary15.kids = nimCopy(null, [(Temporary17 = Temporary16.kids, Temporary17)[chckIndx(1, 0, (Temporary17).length - 1)], (Temporary19 = Temporary18.kids, Temporary19)[chckIndx(0, 0, (Temporary19).length - 1)], (Temporary21 = Temporary20.kids, Temporary21)[chckIndx(2, 0, (Temporary21).length - 1)]], NTI570431561);
          }
          
          }
          }
          }
          
          }
          
        }
    };

  
}

function buildAst__lisp_u8946(tokens_p0) {
              var Temporary4;
              var Temporary5;
              var Temporary6;
              var Temporary7;
              var Temporary8;
              var Temporary9;
              var Temporary10;
                var Temporary11;
              var Temporary12;
              var Temporary13;
              var Temporary14;
              var Temporary15;
              var Temporary16;
              var Temporary17;
              var Temporary18;
              var Temporary19;
              var Temporary20;
              var Temporary21;
              var Temporary22;
              var Temporary23;
              var Temporary24;
              var Temporary25;
              var Temporary26;
              var Temporary27;
              var Temporary28;
              var Temporary29;
              var Temporary30;
              var Temporary31;
              var Temporary32;
              var Temporary33;
              var Temporary34;
              var Temporary35;
              var Temporary36;

  var result_570434292 = null;

    result_570434292 = {kind: 1, line: 1, kids: [{kind: 3, keyword: 8, line: 1, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null}], listType: null, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
    var stack_570434301 = [[result_570434292]];
    var currentTags_570434302 = {};
    Label1: {
      var t_570434316 = null;
      var i_570442148 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570442148 < (tokens_p0).length)) break Label3;
            t_570434316 = tokens_p0[chckIndx(i_570442148, 0, (tokens_p0).length - 1)];
            if (!((0 < (stack_570434301[0]).length))) {
            var inst_570434321 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1021, Field2: 5};
            raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434321.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(t_570434316.line),[41,58,32,85,110,109,97,116,99,104,101,100,32,99,108,111,115,105,110,103,32,112,97,114,101,110,116,104,101,115,105,115]));
            }
            
            switch (t_570434316.kind) {
            case 12:
              var Temporary4 = t_570434316;
              if (ConstSet7[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'member\' is not accessible for type \'Token\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI570425389)); }
              var nHEX60gensym425_570434327 = {kind: 19, member: nimCopy(null, Temporary4.member, NTI33554449), line: 0, tags: {}, enumType: null, className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
              if (!((nHEX60gensym425_570434327.line == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,53,44,32,55,41,32,96,110,96,103,101,110,115,121,109,52,50,53,46,108,105,110,101,32,61,61,32,48,96,32]);
              }
              
              if (!((SetCard(nHEX60gensym425_570434327.tags) == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,54,44,32,55,41,32,96,99,97,114,100,40,110,96,103,101,110,115,121,109,52,50,53,46,116,97,103,115,41,32,61,61,32,48,96,32]);
              }
              
              nHEX60gensym425_570434327.line = t_570434316.line;
              nHEX60gensym425_570434327.tags = nimCopy(nHEX60gensym425_570434327.tags, currentTags_570434302, NTI570425407);
              currentTags_570434302 = nimCopy(currentTags_570434302, ConstSet8, NTI570431598);
              var Temporary6 = (Temporary5 = HEX5BHEX5D__lisp_u8998(stack_570434301[0], 1), Temporary5)[0][Temporary5[1]];
              if (ConstSet9[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI570425392)); }
              Temporary6.kids.push(nHEX60gensym425_570434327);;
              if (false) {
              stack_570434301[0].push(nHEX60gensym425_570434327);;
              }
              
              break;
            case 11:
              var nHEX60gensym431_570434359 = {kind: 15, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
              if (!((nHEX60gensym431_570434359.line == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,53,44,32,55,41,32,96,110,96,103,101,110,115,121,109,52,51,49,46,108,105,110,101,32,61,61,32,48,96,32]);
              }
              
              if (!((SetCard(nHEX60gensym431_570434359.tags) == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,54,44,32,55,41,32,96,99,97,114,100,40,110,96,103,101,110,115,121,109,52,51,49,46,116,97,103,115,41,32,61,61,32,48,96,32]);
              }
              
              nHEX60gensym431_570434359.line = t_570434316.line;
              nHEX60gensym431_570434359.tags = nimCopy(nHEX60gensym431_570434359.tags, currentTags_570434302, NTI570425407);
              currentTags_570434302 = nimCopy(currentTags_570434302, ConstSet10, NTI570431598);
              var Temporary8 = (Temporary7 = HEX5BHEX5D__lisp_u8998(stack_570434301[0], 1), Temporary7)[0][Temporary7[1]];
              if (ConstSet11[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI570425392)); }
              Temporary8.kids.push(nHEX60gensym431_570434359);;
              if (false) {
              stack_570434301[0].push(nHEX60gensym431_570434359);;
              }
              
              break;
            case 10:
              var nHEX60gensym437_570434386 = {kind: 14, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
              if (!((nHEX60gensym437_570434386.line == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,53,44,32,55,41,32,96,110,96,103,101,110,115,121,109,52,51,55,46,108,105,110,101,32,61,61,32,48,96,32]);
              }
              
              if (!((SetCard(nHEX60gensym437_570434386.tags) == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,54,44,32,55,41,32,96,99,97,114,100,40,110,96,103,101,110,115,121,109,52,51,55,46,116,97,103,115,41,32,61,61,32,48,96,32]);
              }
              
              nHEX60gensym437_570434386.line = t_570434316.line;
              nHEX60gensym437_570434386.tags = nimCopy(nHEX60gensym437_570434386.tags, currentTags_570434302, NTI570425407);
              currentTags_570434302 = nimCopy(currentTags_570434302, ConstSet12, NTI570431598);
              var Temporary10 = (Temporary9 = HEX5BHEX5D__lisp_u8998(stack_570434301[0], 1), Temporary9)[0][Temporary9[1]];
              if (ConstSet13[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI570425392)); }
              Temporary10.kids.push(nHEX60gensym437_570434386);;
              if (false) {
              stack_570434301[0].push(nHEX60gensym437_570434386);;
              }
              
              break;
            case 9:
                var Temporary11 = t_570434316;
                if (ConstSet14[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tag\' is not accessible for type \'Token\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI570425389)); }
              if (!(!((currentTags_570434302[Temporary11.tag] != undefined)))) {
              var inst_570434420 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1045, Field2: 7};
              var Temporary12 = t_570434316;
              if (ConstSet15[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tag\' is not accessible for type \'Token\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI570425389)); }
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434420.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(t_570434316.line),[41,58,32,84,97,103,32,100,101,102,105,110,101,100,32,109,111,114,101,32,116,104,97,110,32,111,110,99,101,32,102,111,114,32,116,104,101,32,115,97,109,101,32,110,111,100,101,58,32],reprEnum(Temporary12.tag, NTI570425385)));
              }
              
              var Temporary13 = t_570434316;
              if (ConstSet16[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tag\' is not accessible for type \'Token\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI570425389)); }
              currentTags_570434302[Temporary13.tag] = true;
              break;
            case 8:
              var Temporary14 = t_570434316;
              if (ConstSet17[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'dot\' is not accessible for type \'Token\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI570425389)); }
              var nHEX60gensym445_570434426 = {kind: 10, dot: nimCopy(null, Temporary14.dot, NTI33554449), line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
              if (!((nHEX60gensym445_570434426.line == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,53,44,32,55,41,32,96,110,96,103,101,110,115,121,109,52,52,53,46,108,105,110,101,32,61,61,32,48,96,32]);
              }
              
              if (!((SetCard(nHEX60gensym445_570434426.tags) == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,54,44,32,55,41,32,96,99,97,114,100,40,110,96,103,101,110,115,121,109,52,52,53,46,116,97,103,115,41,32,61,61,32,48,96,32]);
              }
              
              nHEX60gensym445_570434426.line = t_570434316.line;
              nHEX60gensym445_570434426.tags = nimCopy(nHEX60gensym445_570434426.tags, currentTags_570434302, NTI570425407);
              currentTags_570434302 = nimCopy(currentTags_570434302, ConstSet18, NTI570431598);
              var Temporary16 = (Temporary15 = HEX5BHEX5D__lisp_u8998(stack_570434301[0], 1), Temporary15)[0][Temporary15[1]];
              if (ConstSet19[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI570425392)); }
              Temporary16.kids.push(nHEX60gensym445_570434426);;
              if (false) {
              stack_570434301[0].push(nHEX60gensym445_570434426);;
              }
              
              break;
            case 7:
              var Temporary17 = t_570434316;
              if (ConstSet20[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicType\' is not accessible for type \'Token\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI570425389)); }
              var nHEX60gensym451_570434453 = {kind: 5, atomicType: Temporary17.atomicType, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
              if (!((nHEX60gensym451_570434453.line == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,53,44,32,55,41,32,96,110,96,103,101,110,115,121,109,52,53,49,46,108,105,110,101,32,61,61,32,48,96,32]);
              }
              
              if (!((SetCard(nHEX60gensym451_570434453.tags) == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,54,44,32,55,41,32,96,99,97,114,100,40,110,96,103,101,110,115,121,109,52,53,49,46,116,97,103,115,41,32,61,61,32,48,96,32]);
              }
              
              nHEX60gensym451_570434453.line = t_570434316.line;
              nHEX60gensym451_570434453.tags = nimCopy(nHEX60gensym451_570434453.tags, currentTags_570434302, NTI570425407);
              currentTags_570434302 = nimCopy(currentTags_570434302, ConstSet21, NTI570431598);
              var Temporary19 = (Temporary18 = HEX5BHEX5D__lisp_u8998(stack_570434301[0], 1), Temporary18)[0][Temporary18[1]];
              if (ConstSet22[Temporary19.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary19.kind, NTI570425392)); }
              Temporary19.kids.push(nHEX60gensym451_570434453);;
              if (false) {
              stack_570434301[0].push(nHEX60gensym451_570434453);;
              }
              
              break;
            case 3:
              var nHEX60gensym457_570434490 = {kind: 1, kids: [], listType: null, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
              if (!((nHEX60gensym457_570434490.line == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,53,44,32,55,41,32,96,110,96,103,101,110,115,121,109,52,53,55,46,108,105,110,101,32,61,61,32,48,96,32]);
              }
              
              if (!((SetCard(nHEX60gensym457_570434490.tags) == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,54,44,32,55,41,32,96,99,97,114,100,40,110,96,103,101,110,115,121,109,52,53,55,46,116,97,103,115,41,32,61,61,32,48,96,32]);
              }
              
              nHEX60gensym457_570434490.line = t_570434316.line;
              nHEX60gensym457_570434490.tags = nimCopy(nHEX60gensym457_570434490.tags, currentTags_570434302, NTI570425407);
              currentTags_570434302 = nimCopy(currentTags_570434302, ConstSet23, NTI570431598);
              var Temporary21 = (Temporary20 = HEX5BHEX5D__lisp_u8998(stack_570434301[0], 1), Temporary20)[0][Temporary20[1]];
              if (ConstSet24[Temporary21.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary21.kind, NTI570425392)); }
              Temporary21.kids.push(nHEX60gensym457_570434490);;
              if (true) {
              stack_570434301[0].push(nHEX60gensym457_570434490);;
              }
              
              break;
            case 4:
              if (!((0 < (stack_570434301[0]).length))) {
              var inst_570434520 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1055, Field2: 7};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434520.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(t_570434316.line),[41,58,32,85,110,109,97,116,99,104,101,100,32,99,108,111,115,105,110,103,32,112,97,114,101,110,116,104,101,115,105,115]));
              }
              
              delete__lisp_u9180(stack_570434301, 0, chckRange((stack_570434301[0]).length - 1, 0, 2147483647));
              break;
            case 0:
              var Temporary22 = t_570434316;
              if (ConstSet25[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Token\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI570425389)); }
              var nHEX60gensym467_570434553 = {kind: 0, sym: nimCopy(null, Temporary22.sym, NTI33554449), line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
              if (!((nHEX60gensym467_570434553.line == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,53,44,32,55,41,32,96,110,96,103,101,110,115,121,109,52,54,55,46,108,105,110,101,32,61,61,32,48,96,32]);
              }
              
              if (!((SetCard(nHEX60gensym467_570434553.tags) == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,54,44,32,55,41,32,96,99,97,114,100,40,110,96,103,101,110,115,121,109,52,54,55,46,116,97,103,115,41,32,61,61,32,48,96,32]);
              }
              
              nHEX60gensym467_570434553.line = t_570434316.line;
              nHEX60gensym467_570434553.tags = nimCopy(nHEX60gensym467_570434553.tags, currentTags_570434302, NTI570425407);
              currentTags_570434302 = nimCopy(currentTags_570434302, ConstSet26, NTI570431598);
              var Temporary24 = (Temporary23 = HEX5BHEX5D__lisp_u8998(stack_570434301[0], 1), Temporary23)[0][Temporary23[1]];
              if (ConstSet27[Temporary24.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary24.kind, NTI570425392)); }
              Temporary24.kids.push(nHEX60gensym467_570434553);;
              if (false) {
              stack_570434301[0].push(nHEX60gensym467_570434553);;
              }
              
              break;
            case 1:
              var Temporary25 = t_570434316;
              if (ConstSet28[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Token\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI570425389)); }
              var nHEX60gensym473_570434580 = {kind: 9, atomicKind: 0, num: Temporary25.num, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
              if (!((nHEX60gensym473_570434580.line == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,53,44,32,55,41,32,96,110,96,103,101,110,115,121,109,52,55,51,46,108,105,110,101,32,61,61,32,48,96,32]);
              }
              
              if (!((SetCard(nHEX60gensym473_570434580.tags) == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,54,44,32,55,41,32,96,99,97,114,100,40,110,96,103,101,110,115,121,109,52,55,51,46,116,97,103,115,41,32,61,61,32,48,96,32]);
              }
              
              nHEX60gensym473_570434580.line = t_570434316.line;
              nHEX60gensym473_570434580.tags = nimCopy(nHEX60gensym473_570434580.tags, currentTags_570434302, NTI570425407);
              currentTags_570434302 = nimCopy(currentTags_570434302, ConstSet29, NTI570431598);
              var Temporary27 = (Temporary26 = HEX5BHEX5D__lisp_u8998(stack_570434301[0], 1), Temporary26)[0][Temporary26[1]];
              if (ConstSet30[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI570425392)); }
              Temporary27.kids.push(nHEX60gensym473_570434580);;
              if (false) {
              stack_570434301[0].push(nHEX60gensym473_570434580);;
              }
              
              break;
            case 2:
              var Temporary28 = t_570434316;
              if (ConstSet31[Temporary28.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'Token\' using \'kind = "), reprDiscriminant(Temporary28.kind, NTI570425389)); }
              var nHEX60gensym479_570434607 = {kind: 9, atomicKind: 1, str: nimCopy(null, Temporary28.str, NTI33554449), line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, num: 0.0, boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
              if (!((nHEX60gensym479_570434607.line == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,53,44,32,55,41,32,96,110,96,103,101,110,115,121,109,52,55,57,46,108,105,110,101,32,61,61,32,48,96,32]);
              }
              
              if (!((SetCard(nHEX60gensym479_570434607.tags) == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,54,44,32,55,41,32,96,99,97,114,100,40,110,96,103,101,110,115,121,109,52,55,57,46,116,97,103,115,41,32,61,61,32,48,96,32]);
              }
              
              nHEX60gensym479_570434607.line = t_570434316.line;
              nHEX60gensym479_570434607.tags = nimCopy(nHEX60gensym479_570434607.tags, currentTags_570434302, NTI570425407);
              currentTags_570434302 = nimCopy(currentTags_570434302, ConstSet32, NTI570431598);
              var Temporary30 = (Temporary29 = HEX5BHEX5D__lisp_u8998(stack_570434301[0], 1), Temporary29)[0][Temporary29[1]];
              if (ConstSet33[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI570425392)); }
              Temporary30.kids.push(nHEX60gensym479_570434607);;
              if (false) {
              stack_570434301[0].push(nHEX60gensym479_570434607);;
              }
              
              break;
            case 5:
              var Temporary31 = t_570434316;
              if (ConstSet34[Temporary31.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'keyword\' is not accessible for type \'Token\' using \'kind = "), reprDiscriminant(Temporary31.kind, NTI570425389)); }
              var nHEX60gensym485_570434634 = {kind: 3, keyword: Temporary31.keyword, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
              if (!((nHEX60gensym485_570434634.line == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,53,44,32,55,41,32,96,110,96,103,101,110,115,121,109,52,56,53,46,108,105,110,101,32,61,61,32,48,96,32]);
              }
              
              if (!((SetCard(nHEX60gensym485_570434634.tags) == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,54,44,32,55,41,32,96,99,97,114,100,40,110,96,103,101,110,115,121,109,52,56,53,46,116,97,103,115,41,32,61,61,32,48,96,32]);
              }
              
              nHEX60gensym485_570434634.line = t_570434316.line;
              nHEX60gensym485_570434634.tags = nimCopy(nHEX60gensym485_570434634.tags, currentTags_570434302, NTI570425407);
              currentTags_570434302 = nimCopy(currentTags_570434302, ConstSet35, NTI570431598);
              var Temporary33 = (Temporary32 = HEX5BHEX5D__lisp_u8998(stack_570434301[0], 1), Temporary32)[0][Temporary32[1]];
              if (ConstSet36[Temporary33.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary33.kind, NTI570425392)); }
              Temporary33.kids.push(nHEX60gensym485_570434634);;
              if (false) {
              stack_570434301[0].push(nHEX60gensym485_570434634);;
              }
              
              break;
            case 6:
              var Temporary34 = t_570434316;
              if (ConstSet37[Temporary34.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolVal\' is not accessible for type \'Token\' using \'kind = "), reprDiscriminant(Temporary34.kind, NTI570425389)); }
              var nHEX60gensym491_570434661 = {kind: 9, atomicKind: 2, boolean: Temporary34.boolVal, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, num: 0.0, str: [], sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
              if (!((nHEX60gensym491_570434661.line == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,53,44,32,55,41,32,96,110,96,103,101,110,115,121,109,52,57,49,46,108,105,110,101,32,61,61,32,48,96,32]);
              }
              
              if (!((SetCard(nHEX60gensym491_570434661.tags) == 0))) {
              failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,48,50,54,44,32,55,41,32,96,99,97,114,100,40,110,96,103,101,110,115,121,109,52,57,49,46,116,97,103,115,41,32,61,61,32,48,96,32]);
              }
              
              nHEX60gensym491_570434661.line = t_570434316.line;
              nHEX60gensym491_570434661.tags = nimCopy(nHEX60gensym491_570434661.tags, currentTags_570434302, NTI570425407);
              currentTags_570434302 = nimCopy(currentTags_570434302, ConstSet38, NTI570431598);
              var Temporary36 = (Temporary35 = HEX5BHEX5D__lisp_u8998(stack_570434301[0], 1), Temporary35)[0][Temporary35[1]];
              if (ConstSet39[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI570425392)); }
              Temporary36.kids.push(nHEX60gensym491_570434661);;
              if (false) {
              stack_570434301[0].push(nHEX60gensym491_570434661);;
              }
              
              break;
            }
            i_570442148 += 1;
          }
      };
    };
    if (!(((stack_570434301[0]).length == 1))) {
    var inst_570434691 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1073, Field2: 11};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434691.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(tokens_p0[chckIndx(0, 0, (tokens_p0).length - 1)].line),[41,58,32,85,110,109,97,116,99,104,101,100,32,111,112,101,110,105,110,103,32,112,97,114,101,110,116,104,101,115,105,115]));
    }
    
    postProcessing__lisp_u8847(result_570434292);

  return result_570434292;

}

function skipUntil__pureZparseutils_u181(s_p0, until_p1) {
  var result_788529336 = 0;

    result_788529336 = 0;
    Label1: {
        Label2: while (true) {
        if (!((result_788529336 < (s_p0).length) && !((until_p1[s_p0[chckIndx(result_788529336, 0, (s_p0).length - 1)]] != undefined)))) break Label2;
          result_788529336 = addInt(result_788529336, 1);
        }
    };

  return result_788529336;

}

function skipUntil__pureZparseutils_u865(s_p0, until_p1, start_p2) {
  var result_788530021 = 0;

    result_788530021 = skipUntil__pureZparseutils_u181((s_p0.slice(start_p2, (s_p0).length - 1 + 1)), until_p1);

  return result_788530021;

}

function fastSubstr__pureZparseutils_u225(s_p0, token_p1, token_p1_Idx, length_p2) {
    if (token_p1[token_p1_Idx].length < chckRange(length_p2, 0, 2147483647)) { for (var i = token_p1[token_p1_Idx].length; i < chckRange(length_p2, 0, 2147483647); ++i) token_p1[token_p1_Idx].push(0); }
         else {token_p1[token_p1_Idx].length = chckRange(length_p2, 0, 2147483647); };
    Label1: {
      var i_788529385 = 0;
      var i_570442165 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570442165 < length_p2)) break Label3;
            i_788529385 = i_570442165;
            token_p1[token_p1_Idx][chckIndx(i_788529385, 0, (token_p1[token_p1_Idx]).length - 1)] = s_p0[chckIndx(i_788529385, 0, (s_p0).length - 1)];
            i_570442165 = addInt(i_570442165, 1);
          }
      };
    };

  
}

function parseWhile__pureZparseutils_u293(s_p0, token_p1, token_p1_Idx, validChars_p2) {
  var result_788529449 = 0;

    var i_788529450 = 0;
    Label1: {
        Label2: while (true) {
        if (!((i_788529450 < (s_p0).length) && (validChars_p2[s_p0[chckIndx(i_788529450, 0, (s_p0).length - 1)]] != undefined))) break Label2;
          i_788529450 = addInt(i_788529450, 1);
        }
    };
    result_788529449 = i_788529450;
    fastSubstr__pureZparseutils_u225(s_p0, token_p1, token_p1_Idx, result_788529449);

  return result_788529449;

}

function parseWhile__pureZparseutils_u898(s_p0, token_p1, token_p1_Idx, validChars_p2, start_p3) {
  var result_788530055 = 0;

    result_788530055 = parseWhile__pureZparseutils_u293((s_p0.slice(start_p3, (s_p0).length - 1 + 1)), token_p1, token_p1_Idx, validChars_p2);

  return result_788530055;

}

function find__stdZenumutils_u55(a_p0, item_p1) {
  var result_956301372 = 0;

  BeforeRet: {
    result_956301372 = 0;
    Label1: {
      var i_956301376 = [];
      var i_570431239 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570431239 < (a_p0).length)) break Label3;
            i_956301376 = a_p0[chckIndx(i_570431239, 0, (a_p0).length - 1)];
            if (eqStrings(i_956301376, item_p1)) {
            break BeforeRet;
            }
            
            result_956301372 = addInt(result_956301372, 1);
            i_570431239 += 1;
          }
      };
    };
    result_956301372 = (-1);
  };

  return result_956301372;

}

function contains__stdZenumutils_u50(a_p0, item_p1) {
  var result_956301366 = false;

  BeforeRet: {
    result_956301366 = (0 <= find__stdZenumutils_u55(a_p0, item_p1));
    break BeforeRet;
  };

  return result_956301366;

}

function nimIdentNormalize__pureZstrutils_u122(s_p0) {
  var result_771752060 = [];

  BeforeRet: {
    result_771752060 = nimCopy(null, mnewString(chckRange((s_p0).length, 0, 2147483647)), NTI33554449);
    if (((s_p0).length == 0)) {
    break BeforeRet;
    }
    
    result_771752060[chckIndx(0, 0, (result_771752060).length - 1)] = s_p0[chckIndx(0, 0, (s_p0).length - 1)];
    var j_771752061 = 1;
    Label1: {
      var i_771752066 = 0;
      var colontmp__570431234 = 0;
      colontmp__570431234 = subInt((s_p0).length, 1);
      var res_570431235 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_570431235 <= colontmp__570431234)) break Label3;
            i_771752066 = res_570431235;
            if ((ConstSet57[s_p0[chckIndx(i_771752066, 0, (s_p0).length - 1)]] != undefined)) {
            result_771752060[chckIndx(j_771752061, 0, (result_771752060).length - 1)] = chckRange(addInt(s_p0[chckIndx(i_771752066, 0, (s_p0).length - 1)], 32), 0, 255);
            j_771752061 = addInt(j_771752061, 1);
            }
            else {
            if (!((s_p0[chckIndx(i_771752066, 0, (s_p0).length - 1)] == 95))) {
            result_771752060[chckIndx(j_771752061, 0, (result_771752060).length - 1)] = s_p0[chckIndx(i_771752066, 0, (s_p0).length - 1)];
            j_771752061 = addInt(j_771752061, 1);
            }
            }
            res_570431235 = addInt(res_570431235, 1);
          }
      };
    };
    if (!((j_771752061 == (s_p0).length))) {
    if (result_771752060.length < chckRange(j_771752061, 0, 2147483647)) { for (var i = result_771752060.length; i < chckRange(j_771752061, 0, 2147483647); ++i) result_771752060.push(0); }
         else {result_771752060.length = chckRange(j_771752061, 0, 2147483647); };
    }
    
  };

  return result_771752060;

}

function parseEnum__lisp_u5849(s_p0) {
    var Temporary1;

  var result_570431196 = 0;

    switch (toJSStr(nimIdentNormalize__pureZstrutils_u122(s_p0))) {
    case "unquote":
      Temporary1 = 0;
      break;
    case "unquote-splicing":
      Temporary1 = 1;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32]).concat(s_p0), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_570431196 = Temporary1;

  return result_570431196;

}

function parseUntil__pureZparseutils_u234(s_p0, token_p1, token_p1_Idx, until_p2) {
  var result_788529390 = 0;

    var i_788529391 = 0;
    Label1: {
        Label2: while (true) {
        if (!((i_788529391 < (s_p0).length) && !((until_p2[s_p0[chckIndx(i_788529391, 0, (s_p0).length - 1)]] != undefined)))) break Label2;
          i_788529391 = addInt(i_788529391, 1);
        }
    };
    result_788529390 = i_788529391;
    fastSubstr__pureZparseutils_u225(s_p0, token_p1, token_p1_Idx, result_788529390);

  return result_788529390;

}

function parseUntil__pureZparseutils_u880(s_p0, token_p1, token_p1_Idx, until_p2, start_p3) {
  var result_788530037 = 0;

    result_788530037 = parseUntil__pureZparseutils_u234((s_p0.slice(start_p3, (s_p0).length - 1 + 1)), token_p1, token_p1_Idx, until_p2);

  return result_788530037;

}

function parseFloatNative__system_u3030(a_p0) {
  var result_33557464 = 0.0;

    var str_33557465 = [];
    Label1: {
      var x_33557479 = 0;
      var i_570442176 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570442176 < (a_p0).length)) break Label3;
            x_33557479 = a_p0[i_570442176];
            addChar(str_33557465, x_33557479);;
            i_570442176 += 1;
          }
      };
    };
    var cstr_33557480 = toJSStr(str_33557465);
      result_33557464 = Number(cstr_33557480);
  

  return result_33557464;

}

function npuParseFloat(s_p0, number_p1, number_p1_Idx) {
  var result_788529692 = 0;

    var bf_788529693 = [0.0];
    result_788529692 = nimParseBiggestFloat(s_p0, bf_788529693, 0);
    if (!((result_788529692 == 0))) {
    number_p1[number_p1_Idx] = bf_788529693[0];
    }
    

  return result_788529692;

}

function parseFloat__pureZparseutils_u940(s_p0, number_p1, number_p1_Idx, start_p2) {
  var result_788530096 = 0;

    result_788530096 = npuParseFloat((s_p0.slice(start_p2, (s_p0).length - 1 + 1)), number_p1, number_p1_Idx);

  return result_788530096;

}

function nsuParseFloat(s_p0) {
  var result_771752814 = [0.0];

    result_771752814[0] = 0.0;
    var L_771752815 = parseFloat__pureZparseutils_u940(s_p0, result_771752814, 0, 0);
    if ((!((L_771752815 == (s_p0).length)) || (L_771752815 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,108,111,97,116,58,32]).concat(s_p0), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_771752814[0];

}

function find__lisp_u5973(a_p0, item_p1) {
  var result_570431322 = 0;

  BeforeRet: {
    result_570431322 = 0;
    Label1: {
      var i_570431326 = 0;
      var i_570442179 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570442179 < (a_p0).length)) break Label3;
            i_570431326 = a_p0[chckIndx(i_570442179, 0, (a_p0).length - 1)];
            if ((i_570431326 == item_p1)) {
            break BeforeRet;
            }
            
            result_570431322 = addInt(result_570431322, 1);
            i_570442179 += 1;
          }
      };
    };
    result_570431322 = (-1);
  };

  return result_570431322;

}

function contains__lisp_u5968(a_p0, item_p1) {
  var result_570431316 = false;

  BeforeRet: {
    result_570431316 = (0 <= find__lisp_u5973(a_p0, item_p1));
    break BeforeRet;
  };

  return result_570431316;

}

function parseEnum__lisp_u6025(s_p0) {
    var Temporary1;

  var result_570431372 = 0;

    switch (toJSStr(nimIdentNormalize__pureZstrutils_u122(s_p0))) {
    case "number":
      Temporary1 = 0;
      break;
    case "string":
      Temporary1 = 1;
      break;
    case "bool":
      Temporary1 = 2;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32]).concat(s_p0), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_570431372 = Temporary1;

  return result_570431372;

}

function parseEnum__lisp_u6070(s_p0) {
    var Temporary1;

  var result_570431417 = 0;

    switch (toJSStr(nimIdentNormalize__pureZstrutils_u122(s_p0))) {
    case "quote":
      Temporary1 = 0;
      break;
    case "eval":
      Temporary1 = 1;
      break;
    case ":=":
      Temporary1 = 2;
      break;
    case "if":
      Temporary1 = 3;
      break;
    case "+":
      Temporary1 = 4;
      break;
    case "\\":
      Temporary1 = 5;
      break;
    case "echo":
      Temporary1 = 6;
      break;
    case "repr":
      Temporary1 = 7;
      break;
    case "block":
      Temporary1 = 8;
      break;
    case "table":
      Temporary1 = 9;
      break;
    case "must-equal":
      Temporary1 = 10;
      break;
    case "object-type":
      Temporary1 = 11;
      break;
    case "=":
      Temporary1 = 12;
      break;
    case "str-add":
      Temporary1 = 13;
      break;
    case "high":
      Temporary1 = 14;
      break;
    case "low":
      Temporary1 = 15;
      break;
    case "..":
      Temporary1 = 16;
      break;
    case "expect":
      Temporary1 = 17;
      break;
    case "to-str":
      Temporary1 = 18;
      break;
    case "is-list":
      Temporary1 = 19;
      break;
    case "==":
      Temporary1 = 20;
      break;
    case "!=":
      Temporary1 = 21;
      break;
    case "not":
      Temporary1 = 22;
      break;
    case "empty?":
      Temporary1 = 23;
      break;
    case "array-get":
      Temporary1 = 24;
      break;
    case "filter-array":
      Temporary1 = 25;
      break;
    case "-":
      Temporary1 = 26;
      break;
    case "for":
      Temporary1 = 27;
      break;
    case "len":
      Temporary1 = 28;
      break;
    case "+=":
      Temporary1 = 29;
      break;
    case "-=":
      Temporary1 = 30;
      break;
    case "is-str":
      Temporary1 = 31;
      break;
    case "class":
      Temporary1 = 32;
      break;
    case "return":
      Temporary1 = 33;
      break;
    case "or":
      Temporary1 = 34;
      break;
    case "and":
      Temporary1 = 35;
      break;
    case "contains":
      Temporary1 = 36;
      break;
    case "template":
      Temporary1 = 37;
      break;
    case "while":
      Temporary1 = 38;
      break;
    case "<=":
      Temporary1 = 39;
      break;
    case ">=":
      Temporary1 = 40;
      break;
    case "<":
      Temporary1 = 41;
      break;
    case ">":
      Temporary1 = 42;
      break;
    case "add":
      Temporary1 = 43;
      break;
    case "enum-type":
      Temporary1 = 44;
      break;
    case "try":
      Temporary1 = 45;
      break;
    case "except":
      Temporary1 = 46;
      break;
    case "finally":
      Temporary1 = 47;
      break;
    case "table-type":
      Temporary1 = 48;
      break;
    case "array-type":
      Temporary1 = 49;
      break;
    case "case":
      Temporary1 = 50;
      break;
    case "table-set!":
      Temporary1 = 51;
      break;
    case "table-get":
      Temporary1 = 52;
      break;
    case "table-has-key":
      Temporary1 = 53;
      break;
    case "continue":
      Temporary1 = 54;
      break;
    case "break":
      Temporary1 = 55;
      break;
    case "join-lists":
      Temporary1 = 56;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32]).concat(s_p0), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_570431417 = Temporary1;

  return result_570431417;

}

function tokenize__lisp_u5532(s_p0) {
  var result_570430878 = [];

    var i_570431021 = 0;
    var line_570431022 = 1;
    Label1: {
        Label2: while (true) {
        if (!(i_570431021 <= (s_p0).length - 1)) break Label2;
          switch (s_p0[chckIndx(i_570431021, 0, (s_p0).length - 1)]) {
          case 35:
          case 59:
            i_570431021 = addInt(i_570431021, skipUntil__pureZparseutils_u865(s_p0, ConstSet54, i_570431021));
            i_570431021 = addInt(i_570431021, 1);
            line_570431022 = addInt(line_570431022, 1);
            break;
          case 10:
          case 13:
            i_570431021 = addInt(i_570431021, 1);
            line_570431022 = addInt(line_570431022, 1);
            break;
          case 9:
          case 11:
          case 12:
          case 32:
            i_570431021 = addInt(i_570431021, 1);
            break;
          case 40:
            i_570431021 = addInt(i_570431021, 1);
            result_570430878.push({kind: 3, line: line_570431022, dot: [], sym: [], num: 0.0, str: [], keyword: 0, boolVal: false, atomicType: 0, tag: 0, member: []});;
            break;
          case 41:
            i_570431021 = addInt(i_570431021, 1);
            result_570430878.push({kind: 4, line: line_570431022, dot: [], sym: [], num: 0.0, str: [], keyword: 0, boolVal: false, atomicType: 0, tag: 0, member: []});;
            break;
          case 64:
            i_570431021 = addInt(i_570431021, 1);
            var str_570431081 = [[]];
            i_570431021 = addInt(i_570431021, parseWhile__pureZparseutils_u898(s_p0, str_570431081, 0, ConstSet55, i_570431021));
            result_570430878.push({kind: 12, member: nimCopy(null, str_570431081[0], NTI33554449), line: line_570431022, dot: [], sym: [], num: 0.0, str: [], keyword: 0, boolVal: false, atomicType: 0, tag: 0});;
            break;
          case 94:
            i_570431021 = addInt(i_570431021, 1);
            var str_570431095 = [[]];
            i_570431021 = addInt(i_570431021, parseWhile__pureZparseutils_u898(s_p0, str_570431095, 0, ConstSet56, i_570431021));
            if (!(contains__stdZenumutils_u50(tags_570431170, str_570431095[0]))) {
            failedAssertImpl__stdZassertions_u84(([108,105,115,112,46,110,105,109,40,54,48,48,44,32,55,41,32,96,99,111,110,116,97,105,110,115,40,116,97,103,115,44,32,115,116,114,41,96,32,73,110,118,97,108,105,100,32,116,97,103,58,32]).concat(str_570431095[0],[32,97,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(line_570431022)));
            }
            
            result_570430878.push({kind: 9, tag: parseEnum__lisp_u5849(str_570431095[0]), line: line_570431022, dot: [], sym: [], num: 0.0, str: [], keyword: 0, boolVal: false, atomicType: 0, member: []});;
            break;
          case 34:
            i_570431021 = addInt(i_570431021, 1);
            var str_570431251 = [];
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var tmp_570431252 = [[]];
                  i_570431021 = addInt(i_570431021, parseUntil__pureZparseutils_u880(s_p0, tmp_570431252, 0, ConstSet58, i_570431021));
                  if ((s_p0[chckIndx(i_570431021, 0, (s_p0).length - 1)] == 92)) {
                  i_570431021 = addInt(i_570431021, 1);
                  switch (s_p0[chckIndx(i_570431021, 0, (s_p0).length - 1)]) {
                  case 34:
                    addChar(tmp_570431252[0], 34);;
                    break;
                  case 110:
                    addChar(tmp_570431252[0], 10);;
                    break;
                  case 116:
                    addChar(tmp_570431252[0], 9);;
                    break;
                  default: 
                    raiseAssert__stdZassertions_u42(([73,110,118,97,108,105,100,32,101,115,99,97,112,101,32,115,101,113,117,101,110,99,101,58,32]).concat(nimCharToStr(s_p0[chckIndx(i_570431021, 0, (s_p0).length - 1)])));
                    break;
                  }
                  i_570431021 = addInt(i_570431021, 1);
                  }
                  
                  str_570431251.push.apply(str_570431251, tmp_570431252[0]);;
                  if ((s_p0[chckIndx(i_570431021, 0, (s_p0).length - 1)] == 34)) {
                  i_570431021 = addInt(i_570431021, 1);
                  break Label3;
                  }
                  
                }
            };
            result_570430878.push({kind: 2, str: nimCopy(null, str_570431251, NTI33554449), line: line_570431022, dot: [], sym: [], num: 0.0, keyword: 0, boolVal: false, atomicType: 0, tag: 0, member: []});;
            break;
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            var tmp_570431276 = [[]];
            i_570431021 = addInt(i_570431021, parseWhile__pureZparseutils_u898(s_p0, tmp_570431276, 0, ConstSet59, i_570431021));
            result_570430878.push({kind: 1, num: nsuParseFloat(tmp_570431276[0]), line: line_570431022, dot: [], sym: [], str: [], keyword: 0, boolVal: false, atomicType: 0, tag: 0, member: []});;
            break;
          default: 
            if (!((ConstSet67[s_p0[chckIndx(i_570431021, 0, (s_p0).length - 1)]] != undefined))) {
            failedAssertImpl__stdZassertions_u84(([108,105,115,112,46,110,105,109,40,54,51,54,44,32,55,41,32,96,115,91,105,93,32,105,110,32,115,121,109,98,111,108,67,104,97,114,97,99,116,101,114,115,96,32]).concat(([69,114,114,111,114,32,111,110,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(line_570431022),[58,32,85,110,101,120,112,101,99,116,101,100,32,99,104,97,114,97,99,116,101,114,58,32],nimCharToStr(s_p0[chckIndx(i_570431021, 0, (s_p0).length - 1)]))));
            }
            
            var tmp_570431298 = [[]];
            i_570431021 = addInt(i_570431021, parseWhile__pureZparseutils_u898(s_p0, tmp_570431298, 0, ConstSet68, i_570431021));
            if (!((0 < (tmp_570431298[0]).length))) {
            failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,54,52,50,44,32,55,41,32,96,10,48,32,60,32,108,101,110,40,116,109,112,41,96,32]);
            }
            
            if ((contains__lisp_u5968(tmp_570431298[0], 46) && !((tmp_570431298[0][chckIndx(0, 0, (tmp_570431298[0]).length - 1)] == 46)))) {
            result_570430878.push({kind: 8, dot: nimCopy(null, tmp_570431298[0], NTI33554449), line: 0, sym: [], num: 0.0, str: [], keyword: 0, boolVal: false, atomicType: 0, tag: 0, member: []});;
            }
            else {
            if (eqStrings(tmp_570431298[0], [116,114,117,101])) {
            result_570430878.push({kind: 6, boolVal: true, line: line_570431022, dot: [], sym: [], num: 0.0, str: [], keyword: 0, atomicType: 0, tag: 0, member: []});;
            }
            else {
            if (eqStrings(tmp_570431298[0], [102,97,108,115,101])) {
            result_570430878.push({kind: 6, boolVal: false, line: line_570431022, dot: [], sym: [], num: 0.0, str: [], keyword: 0, atomicType: 0, tag: 0, member: []});;
            }
            else {
            if (eqStrings(tmp_570431298[0], [97,110,121])) {
            result_570430878.push({kind: 10, line: line_570431022, dot: [], sym: [], num: 0.0, str: [], keyword: 0, boolVal: false, atomicType: 0, tag: 0, member: []});;
            }
            else {
            if (eqStrings(tmp_570431298[0], [118,111,105,100])) {
            result_570430878.push({kind: 11, line: line_570431022, dot: [], sym: [], num: 0.0, str: [], keyword: 0, boolVal: false, atomicType: 0, tag: 0, member: []});;
            }
            else {
            if (contains__stdZenumutils_u50(atomicTypes_570431020, tmp_570431298[0])) {
            result_570430878.push({kind: 7, atomicType: parseEnum__lisp_u6025(tmp_570431298[0]), line: line_570431022, dot: [], sym: [], num: 0.0, str: [], keyword: 0, boolVal: false, tag: 0, member: []});;
            }
            else {
            if (contains__stdZenumutils_u50(keywords_570430949, tmp_570431298[0])) {
            result_570430878.push({kind: 5, keyword: parseEnum__lisp_u6070(tmp_570431298[0]), line: line_570431022, dot: [], sym: [], num: 0.0, str: [], boolVal: false, atomicType: 0, tag: 0, member: []});;
            }
            else {
            result_570430878.push({kind: 0, sym: nimCopy(null, tmp_570431298[0], NTI33554449), line: line_570431022, dot: [], num: 0.0, str: [], keyword: 0, boolVal: false, atomicType: 0, tag: 0, member: []});;
            }
            }}}}}}
            break;
          }
        }
    };

  return result_570430878;

}

function newSeq__lisp_u16016(len_p0) {
  var result_570441364 = [];

    result_570441364 = new Array(len_p0); for (var i = 0 ; i < len_p0 ; ++i) { result_570441364[i] = null; }
  return result_570441364;

}

function lenU__pureZhashes_u484(s_p0) {
  var result_1107296742 = 0n;

    result_1107296742 = BigInt.asUintN(64, BigInt((s_p0).length));

  return result_1107296742;

}

function load8e__pureZhashes_u444(s_p0, o_p1) {
  var result_1107296703 = 0n;

    result_1107296703 = (((((((BigInt.asUintN(64, BigInt(s_p0[chckIndx(addInt(o_p1, 7), 0, (s_p0).length - 1)]) << BigInt(56)) | BigInt.asUintN(64, BigInt(s_p0[chckIndx(addInt(o_p1, 6), 0, (s_p0).length - 1)]) << BigInt(48))) | BigInt.asUintN(64, BigInt(s_p0[chckIndx(addInt(o_p1, 5), 0, (s_p0).length - 1)]) << BigInt(40))) | BigInt.asUintN(64, BigInt(s_p0[chckIndx(addInt(o_p1, 4), 0, (s_p0).length - 1)]) << BigInt(32))) | BigInt.asUintN(64, BigInt(s_p0[chckIndx(addInt(o_p1, 3), 0, (s_p0).length - 1)]) << BigInt(24))) | BigInt.asUintN(64, BigInt(s_p0[chckIndx(addInt(o_p1, 2), 0, (s_p0).length - 1)]) << BigInt(16))) | BigInt.asUintN(64, BigInt(s_p0[chckIndx(addInt(o_p1, 1), 0, (s_p0).length - 1)]) << BigInt(8))) | BigInt(s_p0[chckIndx(addInt(o_p1, 0), 0, (s_p0).length - 1)]));

  return result_1107296703;

}

function load8__pureZhashes_u480(s_p0, o_p1) {
  var result_1107296739 = 0n;

    result_1107296739 = load8e__pureZhashes_u444(s_p0, o_p1);

  return result_1107296739;

}

function rotR__pureZhashes_u497(v_p0, bits_p1) {
  var result_1107296756 = 0n;

    result_1107296756 = ((v_p0 >> BigInt(bits_p1)) | BigInt.asUintN(64, v_p0 << BigInt(subInt(64, bits_p1))));

  return result_1107296756;

}

function len16__pureZhashes_u509(u_p0, v_p1, mul_p2) {
  var result_1107296769 = 0n;

    var a_1107296770 = BigInt.asUintN(64, ((u_p0 ^ v_p1) * mul_p2));
    a_1107296770 = (a_1107296770 ^ (a_1107296770 >> BigInt(47)));
    var b_1107296775 = BigInt.asUintN(64, ((v_p1 ^ a_1107296770) * mul_p2));
    b_1107296775 = (b_1107296775 ^ (b_1107296775 >> BigInt(47)));
    result_1107296769 = BigInt.asUintN(64, (b_1107296775 * mul_p2));

  return result_1107296769;

}

function load4e__pureZhashes_u428(s_p0, o_p1) {
  var result_1107296687 = 0;

    result_1107296687 = (((((((((s_p0[chckIndx(addInt(o_p1, 3), 0, (s_p0).length - 1)] >>> 0) << 24) >>> 0) | (((s_p0[chckIndx(addInt(o_p1, 2), 0, (s_p0).length - 1)] >>> 0) << 16) >>> 0)) >>> 0) | (((s_p0[chckIndx(addInt(o_p1, 1), 0, (s_p0).length - 1)] >>> 0) << 8) >>> 0)) >>> 0) | (s_p0[chckIndx(addInt(o_p1, 0), 0, (s_p0).length - 1)] >>> 0)) >>> 0);

  return result_1107296687;

}

function load4__pureZhashes_u476(s_p0, o_p1) {
  var result_1107296735 = 0;

    result_1107296735 = load4e__pureZhashes_u428(s_p0, o_p1);

  return result_1107296735;

}

function shiftMix__pureZhashes_u490(v_p0) {
  var result_1107296748 = 0n;

    result_1107296748 = (v_p0 ^ (v_p0 >> BigInt(47)));

  return result_1107296748;

}

function len0_16__pureZhashes_u524(s_p0) {
    var Temporary1;

  var result_1107296782 = 0n;

    if ((8 <= (s_p0).length)) {
    var mul_1107296786 = BigInt.asUintN(64, (11160318154034397263n + BigInt.asUintN(64, (2n * lenU__pureZhashes_u484(s_p0)))));
    var a_1107296787 = BigInt.asUintN(64, (load8__pureZhashes_u480(s_p0, 0) + 11160318154034397263n));
    var b_1107296791 = load8__pureZhashes_u480(s_p0, subInt((s_p0).length, 8));
    var c_1107296792 = BigInt.asUintN(64, (BigInt.asUintN(64, (rotR__pureZhashes_u497(b_1107296791, 37) * mul_1107296786)) + a_1107296787));
    var d_1107296793 = BigInt.asUintN(64, (BigInt.asUintN(64, (rotR__pureZhashes_u497(a_1107296787, 25) + b_1107296791)) * mul_1107296786));
    Temporary1 = len16__pureZhashes_u509(c_1107296792, d_1107296793, mul_1107296786);
    }
    else {
    if ((4 <= (s_p0).length)) {
    var mul_1107296797 = BigInt.asUintN(64, (11160318154034397263n + BigInt.asUintN(64, (2n * lenU__pureZhashes_u484(s_p0)))));
    var a_1107296798 = BigInt(load4__pureZhashes_u476(s_p0, 0));
    Temporary1 = len16__pureZhashes_u509(BigInt.asUintN(64, (lenU__pureZhashes_u484(s_p0) + BigInt.asUintN(64, a_1107296798 << BigInt(3)))), BigInt(load4__pureZhashes_u476(s_p0, subInt((s_p0).length, 4))), mul_1107296797);
    }
    else {
    if ((0 < (s_p0).length)) {
    var a_1107296809 = (s_p0[chckIndx(0, 0, (s_p0).length - 1)] >>> 0);
    var b_1107296817 = (s_p0[chckIndx(((s_p0).length >> 1), 0, (s_p0).length - 1)] >>> 0);
    var c_1107296821 = (s_p0[chckIndx(subInt((s_p0).length, 1), 0, (s_p0).length - 1)] >>> 0);
    var y_1107296826 = ((a_1107296809 + ((b_1107296817 << 8) >>> 0)) >>> 0);
    var z_1107296831 = BigInt.asUintN(64, (lenU__pureZhashes_u484(s_p0) + BigInt(((c_1107296821 << 2) >>> 0))));
    Temporary1 = BigInt.asUintN(64, (shiftMix__pureZhashes_u490((BigInt.asUintN(64, (BigInt(y_1107296826) * 11160318154034397263n)) ^ BigInt.asUintN(64, (z_1107296831 * 14097894508562428199n)))) * 11160318154034397263n));
    }
    else {
    Temporary1 = 11160318154034397263n;
    }
    }}
    result_1107296782 = Temporary1;

  return result_1107296782;

}

function len17_32__pureZhashes_u576(s_p0) {
  var result_1107296834 = 0n;

    var mul_1107296835 = BigInt.asUintN(64, (11160318154034397263n + BigInt.asUintN(64, (2n * lenU__pureZhashes_u484(s_p0)))));
    var a_1107296836 = BigInt.asUintN(64, (load8__pureZhashes_u480(s_p0, 0) * 13011662864482103923n));
    var b_1107296837 = load8__pureZhashes_u480(s_p0, 8);
    var c_1107296841 = BigInt.asUintN(64, (load8__pureZhashes_u480(s_p0, subInt((s_p0).length, 8)) * mul_1107296835));
    var d_1107296845 = BigInt.asUintN(64, (load8__pureZhashes_u480(s_p0, subInt((s_p0).length, 16)) * 11160318154034397263n));
    result_1107296834 = len16__pureZhashes_u509(BigInt.asUintN(64, (BigInt.asUintN(64, (rotR__pureZhashes_u497(BigInt.asUintN(64, (a_1107296836 + b_1107296837)), 43) + rotR__pureZhashes_u497(c_1107296841, 30))) + d_1107296845)), BigInt.asUintN(64, (BigInt.asUintN(64, (a_1107296836 + rotR__pureZhashes_u497(BigInt.asUintN(64, (b_1107296837 + 11160318154034397263n)), 18))) + c_1107296841)), mul_1107296835);

  return result_1107296834;

}

function len33_64__pureZhashes_u590(s_p0) {
  var result_1107296848 = 0n;

    var mul_1107296849 = BigInt.asUintN(64, (11160318154034397263n + BigInt.asUintN(64, (2n * lenU__pureZhashes_u484(s_p0)))));
    var a_1107296850 = BigInt.asUintN(64, (load8__pureZhashes_u480(s_p0, 0) * 11160318154034397263n));
    var b_1107296851 = load8__pureZhashes_u480(s_p0, 8);
    var c_1107296855 = BigInt.asUintN(64, (load8__pureZhashes_u480(s_p0, subInt((s_p0).length, 8)) * mul_1107296849));
    var d_1107296859 = BigInt.asUintN(64, (load8__pureZhashes_u480(s_p0, subInt((s_p0).length, 16)) * 11160318154034397263n));
    var y_1107296860 = BigInt.asUintN(64, (BigInt.asUintN(64, (rotR__pureZhashes_u497(BigInt.asUintN(64, (a_1107296850 + b_1107296851)), 43) + rotR__pureZhashes_u497(c_1107296855, 30))) + d_1107296859));
    var z_1107296861 = len16__pureZhashes_u509(y_1107296860, BigInt.asUintN(64, (BigInt.asUintN(64, (a_1107296850 + rotR__pureZhashes_u497(BigInt.asUintN(64, (b_1107296851 + 11160318154034397263n)), 18))) + c_1107296855)), mul_1107296849);
    var e_1107296862 = BigInt.asUintN(64, (load8__pureZhashes_u480(s_p0, 16) * mul_1107296849));
    var f_1107296863 = load8__pureZhashes_u480(s_p0, 24);
    var g_1107296867 = BigInt.asUintN(64, (BigInt.asUintN(64, (y_1107296860 + load8__pureZhashes_u480(s_p0, subInt((s_p0).length, 32)))) * mul_1107296849));
    var h_1107296871 = BigInt.asUintN(64, (BigInt.asUintN(64, (z_1107296861 + load8__pureZhashes_u480(s_p0, subInt((s_p0).length, 24)))) * mul_1107296849));
    result_1107296848 = len16__pureZhashes_u509(BigInt.asUintN(64, (BigInt.asUintN(64, (rotR__pureZhashes_u497(BigInt.asUintN(64, (e_1107296862 + f_1107296863)), 43) + rotR__pureZhashes_u497(g_1107296867, 30))) + h_1107296871)), BigInt.asUintN(64, (BigInt.asUintN(64, (e_1107296862 + rotR__pureZhashes_u497(BigInt.asUintN(64, (f_1107296863 + a_1107296850)), 18))) + g_1107296867)), mul_1107296849);

  return result_1107296848;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function weakLen32withSeeds2__pureZhashes_u621(w_p0, x_p1, y_p2, z_p3, a_p4, b_p5) {
  var result_1107296884 = {Field0: 0n, Field1: 0n};

    var a_1107296885 = BigInt.asUintN(64, (a_p4 + w_p0));
    var b_1107296886 = rotR__pureZhashes_u497(BigInt.asUintN(64, (BigInt.asUintN(64, (b_p5 + a_1107296885)) + z_p3)), 21);
    var c_1107296887 = a_1107296885;
    a_1107296885 = BigInt.asUintN(64, a_1107296885 + BigInt(x_p1));
    a_1107296885 = BigInt.asUintN(64, a_1107296885 + BigInt(y_p2));
    b_1107296886 = BigInt.asUintN(64, b_1107296886 + BigInt(rotR__pureZhashes_u497(a_1107296885, 44)));
    result_1107296884["Field0"] = BigInt.asUintN(64, (a_1107296885 + z_p3));
    result_1107296884["Field1"] = BigInt.asUintN(64, (b_1107296886 + c_1107296887));

  return result_1107296884;

}

function weakLen32withSeeds__pureZhashes_u644(s_p0, o_p1, a_p2, b_p3) {
  var result_1107296905 = {Field0: 0n, Field1: 0n};

    result_1107296905 = nimCopy(result_1107296905, weakLen32withSeeds2__pureZhashes_u621(load8__pureZhashes_u480(s_p0, o_p1), load8__pureZhashes_u480(s_p0, addInt(o_p1, 8)), load8__pureZhashes_u480(s_p0, addInt(o_p1, 16)), load8__pureZhashes_u480(s_p0, addInt(o_p1, 24)), a_p2, b_p3), NTI1107296604);

  return result_1107296905;

}

function hashFarm__pureZhashes_u667(s_p0) {
  var result_1107296925 = 0n;

  BeforeRet: {
    if (((s_p0).length <= 16)) {
    result_1107296925 = len0_16__pureZhashes_u524(s_p0);
    break BeforeRet;
    }
    
    if (((s_p0).length <= 32)) {
    result_1107296925 = len17_32__pureZhashes_u576(s_p0);
    break BeforeRet;
    }
    
    if (((s_p0).length <= 64)) {
    result_1107296925 = len33_64__pureZhashes_u590(s_p0);
    break BeforeRet;
    }
    
    var o_1107296936 = 0;
    var x_1107296937 = 81n;
    var y_1107296938 = 2480279821605975764n;
    var z_1107296939 = BigInt.asUintN(64, (shiftMix__pureZhashes_u490(BigInt.asUintN(64, (BigInt.asUintN(64, (y_1107296938 * 11160318154034397263n)) + 113n))) * 11160318154034397263n));
    var v_1107296945 = nimCopy(null, {Field0: 0n, Field1: 0n}, NTI1107296604);
    var w_1107296950 = nimCopy(null, {Field0: 0n, Field1: 0n}, NTI1107296604);
    x_1107296937 = BigInt.asUintN(64, (BigInt.asUintN(64, (x_1107296937 * 11160318154034397263n)) + load8__pureZhashes_u480(s_p0, 0)));
    var eos_1107296954 = mulInt(divInt(subInt((s_p0).length, 1), 64), 64);
    var last64_1107296958 = subInt(addInt(eos_1107296954, (subInt((s_p0).length, 1) & 63)), 63);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          x_1107296937 = BigInt.asUintN(64, (rotR__pureZhashes_u497(BigInt.asUintN(64, (BigInt.asUintN(64, (BigInt.asUintN(64, (x_1107296937 + y_1107296938)) + v_1107296945["Field0"])) + load8__pureZhashes_u480(s_p0, addInt(o_1107296936, 8)))), 37) * 13011662864482103923n));
          y_1107296938 = BigInt.asUintN(64, (rotR__pureZhashes_u497(BigInt.asUintN(64, (BigInt.asUintN(64, (y_1107296938 + v_1107296945["Field1"])) + load8__pureZhashes_u480(s_p0, addInt(o_1107296936, 48)))), 42) * 13011662864482103923n));
          x_1107296937 = (x_1107296937 ^ w_1107296950["Field1"]);
          y_1107296938 = BigInt.asUintN(64, y_1107296938 + BigInt(BigInt.asUintN(64, (v_1107296945["Field0"] + load8__pureZhashes_u480(s_p0, addInt(o_1107296936, 40))))));
          z_1107296939 = BigInt.asUintN(64, (rotR__pureZhashes_u497(BigInt.asUintN(64, (z_1107296939 + w_1107296950["Field0"])), 33) * 13011662864482103923n));
          v_1107296945 = nimCopy(v_1107296945, weakLen32withSeeds__pureZhashes_u644(s_p0, addInt(o_1107296936, 0), BigInt.asUintN(64, (v_1107296945["Field1"] * 13011662864482103923n)), BigInt.asUintN(64, (x_1107296937 + w_1107296950["Field0"]))), NTI1107296604);
          w_1107296950 = nimCopy(w_1107296950, weakLen32withSeeds__pureZhashes_u644(s_p0, addInt(o_1107296936, 32), BigInt.asUintN(64, (z_1107296939 + w_1107296950["Field1"])), BigInt.asUintN(64, (y_1107296938 + load8__pureZhashes_u480(s_p0, addInt(o_1107296936, 16))))), NTI1107296604);
          var HEX3Atmp_570442247 = z_1107296939;
          z_1107296939 = x_1107296937;
          x_1107296937 = HEX3Atmp_570442247;
          o_1107296936 = addInt(o_1107296936, 64);
          if ((o_1107296936 == eos_1107296954)) {
          break Label1;
          }
          
        }
    };
    var mul_1107296976 = BigInt.asUintN(64, (13011662864482103923n + BigInt.asUintN(64, (z_1107296939 & 255n) << BigInt(1))));
    o_1107296936 = last64_1107296958;
    w_1107296950["Field0"] = BigInt.asUintN(64, w_1107296950["Field0"] + BigInt((BigInt.asUintN(64, (lenU__pureZhashes_u484(s_p0) - 1n)) & 63n)));
    v_1107296945["Field0"] = BigInt.asUintN(64, v_1107296945["Field0"] + BigInt(w_1107296950["Field0"]));
    w_1107296950["Field0"] = BigInt.asUintN(64, w_1107296950["Field0"] + BigInt(v_1107296945["Field0"]));
    x_1107296937 = BigInt.asUintN(64, (rotR__pureZhashes_u497(BigInt.asUintN(64, (BigInt.asUintN(64, (BigInt.asUintN(64, (x_1107296937 + y_1107296938)) + v_1107296945["Field0"])) + load8__pureZhashes_u480(s_p0, addInt(o_1107296936, 8)))), 37) * mul_1107296976));
    y_1107296938 = BigInt.asUintN(64, (rotR__pureZhashes_u497(BigInt.asUintN(64, (BigInt.asUintN(64, (y_1107296938 + v_1107296945["Field1"])) + load8__pureZhashes_u480(s_p0, addInt(o_1107296936, 48)))), 42) * mul_1107296976));
    x_1107296937 = (x_1107296937 ^ BigInt.asUintN(64, (w_1107296950["Field1"] * 9n)));
    y_1107296938 = BigInt.asUintN(64, y_1107296938 + BigInt(BigInt.asUintN(64, (BigInt.asUintN(64, (v_1107296945["Field0"] * 9n)) + load8__pureZhashes_u480(s_p0, addInt(o_1107296936, 40))))));
    z_1107296939 = BigInt.asUintN(64, (rotR__pureZhashes_u497(BigInt.asUintN(64, (z_1107296939 + w_1107296950["Field0"])), 33) * mul_1107296976));
    v_1107296945 = nimCopy(v_1107296945, weakLen32withSeeds__pureZhashes_u644(s_p0, addInt(o_1107296936, 0), BigInt.asUintN(64, (v_1107296945["Field1"] * mul_1107296976)), BigInt.asUintN(64, (x_1107296937 + w_1107296950["Field0"]))), NTI1107296604);
    w_1107296950 = nimCopy(w_1107296950, weakLen32withSeeds__pureZhashes_u644(s_p0, addInt(o_1107296936, 32), BigInt.asUintN(64, (z_1107296939 + w_1107296950["Field1"])), BigInt.asUintN(64, (y_1107296938 + load8__pureZhashes_u480(s_p0, addInt(o_1107296936, 16))))), NTI1107296604);
    var HEX3Atmp_570442248 = z_1107296939;
    z_1107296939 = x_1107296937;
    x_1107296937 = HEX3Atmp_570442248;
    result_1107296925 = len16__pureZhashes_u509(BigInt.asUintN(64, (BigInt.asUintN(64, (len16__pureZhashes_u509(v_1107296945["Field0"], w_1107296950["Field0"], mul_1107296976) + BigInt.asUintN(64, (shiftMix__pureZhashes_u490(y_1107296938) * 14097894508562428199n)))) + z_1107296939)), BigInt.asUintN(64, (len16__pureZhashes_u509(v_1107296945["Field1"], w_1107296950["Field1"], mul_1107296976) + x_1107296937)), mul_1107296976);
  };

  return result_1107296925;

}

function hash__pureZhashes_u743(x_p0) {
  var result_1107297001 = 0;

    result_1107297001 = Number(BigInt.asIntN(32, hashFarm__pureZhashes_u667((x_p0.slice(0, (x_p0).length - 1 + 1)))));

  return result_1107297001;

}

function isFilled__pureZcollectionsZtables_u31(hcode_p0) {
  var result_1090519073 = false;

    result_1090519073 = !((hcode_p0 == 0));

  return result_1090519073;

}

function nextTry__pureZcollectionsZtables_u34(h_p0, maxHash_p1) {
  var result_1090519077 = 0;

    result_1090519077 = (addInt(h_p0, 1) & maxHash_p1);

  return result_1090519077;

}

function rawGet__lisp_u2096(t_p0, key_p1, hc_p2, hc_p2_Idx) {
  var result_570427446 = 0;

  BeforeRet: {
    hc_p2[hc_p2_Idx] = hash__pureZhashes_u743(key_p1);
    if ((hc_p2[hc_p2_Idx] == 0)) {
    hc_p2[hc_p2_Idx] = 314159265;
    }
    
    if (((t_p0.data).length == 0)) {
    result_570427446 = (-1);
    break BeforeRet;
    }
    
    var h_570427497 = (hc_p2[hc_p2_Idx] & (t_p0.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled__pureZcollectionsZtables_u31(t_p0.data[chckIndx(h_570427497, 0, (t_p0.data).length - 1)].Field0)) break Label2;
          if (((t_p0.data[chckIndx(h_570427497, 0, (t_p0.data).length - 1)].Field0 == hc_p2[hc_p2_Idx]) && eqStrings(t_p0.data[chckIndx(h_570427497, 0, (t_p0.data).length - 1)].Field1, key_p1))) {
          result_570427446 = h_570427497;
          break BeforeRet;
          }
          
          h_570427497 = nextTry__pureZcollectionsZtables_u34(h_570427497, (t_p0.data).length - 1);
        }
    };
    result_570427446 = subInt((-1), h_570427497);
  };

  return result_570427446;

}

function getOrDefault__lisp_u2366(t_p0, key_p1) {
  var result_570427715 = null;

    result_570427715 = null;
    var hcHEX60gensym110_570427722 = [0];
    var indexHEX60gensym110_570427729 = rawGet__lisp_u2096(t_p0, key_p1, hcHEX60gensym110_570427722, 0);
    if ((0 <= indexHEX60gensym110_570427729)) {
    result_570427715 = t_p0.data[chckIndx(indexHEX60gensym110_570427729, 0, (t_p0.data).length - 1)].Field2;
    }
    

  return result_570427715;

}

function substrEq__pureZstrutils_u255(s_p0, pos_p1, substr_p2) {
    var Temporary1;

  var result_771752195 = false;

    var length_771752196 = (substr_p2).length;
    if ((0 < length_771752196)) {
    var i_771752197 = 0;
    Label2: {
        Label3: while (true) {
        if (!(((i_771752197 < length_771752196) && (addInt(pos_p1, i_771752197) < (s_p0).length)) && (s_p0[chckIndx(addInt(pos_p1, i_771752197), 0, (s_p0).length - 1)] == substr_p2[chckIndx(i_771752197, 0, (substr_p2).length - 1)]))) break Label3;
          i_771752197 = addInt(i_771752197, 1);
        }
    };
    Temporary1 = (i_771752197 == length_771752196);
    }
    else {
    Temporary1 = false;
    }
    
    result_771752195 = Temporary1;

  return result_771752195;

}

function substr__system_u3700(s_p0, first_p1, last_p2) {
  var result_33558136 = [];

    var first_33558137 = nimMax(first_p1, 0);
    var L_33558138 = nimMax(addInt(subInt(nimMin(last_p2, (s_p0).length - 1), first_33558137), 1), 0);
    result_33558136 = nimCopy(null, mnewString(chckRange(L_33558138, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33558143 = 0;
      var colontmp__570441176 = 0;
      colontmp__570441176 = subInt(L_33558138, 1);
      var res_570441177 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570441177 <= colontmp__570441176)) break Label3;
            i_33558143 = res_570441177;
            result_33558136[chckIndx(i_33558143, 0, (result_33558136).length - 1)] = s_p0[chckIndx(addInt(i_33558143, first_33558137), 0, (s_p0).length - 1)];
            res_570441177 = addInt(res_570441177, 1);
          }
      };
    };

  return result_33558136;

}

function hasKey__lisp_u2089(t_p0, key_p1) {
  var result_570427438 = false;

    var hc_570427439 = [0];
    result_570427438 = (0 <= rawGet__lisp_u2096(t_p0, key_p1, hc_570427439, 0));

  return result_570427438;

}

function raiseKeyError__lisp_u5395(key_p0) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32]).concat(key_p0), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D__lisp_u5332(t_p0, key_p1) {
  var result_570430681 = null;
  var result_570430681_Idx = 0;

    var hcHEX60gensym22_570430682 = [0];
    var indexHEX60gensym22_570430689 = rawGet__lisp_u2096(t_p0, key_p1, hcHEX60gensym22_570430682, 0);
    if ((0 <= indexHEX60gensym22_570430689)) {
    result_570430681 = t_p0.data[chckIndx(indexHEX60gensym22_570430689, 0, (t_p0.data).length - 1)]; result_570430681_Idx = "Field2";
    }
    else {
    raiseKeyError__lisp_u5395(key_p1);
    }
    

  return [result_570430681, result_570430681_Idx];

}

function evalSymbol__lisp_u5228(st_p0, n_p1) {
              var Temporary4;
            var Temporary5;
            var Temporary6;
    var Temporary7;
    var Temporary8;

  var result_570430575 = null;

    Label1: {
      var i_570430584 = 0;
      var colontmp__570442251 = 0;
      colontmp__570442251 = (st_p0.stacks).length - 1;
      var res_570442252 = colontmp__570442251;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_570442252)) break Label3;
            i_570430584 = res_570442252;
            var s_570430585 = st_p0.stacks[chckIndx(i_570430584, 0, (st_p0.stacks).length - 1)];
              var Temporary4 = n_p1;
              if (ConstSet73[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI570425392)); }
            if (hasKey__lisp_u2089(s_570430585.symbols, Temporary4.sym)) {
            var Temporary5 = n_p1;
            if (ConstSet74[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI570425392)); }
            result_570430575 = (Temporary6 = HEX5BHEX5D__lisp_u5332(s_570430585.symbols, Temporary5.sym), Temporary6)[0][Temporary6[1]];
            break Label1;
            }
            
            res_570442252 = subInt(res_570442252, 1);
          }
      };
    };
    if (!(!((result_570430575 == null)))) {
    var inst_570430799 = {Field0: [108,105,115,112,46,110,105,109], Field1: 523, Field2: 3};
    var Temporary7 = n_p1;
    if (ConstSet75[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI570425392)); }
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570430799.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,83,121,109,98,111,108,32,110,111,116,32,102,111,117,110,100,58,32],Temporary7.sym));
    }
    
    if (!(!((result_570430575.kind == 0)))) {
    var inst_570430805 = {Field0: [108,105,115,112,46,110,105,109], Field1: 524, Field2: 3};
    var Temporary8 = n_p1;
    if (ConstSet76[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI570425392)); }
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570430805.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,83,121,109,98,111,108,32,99,97,110,110,111,116,32,112,111,105,110,116,32,116,111,32,97,110,111,116,104,101,114,32,115,121,109,98,111,108,58,32],Temporary8.sym));
    }
    
    result_570430575.line = n_p1.line;

  return result_570430575;

}

function initReprClosure__system_u3290(cl_p0) {
    cl_p0.recDepth = (-1);
    cl_p0.indent = 0;

  
}

function reprInt(x_p0) {
  var result_33557593 = [];

    result_33557593 = nimCopy(null, HEX24__systemZdollars_u8(x_p0), NTI33554449);

  return result_33557593;

}

function HEX24__systemZdollars_u11(x_p0) {
  var result_385875981 = [[]];

    result_385875981[0] = nimCopy(null, [], NTI33554449);
    addInt__stdZprivateZdigitsutils_u223(result_385875981, 0, x_p0);

  return result_385875981[0];

}

function reprInt(x_p0) {
  var result_33557587 = [];

    result_33557587 = nimCopy(null, HEX24__systemZdollars_u11(x_p0), NTI33554449);

  return result_33557587;

}

function addInt__stdZprivateZdigitsutils_u192(result_p0, result_p0_Idx, x_p1) {
    addChars__stdZprivateZdigitsutils_u198(result_p0, result_p0_Idx, ((x_p1) + ""));

  
}

function HEX24__systemZdollars_u14(x_p0) {
  var result_385875984 = [[]];

    result_385875984[0] = nimCopy(null, [], NTI33554449);
    addInt__stdZprivateZdigitsutils_u192(result_385875984, 0, x_p0);

  return result_385875984[0];

}

function reprInt(x_p0) {
  var result_33557590 = [];

    result_33557590 = nimCopy(null, HEX24__systemZdollars_u14(x_p0), NTI33554449);

  return result_33557590;

}

function reprChar(x_p0) {
  var result_33557667 = [];

    result_33557667 = nimCopy(null, [39], NTI33554449);
    switch (x_p0) {
    case 34:
      result_33557667.push.apply(result_33557667, [92,34]);;
      break;
    case 92:
      result_33557667.push.apply(result_33557667, [92,92]);;
      break;
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 186:
    case 187:
    case 188:
    case 189:
    case 190:
    case 191:
    case 192:
    case 193:
    case 194:
    case 195:
    case 196:
    case 197:
    case 198:
    case 199:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 219:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 231:
    case 232:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 239:
    case 240:
    case 241:
    case 242:
    case 243:
    case 244:
    case 245:
    case 246:
    case 247:
    case 248:
    case 249:
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      result_33557667.push.apply(result_33557667, ([92]).concat(reprInt(x_p0)));;
      break;
    default: 
      addChar(result_33557667, x_p0);;
      break;
    }
    result_33557667.push.apply(result_33557667, [39]);;

  return result_33557667;

}

function reprBool(x_p0) {
  var result_33557622 = [];

    if (x_p0) {
    result_33557622 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33557622 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33557622;

}

function nimFloatToString__stdZformatfloat_u130(a_p0) {
  var result_402653316 = null;

          function nimOnlyDigitsOrMinus(n) {
        return n.toString().match(/^-?\d+$/);
      }
      if (Number.isSafeInteger(a_p0))
        result_402653316 = a_p0 === 0 && 1 / a_p0 < 0 ? "-0.0" : a_p0+".0";
      else {
        result_402653316 = a_p0+"";
        if(nimOnlyDigitsOrMinus(result_402653316)){
          result_402653316 = a_p0+".0";
        }
      }
    

  return result_402653316;

}

function addFloat__system_u3169(result_p0, result_p0_Idx, x_p1) {
    add__system_u1942(result_p0, result_p0_Idx, nimFloatToString__stdZformatfloat_u130(x_p1));

  
}

function HEX24__system_u3165(x_p0) {
  var result_33557600 = [[]];

    result_33557600[0] = nimCopy(null, [], NTI33554449);
    addFloat__system_u3169(result_33557600, 0, x_p0);

  return result_33557600[0];

}

function reprFloat(x_p0) {
  var result_33557596 = [];

    result_33557596 = nimCopy(null, HEX24__system_u3165(x_p0), NTI33554449);

  return result_33557596;

}

function reprStrAux__system_u3249(result_p0, result_p0_Idx, s_p1, len_p2) {
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [34]);;
    Label1: {
      var i_33557690 = 0;
      var colontmp__570442326 = 0;
      colontmp__570442326 = (len_p2 - 1);
      var res_570442327 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570442327 <= colontmp__570442326)) break Label3;
            i_33557690 = res_570442327;
            var c_33557691 = s_p1[i_33557690];
            switch (c_33557691) {
            case 34:
              result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [92,34]);;
              break;
            case 92:
              result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [92,92]);;
              break;
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
            case 180:
            case 181:
            case 182:
            case 183:
            case 184:
            case 185:
            case 186:
            case 187:
            case 188:
            case 189:
            case 190:
            case 191:
            case 192:
            case 193:
            case 194:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
            case 207:
            case 208:
            case 209:
            case 210:
            case 211:
            case 212:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
            case 219:
            case 220:
            case 221:
            case 222:
            case 223:
            case 224:
            case 225:
            case 226:
            case 227:
            case 228:
            case 229:
            case 230:
            case 231:
            case 232:
            case 233:
            case 234:
            case 235:
            case 236:
            case 237:
            case 238:
            case 239:
            case 240:
            case 241:
            case 242:
            case 243:
            case 244:
            case 245:
            case 246:
            case 247:
            case 248:
            case 249:
            case 250:
            case 251:
            case 252:
            case 253:
            case 254:
            case 255:
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
              result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], ([92]).concat(reprInt(c_33557691)));;
              break;
            default: 
              addChar(result_p0[result_p0_Idx], c_33557691);;
              break;
            }
            res_570442327 += 1;
          }
      };
    };
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [34]);;

  
}

function reprStr(s_p0) {
  var result_33557680 = [[]];

    reprStrAux__system_u3249(result_33557680, 0, s_p0, (s_p0).length);

  return result_33557680[0];

}

function reprStrAux__system_u3360(result_p0, result_p0_Idx, s_p1, len_p2) {
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [34]);;
    Label1: {
      var i_33557801 = 0;
      var colontmp__570442330 = 0;
      colontmp__570442330 = (len_p2 - 1);
      var res_570442331 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570442331 <= colontmp__570442330)) break Label3;
            i_33557801 = res_570442331;
            var c_33557802 = s_p1.charCodeAt(i_33557801);
            switch (c_33557802) {
            case 34:
              result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [92,34]);;
              break;
            case 92:
              result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [92,92]);;
              break;
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
            case 180:
            case 181:
            case 182:
            case 183:
            case 184:
            case 185:
            case 186:
            case 187:
            case 188:
            case 189:
            case 190:
            case 191:
            case 192:
            case 193:
            case 194:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
            case 207:
            case 208:
            case 209:
            case 210:
            case 211:
            case 212:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
            case 219:
            case 220:
            case 221:
            case 222:
            case 223:
            case 224:
            case 225:
            case 226:
            case 227:
            case 228:
            case 229:
            case 230:
            case 231:
            case 232:
            case 233:
            case 234:
            case 235:
            case 236:
            case 237:
            case 238:
            case 239:
            case 240:
            case 241:
            case 242:
            case 243:
            case 244:
            case 245:
            case 246:
            case 247:
            case 248:
            case 249:
            case 250:
            case 251:
            case 252:
            case 253:
            case 254:
            case 255:
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
              result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], ([92]).concat(reprInt(c_33557802)));;
              break;
            default: 
              addChar(result_p0[result_p0_Idx], c_33557802);;
              break;
            }
            res_570442331 += 1;
          }
      };
    };
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [34]);;

  
}

function addSetElem__system_u3263(result_p0, result_p0_Idx, elem_p1, typ_p2) {
    switch (typ_p2.kind) {
    case 14:
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], reprEnum(elem_p1, typ_p2));;
      break;
    case 1:
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], reprBool((!!(elem_p1))));;
      break;
    case 2:
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], reprChar(elem_p1));;
      break;
    case 20:
      addSetElem__system_u3263(result_p0, result_p0_Idx, elem_p1, typ_p2.base);
      break;
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 41:
    case 42:
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], reprInt(elem_p1));;
      break;
    default: 
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41]);;
      break;
    }

  
}

function reprSetAux__system_u3277(result_p0, result_p0_Idx, s_p1, typ_p2) {
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [123]);;
    var first_33557713 = true;
    Label1: {
      var el_33557714 = 0;
      var len_570442335 = 0;
      var yieldRes_570442336 = 0;
      var i_570442337 = 0;
        var setObjKeys = Object.getOwnPropertyNames(s_p1);
  len_570442335 = setObjKeys.length;
  
      Label2: {
          Label3: while (true) {
          if (!(i_570442337 < len_570442335)) break Label3;
            yieldRes_570442336 = parseInt(setObjKeys[i_570442337],10);

            el_33557714 = yieldRes_570442336;
            if (first_33557713) {
            first_33557713 = false;
            }
            else {
            result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [44,32]);;
            }
            
            addSetElem__system_u3263(result_p0, result_p0_Idx, el_33557714, typ_p2.base);
            i_570442337 += 1;
          }
      };
    };
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [125]);;

  
}

function reprSet(e_p0, typ_p1) {
  var result_33557718 = [[]];

    reprSetAux__system_u3277(result_33557718, 0, e_p0, typ_p1);

  return result_33557718[0];

}

function reprRecordAux__system_u3325(result_p0, result_p0_Idx, o_p1, o_p1_Idx, typ_p2, cl_p3) {
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [91]);;
    var first_33557762 = true;
    var val_33557763 = o_p1, val_33557763_Idx = o_p1_Idx;
    if ((typ_p2.node.len == 0)) {
    var key_33557764 = typ_p2.node.name;
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], (cstrToNimstr(key_33557764)).concat([32,61,32]));;
    val_33557763 = o_p1[key_33557764];

    reprAux__system_u3292(result_p0, result_p0_Idx, val_33557763, val_33557763_Idx, typ_p2.node.typ, cl_p3);
    }
    else {
      Label1: {
        var i_33557769 = 0;
        var colontmp__570442340 = 0;
        colontmp__570442340 = (typ_p2.node.len - 1);
        var res_570442341 = 0;
        Label2: {
            Label3: while (true) {
            if (!(res_570442341 <= colontmp__570442340)) break Label3;
              i_33557769 = res_570442341;
              if (first_33557762) {
              first_33557762 = false;
              }
              else {
              result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [44,10]);;
              }
              
              var key_33557770 = typ_p2.node.sons[i_33557769].name;
              result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], (cstrToNimstr(key_33557770)).concat([32,61,32]));;
              val_33557763 = o_p1[key_33557770];

              reprAux__system_u3292(result_p0, result_p0_Idx, val_33557763, val_33557763_Idx, typ_p2.node.sons[i_33557769].typ, cl_p3);
              res_570442341 += 1;
            }
        };
      };
    }
    
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [93]);;

  
}

function reprRecord(o_p0, o_p0_Idx, typ_p1, cl_p2) {
  var result_33557775 = [[]];

    reprRecordAux__system_u3325(result_33557775, 0, o_p0, o_p0_Idx, typ_p1, cl_p2);

  return result_33557775[0];

}

function reprArray(a_p0, a_p0_Idx, typ_p1, cl_p2) {
    var Temporary1;

  var result_33557733 = [[]];

    if ((typ_p1.kind == 24)) {
    Temporary1 = [64,91];
    }
    else {
    Temporary1 = [91];
    }
    
    result_33557733[0] = nimCopy(null, Temporary1, NTI33554449);
    var len_33557738 = 0;
    len_33557738 = a_p0.length;

    var dereffed_33557739 = a_p0, dereffed_33557739_Idx = a_p0_Idx;
    Label2: {
      var i_33557744 = 0;
      var colontmp__570442344 = 0;
      colontmp__570442344 = (len_33557738 - 1);
      var res_570442345 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_570442345 <= colontmp__570442344)) break Label4;
            i_33557744 = res_570442345;
            if ((0 < i_33557744)) {
            result_33557733[0].push.apply(result_33557733[0], [44,32]);;
            }
            
                dereffed_33557739_Idx = i_33557744;
    dereffed_33557739 = a_p0[dereffed_33557739_Idx];
    
            reprAux__system_u3292(result_33557733, 0, dereffed_33557739, dereffed_33557739_Idx, typ_p1.base, cl_p2);
            res_570442345 += 1;
          }
      };
    };
    result_33557733[0].push.apply(result_33557733[0], [93]);;

  return result_33557733[0];

}

function reprPointer(p_p0, p_p0_Idx) {
  var result_33557618 = [];

    var tmp_33557619 = 0;
    tmp_33557619 = p_p0_Idx || 0;
    result_33557618 = nimCopy(null, HEX24__systemZdollars_u8(tmp_33557619), NTI33554449);

  return result_33557618;

}

function isPointedToNil__system_u3313(p_p0, p_p0_Idx) {
  var result_33557747 = false;

    if (p_p0 === null) {result_33557747 = true;}


  return result_33557747;

}

function reprRef__system_u3316(result_p0, result_p0_Idx, p_p1, p_p1_Idx, typ_p2, cl_p3) {
  BeforeRet: {
    if (isPointedToNil__system_u3313(p_p1, p_p1_Idx)) {
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [110,105,108]);;
    break BeforeRet;
    }
    
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], ([114,101,102,32]).concat(reprPointer(p_p1, p_p1_Idx)));;
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [32,45,45,62,32]);;
    if (!((typ_p2.base.kind == 16))) {
        if (p_p1 != null && p_p1.length > 0) {
      p_p1 = p_p1[p_p1_Idx];
    }
    
    }
    
    reprAux__system_u3292(result_p0, result_p0_Idx, p_p1, p_p1_Idx, typ_p2.base, cl_p3);
  };

  
}

function reprJsonStringify(p_p0) {
  var result_33557778 = [];

    var tmp_33557779 = null;
    tmp_33557779 = JSON.stringify(p_p0);

    result_33557778 = nimCopy(null, cstrToNimstr(tmp_33557779), NTI33554449);

  return result_33557778;

}

function reprAux__system_u3292(result_p0, result_p0_Idx, p_p1, p_p1_Idx, typ_p2, cl_p3) {
  BeforeRet: {
    if ((cl_p3.recDepth == 0)) {
    result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [46,46,46]);;
    break BeforeRet;
    }
    
    cl_p3.recDepth -= 1;
    switch (typ_p2.kind) {
    case 31:
    case 32:
    case 33:
    case 34:
    case 40:
    case 41:
    case 42:
    case 43:
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], reprInt(p_p1, p_p1_Idx));;
      break;
    case 35:
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], reprInt(p_p1, p_p1_Idx));;
      break;
    case 44:
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], reprInt(p_p1, p_p1_Idx));;
      break;
    case 2:
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], reprChar(p_p1, p_p1_Idx));;
      break;
    case 1:
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], reprBool(p_p1, p_p1_Idx));;
      break;
    case 36:
    case 37:
    case 38:
    case 39:
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], reprFloat(p_p1, p_p1_Idx));;
      break;
    case 28:
      var fp_33557790 = 0;
      fp_33557790 = p_p1;

      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], reprStr(p_p1, p_p1_Idx));;
      break;
    case 29:
      var fp_33557791 = null;
      fp_33557791 = p_p1;

      if ((fp_33557791 == null)) {
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [110,105,108]);;
      }
      else {
      reprStrAux__system_u3360(result_p0, result_p0_Idx, fp_33557791, ((fp_33557791) == null ? 0 : (fp_33557791).length));
      }
      
      break;
    case 14:
    case 15:
      var fp_33557806 = 0;
      fp_33557806 = p_p1;

      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], reprEnum(fp_33557806, typ_p2));;
      break;
    case 19:
      var fp_33557807 = 0;
      fp_33557807 = p_p1;

      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], reprSet(fp_33557807, typ_p2));;
      break;
    case 20:
      reprAux__system_u3292(result_p0, result_p0_Idx, p_p1, p_p1_Idx, typ_p2.base, cl_p3);
      break;
    case 17:
    case 18:
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], reprRecord(p_p1, p_p1_Idx, typ_p2, cl_p3));;
      break;
    case 16:
    case 4:
    case 24:
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], reprArray(p_p1, p_p1_Idx, typ_p2, cl_p3));;
      break;
    case 26:
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], reprPointer(p_p1, p_p1_Idx));;
      break;
    case 21:
    case 22:
      reprRef__system_u3316(result_p0, result_p0_Idx, p_p1, p_p1_Idx, typ_p2, cl_p3);
      break;
    case 25:
      if (isPointedToNil__system_u3313(p_p1, p_p1_Idx)) {
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], [110,105,108]);;
      }
      else {
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], reprPointer(p_p1, p_p1_Idx));;
      }
      
      break;
    default: 
      result_p0[result_p0_Idx].push.apply(result_p0[result_p0_Idx], ([40,105,110,118,97,108,105,100,32,100,97,116,97,33,41]).concat(reprJsonStringify(p_p1, p_p1_Idx)));;
      break;
    }
    cl_p3.recDepth += 1;
  };

  
}

function HEX3DHEX3D__lisp_u1535(x_p0, y_p1) {
  var result_570426883 = false;

  BeforeRet: {
    var sameObject_570426891 = false;
    sameObject_570426891 = x_p0 === y_p1;
    if (sameObject_570426891) {
    result_570426883 = true;
    break BeforeRet;
    }
    
    if (!(((x_p0).length == (y_p1).length))) {
    result_570426883 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_570426905 = 0;
      var colontmp__570442348 = 0;
      colontmp__570442348 = subInt((x_p0).length, 1);
      var res_570442349 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570442349 <= colontmp__570442348)) break Label3;
            i_570426905 = res_570442349;
            if (!(HEX3DHEX3D__lisp_u1499(x_p0[chckIndx(i_570426905, 0, (x_p0).length - 1)], y_p1[chckIndx(i_570426905, 0, (y_p1).length - 1)]))) {
            result_570426883 = false;
            break BeforeRet;
            }
            
            res_570442349 = addInt(res_570442349, 1);
          }
      };
    };
    result_570426883 = true;
    break BeforeRet;
  };

  return result_570426883;

}

function len__lisp_u1038(t_p0) {
  var result_570426386 = 0;

    result_570426386 = t_p0.counter;

  return result_570426386;

}

function HEX21HEX26__pureZhashes_u4(h_p0, val_p1) {
  var result_1107296263 = 0;

    var h_1107296264 = Number(BigInt.asUintN(32, BigInt(h_p0)));
    var val_1107296265 = Number(BigInt.asUintN(32, BigInt(val_p1)));
    var res_1107296266 = ((h_1107296264 + val_1107296265) >>> 0);
    res_1107296266 = ((res_1107296266 + ((res_1107296266 << 10) >>> 0)) >>> 0);
    res_1107296266 = ((res_1107296266 ^ (res_1107296266 >>> 6)) >>> 0);
    result_1107296263 = Number(BigInt.asIntN(32, BigInt(res_1107296266)));

  return result_1107296263;

}

function hasJsBigInt__stdZprivateZjsutils_u43() {
  var result_905969708 = false;

    result_905969708 = typeof BigInt != 'undefined';

  return result_905969708;

}

function hiXorLoJs__pureZhashes_u86(a_p0, b_p1) {
  var result_1107296345 = 0n;

    var prod_1107296346 = (a_p0 * b_p1);
    var mask_1107296347 = BigInt("0xffffffffffffffff");
    result_1107296345 = ((prod_1107296346 >> BigInt("64")) ^ (prod_1107296346 & mask_1107296347));

  return result_1107296345;

}

function hashWangYi1__pureZhashes_u194(x_p0) {
  var result_1107296453 = 0;

    if (hasJsBigInt__stdZprivateZjsutils_u43()) {
    var P0HEX60gensym4_1107296467 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym4_1107296468 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym4_1107296469 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym4_1107296470 = hiXorLoJs__pureZhashes_u86(hiXorLoJs__pureZhashes_u86(P0HEX60gensym4_1107296467, (BigInt(x_p0) ^ P1HEX60gensym4_1107296468)), P58HEX60gensym4_1107296469);
    result_1107296453 = Number((() => { const i = resHEX60gensym4_1107296470, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1107296453 = (Number(BigInt.asIntN(32, x_p0)) & Number(BigInt.asIntN(32, 4294967295n)));
    }
    

  return result_1107296453;

}

function hash__lisp_u379(x_p0) {
  var result_570425726 = 0;

    result_570425726 = hashWangYi1__pureZhashes_u194(BigInt.asUintN(64, BigInt(x_p0)));

  return result_570425726;

}

function HEX21HEX24__pureZhashes_u19(h_p0) {
  var result_1107296277 = 0;

    var h_1107296278 = Number(BigInt.asUintN(32, BigInt(h_p0)));
    var res_1107296283 = ((h_1107296278 + ((h_1107296278 << 3) >>> 0)) >>> 0);
    res_1107296283 = ((res_1107296283 ^ (res_1107296283 >>> 11)) >>> 0);
    res_1107296283 = ((res_1107296283 + ((res_1107296283 << 15) >>> 0)) >>> 0);
    result_1107296277 = Number(BigInt.asIntN(32, BigInt(res_1107296283)));

  return result_1107296277;

}

function hash__lisp_u335(x_p0) {
  var result_570425682 = 0;

    result_570425682 = 0;
    Label1: {
      var it_570425722 = 0;
      var i_570442360 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570442360 <= 1)) break Label3;
            if ((x_p0[chckRange(i_570442360, 0, 1)] != undefined)) {
            it_570425722 = chckRange(i_570442360, 0, 1);
            result_570425682 = HEX21HEX26__pureZhashes_u4(result_570425682, hash__lisp_u379(it_570425722));
            }
            
            i_570442360 += 1;
          }
      };
    };
    result_570425682 = HEX21HEX24__pureZhashes_u19(result_570425682);

  return result_570425682;

}

function hash__lisp_u408(x_p0) {
  var result_570425755 = 0;

    result_570425755 = hashWangYi1__pureZhashes_u194(BigInt.asUintN(64, BigInt(x_p0)));

  return result_570425755;

}

function len__lisp_u498(t_p0) {
  var result_570425846 = 0;

    result_570425846 = t_p0.counter;

  return result_570425846;

}

function hash__lisp_u773(x_p0) {
  var result_570426120 = 0;

    result_570426120 = 0;
    if (true) {
    result_570426120 = HEX21HEX26__pureZhashes_u4(result_570426120, hash__pureZhashes_u743(x_p0["Field0"]));
    }
    
    if (true) {
    result_570426120 = HEX21HEX26__pureZhashes_u4(result_570426120, hash__lisp_u313(x_p0["Field1"]));
    }
    
    result_570426120 = HEX21HEX24__pureZhashes_u19(result_570426120);

  return result_570426120;

}

function hash__lisp_u449(s_p0) {
  var result_570425797 = 0;

    Label1: {
      var p_570426116 = {Field0: [], Field1: null};
      var L_570442363 = len__lisp_u498(s_p0);
      Label2: {
        var h_570442365 = 0;
        var colontmp__570442366 = 0;
        colontmp__570442366 = (s_p0.data).length - 1;
        var res_570442367 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_570442367 <= colontmp__570442366)) break Label4;
              h_570442365 = res_570442367;
              if (isFilled__pureZcollectionsZtables_u31(s_p0.data[chckIndx(h_570442365, 0, (s_p0.data).length - 1)].Field0)) {
              p_570426116 = nimCopy(p_570426116, {Field0: nimCopy(null, s_p0.data[chckIndx(h_570442365, 0, (s_p0.data).length - 1)].Field1, NTI33554449), Field1: s_p0.data[chckIndx(h_570442365, 0, (s_p0.data).length - 1)].Field2}, NTI570425630);
              result_570425797 = (result_570425797 ^ hash__lisp_u773(p_570426116));
              if (!((len__lisp_u498(s_p0) == L_570442363))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_570442367 = addInt(res_570442367, 1);
            }
        };
      };
    };
    result_570425797 = HEX21HEX24__pureZhashes_u19(result_570425797);

  return result_570425797;

}

function hash__lisp_u880(x_p0) {
  var result_570426227 = 0;

    result_570426227 = hashWangYi1__pureZhashes_u194(BigInt.asUintN(64, BigInt(x_p0)));

  return result_570426227;

}

function hash__lisp_u893(x_p0) {
  var result_570426240 = 0;

    result_570426240 = hashWangYi1__pureZhashes_u194(BigInt.asUintN(64, BigInt(x_p0)));

  return result_570426240;

}

function hasBigUint64Array__stdZprivateZjsutils_u45() {
  var result_905969710 = false;

    result_905969710 = typeof BigUint64Array != 'undefined';

  return result_905969710;

}

function hash__pureZhashes_u219(x_p0) {
    var Temporary1;

  var result_1107296477 = 0;

    var y_1107296478 = (x_p0 + 0.0);
    var P0HEX60gensym8_1107296523 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym8_1107296524 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym8_1107296525 = BigInt("0xeb44accab455d16d");
    var xHEX60gensym7_1107296504 = new ArrayBuffer(8);
    var yHEX60gensym7_1107296505 = new Float64Array(xHEX60gensym7_1107296504);
    if (hasBigUint64Array__stdZprivateZjsutils_u45()) {
    var zHEX60gensym7_1107296506 = new BigUint64Array(xHEX60gensym7_1107296504);
    yHEX60gensym7_1107296505[0] = y_1107296478;
    Temporary1 = zHEX60gensym7_1107296506[0];
    }
    else {
      var zHEX60gensym7_1107296507 = new Uint32Array(xHEX60gensym7_1107296504);
      yHEX60gensym7_1107296505[0] = y_1107296478;
    Temporary1 = (BigInt(zHEX60gensym7_1107296507[0]) + (BigInt(zHEX60gensym7_1107296507[1]) << BigInt(32)));
    }
    
    var resHEX60gensym8_1107296526 = hiXorLoJs__pureZhashes_u86(hiXorLoJs__pureZhashes_u86(P0HEX60gensym8_1107296523, (Temporary1 ^ P1HEX60gensym8_1107296524)), P58HEX60gensym8_1107296525);
    result_1107296477 = Number((() => { const i = resHEX60gensym8_1107296526, b = 32; return BigInt.asIntN(b, i) })());

  return result_1107296477;

}

function hash__lisp_u910(x_p0) {
  var result_570426257 = 0;

    result_570426257 = hashWangYi1__pureZhashes_u194(BigInt.asUintN(64, BigInt((x_p0 ? 1 : 0))));

  return result_570426257;

}

function hash__lisp_u929(x_p0) {
  var result_570426276 = 0;

    result_570426276 = 0;
    Label1: {
      var a_570426290 = null;
      var i_570442371 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570442371 < (x_p0).length)) break Label3;
            a_570426290 = x_p0[chckIndx(i_570442371, 0, (x_p0).length - 1)];
            result_570426276 = HEX21HEX26__pureZhashes_u4(result_570426276, hash__lisp_u313(a_570426290));
            i_570442371 += 1;
          }
      };
    };
    result_570426276 = HEX21HEX24__pureZhashes_u19(result_570426276);

  return result_570426276;

}

function hash__lisp_u1297(x_p0) {
  var result_570426644 = 0;

    result_570426644 = 0;
    if (true) {
    result_570426644 = HEX21HEX26__pureZhashes_u4(result_570426644, hash__lisp_u313(x_p0["Field0"]));
    }
    
    if (true) {
    result_570426644 = HEX21HEX26__pureZhashes_u4(result_570426644, hash__lisp_u313(x_p0["Field1"]));
    }
    
    result_570426644 = HEX21HEX24__pureZhashes_u19(result_570426644);

  return result_570426644;

}

function hash__lisp_u989(s_p0) {
  var result_570426337 = 0;

    Label1: {
      var p_570426640 = {Field0: null, Field1: null};
      var L_570442374 = len__lisp_u1038(s_p0);
      Label2: {
        var h_570442376 = 0;
        var colontmp__570442377 = 0;
        colontmp__570442377 = (s_p0.data).length - 1;
        var res_570442378 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_570442378 <= colontmp__570442377)) break Label4;
              h_570442376 = res_570442378;
              if (isFilled__pureZcollectionsZtables_u31(s_p0.data[chckIndx(h_570442376, 0, (s_p0.data).length - 1)].Field0)) {
              p_570426640 = nimCopy(p_570426640, {Field0: s_p0.data[chckIndx(h_570442376, 0, (s_p0.data).length - 1)].Field1, Field1: s_p0.data[chckIndx(h_570442376, 0, (s_p0.data).length - 1)].Field2}, NTI570426079);
              result_570426337 = (result_570426337 ^ hash__lisp_u1297(p_570426640));
              if (!((len__lisp_u1038(s_p0) == L_570442374))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_570442378 = addInt(res_570442378, 1);
            }
        };
      };
    };
    result_570426337 = HEX21HEX24__pureZhashes_u19(result_570426337);

  return result_570426337;

}

function hash__lisp_u1330(x_p0) {
  var result_570426677 = 0;

    result_570426677 = 0;
    Label1: {
      var a_570426681 = [];
      var i_570442381 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570442381 < (x_p0).length)) break Label3;
            a_570426681 = x_p0[chckIndx(i_570442381, 0, (x_p0).length - 1)];
            result_570426677 = HEX21HEX26__pureZhashes_u4(result_570426677, hash__pureZhashes_u743(a_570426681));
            i_570442381 += 1;
          }
      };
    };
    result_570426677 = HEX21HEX24__pureZhashes_u19(result_570426677);

  return result_570426677;

}

function hash__lisp_u313(n_p0) {
      var Temporary1;
      var Temporary2;
        var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
      var Temporary14;
        var Temporary15;
        var Temporary16;
        var Temporary17;
      var Temporary18;
      var Temporary19;
      var Temporary20;
        var Temporary21;
      var Temporary22;
      var Temporary23;
        var Temporary24;
      var Temporary25;
      var Temporary26;
      var Temporary27;
        var Temporary28;
      var Temporary29;
        var Temporary30;
      var Temporary31;
        var Temporary32;
      var Temporary33;
      var Temporary34;
        var Temporary35;
      var Temporary36;
      var Temporary37;
        var Temporary38;
      var Temporary39;
      var Temporary40;
      var Temporary41;
        var Temporary42;
      var Temporary43;
        var Temporary44;
      var Temporary45;
        var Temporary46;
      var Temporary47;

  var result_570425659 = 0;

    if (!(!((n_p0 == null)))) {
    failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,51,51,49,44,32,51,41,32,96,110,111,116,32,105,115,78,105,108,40,110,41,96,32,65,116,116,101,109,112,116,105,110,103,32,116,111,32,104,97,115,104,32,97,32,110,105,108,32,110,111,100,101]);
    }
    
    if (!(!((n_p0.kind == 0)))) {
    var inst_570425673 = {Field0: [108,105,115,112,46,110,105,109], Field1: 332, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570425673.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p0.line),[41,58,32,67,97,110,110,111,116,32,104,97,115,104,32,97,32,115,121,109,98,111,108]));
    }
    
    if (true) {
    }
    
    if (true) {
    result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u335(n_p0.tags));
    }
    
    if (true) {
    }
    
    if (true) {
    result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u408(n_p0.kind));
    }
    
    switch (n_p0.kind) {
    case 19:
      if (true) {
      var Temporary1 = n_p0;
      if (ConstSet84[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'member\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__pureZhashes_u743(Temporary1.member));
      }
      
      break;
    case 17:
      if (true) {
      var Temporary2 = n_p0;
      if (ConstSet85[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'className\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__pureZhashes_u743(Temporary2.className));
      }
      
      if (true) {
        var Temporary3 = n_p0;
        if (ConstSet86[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classParent\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI570425392)); }
      if (!((Temporary3.classParent == null))) {
      var Temporary4 = n_p0;
      if (ConstSet87[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classParent\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u313(Temporary4.classParent));
      }
      
      }
      
      if (true) {
      var Temporary5 = n_p0;
      if (ConstSet88[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u449(Temporary5.classFields));
      }
      
      if (true) {
      var Temporary6 = n_p0;
      if (ConstSet89[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classMethods\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u449(Temporary6.classMethods));
      }
      
      break;
    case 18:
      if (true) {
        var Temporary7 = n_p0;
        if (ConstSet90[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI570425392)); }
      if (!((Temporary7.classObjType == null))) {
      var Temporary8 = n_p0;
      if (ConstSet91[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u313(Temporary8.classObjType));
      }
      
      }
      
      if (true) {
      var Temporary9 = n_p0;
      if (ConstSet92[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u449(Temporary9.classObjFields));
      }
      
      if (true) {
      var Temporary10 = n_p0;
      if (ConstSet93[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjMethods\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u449(Temporary10.classObjMethods));
      }
      
      break;
    case 14:
    case 15:
    case 16:
      break;
    case 10:
      if (true) {
      var Temporary11 = n_p0;
      if (ConstSet94[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'dot\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__pureZhashes_u743(Temporary11.dot));
      }
      
      break;
    case 3:
      if (true) {
      var Temporary12 = n_p0;
      if (ConstSet95[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'keyword\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u880(Temporary12.keyword));
      }
      
      break;
    case 9:
      if (true) {
      var Temporary13 = n_p0;
      if (ConstSet96[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u893(Temporary13.atomicKind));
      }
      
      var Temporary14 = n_p0;
      if (ConstSet97[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI570425392)); }
      switch (Temporary14.atomicKind) {
      case 0:
        if (true) {
        var Temporary15 = n_p0;
        if (ConstSet98[Temporary15.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary15.atomicKind, NTI570425391)); }
        result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__pureZhashes_u219(Temporary15.num));
        }
        
        break;
      case 1:
        if (true) {
        var Temporary16 = n_p0;
        if (ConstSet99[Temporary16.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary16.atomicKind, NTI570425391)); }
        result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__pureZhashes_u743(Temporary16.str));
        }
        
        break;
      case 2:
        if (true) {
        var Temporary17 = n_p0;
        if (ConstSet100[Temporary17.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolean\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary17.atomicKind, NTI570425391)); }
        result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u910(Temporary17.boolean));
        }
        
        break;
      }
      break;
    case 0:
      if (true) {
      var Temporary18 = n_p0;
      if (ConstSet101[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__pureZhashes_u743(Temporary18.sym));
      }
      
      break;
    case 5:
      if (true) {
      var Temporary19 = n_p0;
      if (ConstSet102[Temporary19.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary19.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u893(Temporary19.atomicType));
      }
      
      break;
    case 1:
      if (true) {
      var Temporary20 = n_p0;
      if (ConstSet103[Temporary20.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary20.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u929(Temporary20.kids));
      }
      
      if (true) {
        var Temporary21 = n_p0;
        if (ConstSet104[Temporary21.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'listType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary21.kind, NTI570425392)); }
      if (!((Temporary21.listType == null))) {
      var Temporary22 = n_p0;
      if (ConstSet105[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'listType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u313(Temporary22.listType));
      }
      
      }
      
      break;
    case 4:
      if (true) {
      var Temporary23 = n_p0;
      if (ConstSet106[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableVal\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u989(Temporary23.tableVal));
      }
      
      if (true) {
        var Temporary24 = n_p0;
        if (ConstSet107[Temporary24.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary24.kind, NTI570425392)); }
      if (!((Temporary24.tableType == null))) {
      var Temporary25 = n_p0;
      if (ConstSet108[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u313(Temporary25.tableType));
      }
      
      }
      
      break;
    case 2:
      if (true) {
      var Temporary26 = n_p0;
      if (ConstSet109[Temporary26.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcParams\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary26.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u1330(Temporary26.funcParams));
      }
      
      if (true) {
      var Temporary27 = n_p0;
      if (ConstSet110[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcTypes\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u929(Temporary27.funcTypes));
      }
      
      if (true) {
        var Temporary28 = n_p0;
        if (ConstSet111[Temporary28.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcBody\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary28.kind, NTI570425392)); }
      if (!((Temporary28.funcBody == null))) {
      var Temporary29 = n_p0;
      if (ConstSet112[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcBody\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u313(Temporary29.funcBody));
      }
      
      }
      
      if (true) {
        var Temporary30 = n_p0;
        if (ConstSet113[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcReturnType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI570425392)); }
      if (!((Temporary30.funcReturnType == null))) {
      var Temporary31 = n_p0;
      if (ConstSet114[Temporary31.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcReturnType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary31.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u313(Temporary31.funcReturnType));
      }
      
      }
      
      if (true) {
        var Temporary32 = n_p0;
        if (ConstSet115[Temporary32.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcObj\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary32.kind, NTI570425392)); }
      if (!((Temporary32.funcObj == null))) {
      var Temporary33 = n_p0;
      if (ConstSet116[Temporary33.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcObj\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary33.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u313(Temporary33.funcObj));
      }
      
      }
      
      break;
    case 11:
      if (true) {
      var Temporary34 = n_p0;
      if (ConstSet117[Temporary34.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'templateParams\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary34.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u1330(Temporary34.templateParams));
      }
      
      if (true) {
        var Temporary35 = n_p0;
        if (ConstSet118[Temporary35.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'templateBody\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary35.kind, NTI570425392)); }
      if (!((Temporary35.templateBody == null))) {
      var Temporary36 = n_p0;
      if (ConstSet119[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'templateBody\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u313(Temporary36.templateBody));
      }
      
      }
      
      break;
    case 6:
      if (true) {
      var Temporary37 = n_p0;
      if (ConstSet120[Temporary37.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectTypeFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary37.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u449(Temporary37.objectTypeFields));
      }
      
      break;
    case 8:
      if (true) {
        var Temporary38 = n_p0;
        if (ConstSet121[Temporary38.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary38.kind, NTI570425392)); }
      if (!((Temporary38.objectType == null))) {
      var Temporary39 = n_p0;
      if (ConstSet122[Temporary39.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary39.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u313(Temporary39.objectType));
      }
      
      }
      
      if (true) {
      var Temporary40 = n_p0;
      if (ConstSet123[Temporary40.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary40.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u449(Temporary40.objectFields));
      }
      
      break;
    case 7:
      if (true) {
      var Temporary41 = n_p0;
      if (ConstSet124[Temporary41.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'enumTypeValues\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary41.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u929(Temporary41.enumTypeValues));
      }
      
      break;
    case 12:
      if (true) {
        var Temporary42 = n_p0;
        if (ConstSet125[Temporary42.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableKeyType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary42.kind, NTI570425392)); }
      if (!((Temporary42.tableKeyType == null))) {
      var Temporary43 = n_p0;
      if (ConstSet126[Temporary43.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableKeyType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary43.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u313(Temporary43.tableKeyType));
      }
      
      }
      
      if (true) {
        var Temporary44 = n_p0;
        if (ConstSet127[Temporary44.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary44.kind, NTI570425392)); }
      if (!((Temporary44.tableValueType == null))) {
      var Temporary45 = n_p0;
      if (ConstSet128[Temporary45.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary45.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u313(Temporary45.tableValueType));
      }
      
      }
      
      break;
    case 13:
      if (true) {
        var Temporary46 = n_p0;
        if (ConstSet129[Temporary46.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arrayValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary46.kind, NTI570425392)); }
      if (!((Temporary46.arrayValueType == null))) {
      var Temporary47 = n_p0;
      if (ConstSet130[Temporary47.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arrayValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary47.kind, NTI570425392)); }
      result_570425659 = HEX21HEX26__pureZhashes_u4(result_570425659, hash__lisp_u313(Temporary47.arrayValueType));
      }
      
      }
      
      break;
    }
    result_570425659 = HEX21HEX24__pureZhashes_u19(result_570425659);

  return result_570425659;

}

function rawGet__lisp_u1655(t_p0, key_p1, hc_p2, hc_p2_Idx) {
  var result_570427005 = 0;

  BeforeRet: {
    hc_p2[hc_p2_Idx] = hash__lisp_u313(key_p1);
    if ((hc_p2[hc_p2_Idx] == 0)) {
    hc_p2[hc_p2_Idx] = 314159265;
    }
    
    if (((t_p0.data).length == 0)) {
    result_570427005 = (-1);
    break BeforeRet;
    }
    
    var h_570427056 = (hc_p2[hc_p2_Idx] & (t_p0.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled__pureZcollectionsZtables_u31(t_p0.data[chckIndx(h_570427056, 0, (t_p0.data).length - 1)].Field0)) break Label2;
          if (((t_p0.data[chckIndx(h_570427056, 0, (t_p0.data).length - 1)].Field0 == hc_p2[hc_p2_Idx]) && HEX3DHEX3D__lisp_u1499(t_p0.data[chckIndx(h_570427056, 0, (t_p0.data).length - 1)].Field1, key_p1))) {
          result_570427005 = h_570427056;
          break BeforeRet;
          }
          
          h_570427056 = nextTry__pureZcollectionsZtables_u34(h_570427056, (t_p0.data).length - 1);
        }
    };
    result_570427005 = subInt((-1), h_570427056);
  };

  return result_570427005;

}

function hasKey__lisp_u1648(t_p0, key_p1) {
  var result_570426997 = false;

    var hc_570426998 = [0];
    result_570426997 = (0 <= rawGet__lisp_u1655(t_p0, key_p1, hc_570426998, 0));

  return result_570426997;

}

function getOrDefault__lisp_u1925(t_p0, key_p1) {
  var result_570427274 = null;

    result_570427274 = null;
    var hcHEX60gensym104_570427282 = [0];
    var indexHEX60gensym104_570427289 = rawGet__lisp_u1655(t_p0, key_p1, hcHEX60gensym104_570427282, 0);
    if ((0 <= indexHEX60gensym104_570427289)) {
    result_570427274 = t_p0.data[chckIndx(indexHEX60gensym104_570427289, 0, (t_p0.data).length - 1)].Field2;
    }
    

  return result_570427274;

}

function HEX3DHEX3D__lisp_u1598(s_p0, t_p1) {
  var result_570426947 = false;

  BeforeRet: {
    if ((s_p0.counter == t_p1.counter)) {
    Label1: {
      var keyHEX60gensym100_570426954 = null;
      var valHEX60gensym100_570426955 = null;
      var L_570442352 = len__lisp_u1038(s_p0);
      Label2: {
        var h_570442354 = 0;
        var colontmp__570442355 = 0;
        colontmp__570442355 = (s_p0.data).length - 1;
        var res_570442356 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_570442356 <= colontmp__570442355)) break Label4;
              h_570442354 = res_570442356;
              if (isFilled__pureZcollectionsZtables_u31(s_p0.data[chckIndx(h_570442354, 0, (s_p0.data).length - 1)].Field0)) {
              keyHEX60gensym100_570426954 = s_p0.data[chckIndx(h_570442354, 0, (s_p0.data).length - 1)].Field1;
              valHEX60gensym100_570426955 = s_p0.data[chckIndx(h_570442354, 0, (s_p0.data).length - 1)].Field2;
              if (!(hasKey__lisp_u1648(t_p1, keyHEX60gensym100_570426954))) {
              result_570426947 = false;
              break BeforeRet;
              }
              
              if (!(HEX3DHEX3D__lisp_u1499(getOrDefault__lisp_u1925(t_p1, keyHEX60gensym100_570426954), valHEX60gensym100_570426955))) {
              result_570426947 = false;
              break BeforeRet;
              }
              
              if (!((len__lisp_u1038(s_p0) == L_570442352))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_570442356 = addInt(res_570442356, 1);
            }
        };
      };
    };
    result_570426947 = true;
    break BeforeRet;
    }
    else {
      result_570426947 = false;
      break BeforeRet;
    }
    
  };

  return result_570426947;

}

function HEX3DHEX3D__lisp_u2039(s_p0, t_p1) {
  var result_570427388 = false;

  BeforeRet: {
    if ((s_p0.counter == t_p1.counter)) {
    Label1: {
      var keyHEX60gensym106_570427395 = [];
      var valHEX60gensym106_570427396 = null;
      var L_570442384 = len__lisp_u498(s_p0);
      Label2: {
        var h_570442386 = 0;
        var colontmp__570442387 = 0;
        colontmp__570442387 = (s_p0.data).length - 1;
        var res_570442388 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_570442388 <= colontmp__570442387)) break Label4;
              h_570442386 = res_570442388;
              if (isFilled__pureZcollectionsZtables_u31(s_p0.data[chckIndx(h_570442386, 0, (s_p0.data).length - 1)].Field0)) {
              keyHEX60gensym106_570427395 = s_p0.data[chckIndx(h_570442386, 0, (s_p0.data).length - 1)].Field1;
              valHEX60gensym106_570427396 = s_p0.data[chckIndx(h_570442386, 0, (s_p0.data).length - 1)].Field2;
              if (!(hasKey__lisp_u2089(t_p1, keyHEX60gensym106_570427395))) {
              result_570427388 = false;
              break BeforeRet;
              }
              
              if (!(HEX3DHEX3D__lisp_u1499(getOrDefault__lisp_u2366(t_p1, keyHEX60gensym106_570427395), valHEX60gensym106_570427396))) {
              result_570427388 = false;
              break BeforeRet;
              }
              
              if (!((len__lisp_u498(s_p0) == L_570442384))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_570442388 = addInt(res_570442388, 1);
            }
        };
      };
    };
    result_570427388 = true;
    break BeforeRet;
    }
    else {
      result_570427388 = false;
      break BeforeRet;
    }
    
  };

  return result_570427388;

}

function HEX3DHEX3D__lisp_u1499(a_p0, b_p1) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary11;
          var Temporary12;
          var Temporary13;
          var Temporary14;
          var Temporary15;
          var Temporary16;
          var Temporary17;
        var Temporary18;
        var Temporary19;
        var Temporary20;
        var Temporary21;
        var Temporary22;
        var Temporary23;
        var Temporary24;
        var Temporary25;
        var Temporary26;
          var Temporary27;
          var Temporary28;
        var Temporary29;
        var Temporary30;

  var result_570426846 = false;

    if (((a_p0 == null) && (b_p1 == null))) {
    result_570426846 = true;
    }
    else {
    if ((a_p0 == null)) {
    result_570426846 = (b_p1 == null);
    }
    else {
    if ((b_p1 == null)) {
    result_570426846 = (a_p0 == null);
    }
    else {
    if (!((a_p0.kind == b_p1.kind))) {
    result_570426846 = false;
    }
    else {
      switch (a_p0.kind) {
      case 0:
      case 10:
      case 19:
        if (true) {
        var inst_570426873 = {Field0: [108,105,115,112,46,110,105,109], Field1: 367, Field2: 7};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570426873.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(a_p0.line),[41,58,32,78,111,100,101,32,109,117,115,116,32,98,101,32,101,118,97,108,117,97,116,101,100,32,98,101,102,111,114,101,32,99,111,109,112,97,114,105,115,111,110,58,32],reprAny(a_p0, null, NTI570425393)));
        }
        
        break;
      case 3:
        var Temporary1 = a_p0;
        if (ConstSet80[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'keyword\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI570425392)); }
        var Temporary2 = b_p1;
        if (ConstSet81[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'keyword\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI570425392)); }
        result_570426846 = (Temporary1.keyword == Temporary2.keyword);
        break;
      case 1:
        var Temporary3 = a_p0;
        if (ConstSet82[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI570425392)); }
        var Temporary4 = b_p1;
        if (ConstSet83[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI570425392)); }
        result_570426846 = HEX3DHEX3D__lisp_u1535(Temporary3.kids, Temporary4.kids);
        break;
      case 2:
        result_570426846 = HEX3DHEX3D__lisp_u1499(a_p0, b_p1);
        break;
      case 4:
        var Temporary5 = a_p0;
        if (ConstSet131[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableVal\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI570425392)); }
        var Temporary6 = b_p1;
        if (ConstSet132[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableVal\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI570425392)); }
        result_570426846 = HEX3DHEX3D__lisp_u1598(Temporary5.tableVal, Temporary6.tableVal);
        break;
      case 5:
        var Temporary7 = a_p0;
        if (ConstSet133[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI570425392)); }
        var Temporary8 = b_p1;
        if (ConstSet134[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI570425392)); }
        result_570426846 = (Temporary7.atomicType == Temporary8.atomicType);
        break;
      case 9:
        var Temporary9 = a_p0;
        if (ConstSet135[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI570425392)); }
        var Temporary10 = b_p1;
        if (ConstSet136[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI570425392)); }
        result_570426846 = (Temporary9.atomicKind == Temporary10.atomicKind);
        var Temporary11 = a_p0;
        if (ConstSet137[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI570425392)); }
        switch (Temporary11.atomicKind) {
        case 0:
          var Temporary12 = a_p0;
          if (ConstSet138[Temporary12.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary12.atomicKind, NTI570425391)); }
          var Temporary13 = b_p1;
          if (ConstSet139[Temporary13.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary13.atomicKind, NTI570425391)); }
          result_570426846 = (Temporary12.num == Temporary13.num);
          break;
        case 1:
          var Temporary14 = a_p0;
          if (ConstSet140[Temporary14.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary14.atomicKind, NTI570425391)); }
          var Temporary15 = b_p1;
          if (ConstSet141[Temporary15.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary15.atomicKind, NTI570425391)); }
          result_570426846 = eqStrings(Temporary14.str, Temporary15.str);
          break;
        case 2:
          var Temporary16 = a_p0;
          if (ConstSet142[Temporary16.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolean\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary16.atomicKind, NTI570425391)); }
          var Temporary17 = b_p1;
          if (ConstSet143[Temporary17.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolean\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary17.atomicKind, NTI570425391)); }
          result_570426846 = (Temporary16.boolean == Temporary17.boolean);
          break;
        }
        break;
      case 6:
        var Temporary18 = a_p0;
        if (ConstSet144[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectTypeFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI570425392)); }
        var Temporary19 = b_p1;
        if (ConstSet145[Temporary19.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectTypeFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary19.kind, NTI570425392)); }
        result_570426846 = HEX3DHEX3D__lisp_u2039(Temporary18.objectTypeFields, Temporary19.objectTypeFields);
        break;
      case 8:
        var Temporary20 = a_p0;
        if (ConstSet146[Temporary20.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary20.kind, NTI570425392)); }
        var Temporary21 = b_p1;
        if (ConstSet147[Temporary21.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary21.kind, NTI570425392)); }
        result_570426846 = HEX3DHEX3D__lisp_u2039(Temporary20.objectFields, Temporary21.objectFields);
        break;
      case 7:
        var Temporary22 = a_p0;
        if (ConstSet148[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'enumTypeValues\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI570425392)); }
        var Temporary23 = b_p1;
        if (ConstSet149[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'enumTypeValues\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI570425392)); }
        result_570426846 = HEX3DHEX3D__lisp_u1535(Temporary22.enumTypeValues, Temporary23.enumTypeValues);
        break;
      case 12:
        var Temporary25 = a_p0;
        if (ConstSet150[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableKeyType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI570425392)); }
        var Temporary26 = b_p1;
        if (ConstSet151[Temporary26.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableKeyType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary26.kind, NTI570425392)); }
        if (!HEX3DHEX3D__lisp_u1499(Temporary25.tableKeyType, Temporary26.tableKeyType)) Temporary24 = false; else {          var Temporary27 = a_p0;
          if (ConstSet152[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI570425392)); }
          var Temporary28 = b_p1;
          if (ConstSet153[Temporary28.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary28.kind, NTI570425392)); }
          Temporary24 = HEX3DHEX3D__lisp_u1499(Temporary27.tableValueType, Temporary28.tableValueType);        }        result_570426846 = Temporary24;
        break;
      case 13:
        var Temporary29 = a_p0;
        if (ConstSet154[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arrayValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI570425392)); }
        var Temporary30 = b_p1;
        if (ConstSet155[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arrayValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI570425392)); }
        result_570426846 = HEX3DHEX3D__lisp_u1499(Temporary29.arrayValueType, Temporary30.arrayValueType);
        break;
      case 14:
      case 15:
      case 16:
        result_570426846 = true;
        break;
      case 17:
      case 18:
      case 11:
        result_570426846 = (a_p0 == b_p1);
        break;
      }
    }
    }}}

  return result_570426846;

}

function process__lisp_u6185(n_p0, result_p1, result_p1_Idx) {
      var Temporary4;
      var Temporary5;
        var Temporary6;
      var Temporary7;
        var Temporary9;
        var Temporary14;
      var Temporary18;
        var Temporary20;
      var Temporary24;
      var Temporary25;
      var Temporary26;
      var Temporary27;
      var Temporary28;
      var Temporary29;
      var Temporary30;
        var Temporary32;
      var Temporary35;
        var Temporary36;
        var Temporary37;
        var Temporary38;
        var Temporary40;
        var Temporary45;
        var Temporary50;
        var Temporary55;

    if (!(!((n_p0 == null)))) {
    failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,54,55,48,44,32,53,41,32,96,110,111,116,32,105,115,78,105,108,40,110,41,96,32]);
    }
    
    Label1: {
      var t_570431543 = 0;
      var i_570442256 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570442256 <= 1)) break Label3;
            if ((n_p0.tags[chckRange(i_570442256, 0, 1)] != undefined)) {
            t_570431543 = chckRange(i_570442256, 0, 1);
            result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], ([64]).concat(reprEnum(t_570431543, NTI570425385),[32]));;
            }
            
            i_570442256 += 1;
          }
      };
    };
    switch (n_p0.kind) {
    case 19:
      var Temporary4 = n_p0;
      if (ConstSet156[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'member\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI570425392)); }
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], Temporary4.member);;
      break;
    case 17:
      var Temporary5 = n_p0;
      if (ConstSet157[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'className\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI570425392)); }
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], ([99,108,97,115,115,32]).concat(Temporary5.className));;
        var Temporary6 = n_p0;
        if (ConstSet158[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classParent\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI570425392)); }
      if (!(HEX3DHEX3D__lisp_u1499(Temporary6.classParent, null))) {
      var Temporary7 = n_p0;
      if (ConstSet159[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classParent\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI570425392)); }
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], ([32,58,32]).concat(HEX24__lisp_u6182(Temporary7.classParent)));;
      }
      
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [32,123]);;
      Label8: {
        var k_570431551 = [];
        var v_570431552 = null;
        var colontmp__570442259 = ({data: [], counter: 0});
        var Temporary9 = n_p0;
        if (ConstSet160[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI570425392)); }
        colontmp__570442259 = nimCopy(colontmp__570442259, Temporary9.classFields, NTI570425415);
        var L_570442264 = len__lisp_u498(colontmp__570442259);
        Label10: {
          var h_570442266 = 0;
          var colontmp__570442267 = 0;
          colontmp__570442267 = (colontmp__570442259.data).length - 1;
          var res_570442268 = 0;
          Label11: {
              Label12: while (true) {
              if (!(res_570442268 <= colontmp__570442267)) break Label12;
                h_570442266 = res_570442268;
                if (isFilled__pureZcollectionsZtables_u31(colontmp__570442259.data[chckIndx(h_570442266, 0, (colontmp__570442259.data).length - 1)].Field0)) {
                k_570431551 = colontmp__570442259.data[chckIndx(h_570442266, 0, (colontmp__570442259.data).length - 1)].Field1;
                v_570431552 = colontmp__570442259.data[chckIndx(h_570442266, 0, (colontmp__570442259.data).length - 1)].Field2;
                result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], (k_570431551).concat([58,32],HEX24__lisp_u6182(v_570431552),[44,32]));;
                if (!((len__lisp_u498(colontmp__570442259) == L_570442264))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_570442268 = addInt(res_570442268, 1);
              }
          };
        };
      };
      Label13: {
        var k_570431557 = [];
        var v_570431558 = null;
        var colontmp__570442271 = ({data: [], counter: 0});
        var Temporary14 = n_p0;
        if (ConstSet161[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classMethods\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI570425392)); }
        colontmp__570442271 = nimCopy(colontmp__570442271, Temporary14.classMethods, NTI570425415);
        var L_570442272 = len__lisp_u498(colontmp__570442271);
        Label15: {
          var h_570442274 = 0;
          var colontmp__570442275 = 0;
          colontmp__570442275 = (colontmp__570442271.data).length - 1;
          var res_570442276 = 0;
          Label16: {
              Label17: while (true) {
              if (!(res_570442276 <= colontmp__570442275)) break Label17;
                h_570442274 = res_570442276;
                if (isFilled__pureZcollectionsZtables_u31(colontmp__570442271.data[chckIndx(h_570442274, 0, (colontmp__570442271.data).length - 1)].Field0)) {
                k_570431557 = colontmp__570442271.data[chckIndx(h_570442274, 0, (colontmp__570442271.data).length - 1)].Field1;
                v_570431558 = colontmp__570442271.data[chckIndx(h_570442274, 0, (colontmp__570442271.data).length - 1)].Field2;
                result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], (k_570431557).concat([58,32],HEX24__lisp_u6182(v_570431558),[44,32]));;
                if (!((len__lisp_u498(colontmp__570442271) == L_570442272))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_570442276 = addInt(res_570442276, 1);
              }
          };
        };
      };
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [125]);;
      break;
    case 18:
      var Temporary18 = n_p0;
      if (ConstSet162[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI570425392)); }
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], ([99,108,97,115,115,32]).concat(HEX24__lisp_u6182(Temporary18.classObjType),[32,123]));;
      Label19: {
        var k_570431563 = [];
        var v_570431564 = null;
        var colontmp__570442279 = ({data: [], counter: 0});
        var Temporary20 = n_p0;
        if (ConstSet163[Temporary20.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary20.kind, NTI570425392)); }
        colontmp__570442279 = nimCopy(colontmp__570442279, Temporary20.classObjFields, NTI570425415);
        var L_570442280 = len__lisp_u498(colontmp__570442279);
        Label21: {
          var h_570442282 = 0;
          var colontmp__570442283 = 0;
          colontmp__570442283 = (colontmp__570442279.data).length - 1;
          var res_570442284 = 0;
          Label22: {
              Label23: while (true) {
              if (!(res_570442284 <= colontmp__570442283)) break Label23;
                h_570442282 = res_570442284;
                if (isFilled__pureZcollectionsZtables_u31(colontmp__570442279.data[chckIndx(h_570442282, 0, (colontmp__570442279.data).length - 1)].Field0)) {
                k_570431563 = colontmp__570442279.data[chckIndx(h_570442282, 0, (colontmp__570442279.data).length - 1)].Field1;
                v_570431564 = colontmp__570442279.data[chckIndx(h_570442282, 0, (colontmp__570442279.data).length - 1)].Field2;
                result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], (k_570431563).concat([58,32],HEX24__lisp_u6182(v_570431564),[44,32]));;
                if (!((len__lisp_u498(colontmp__570442279) == L_570442280))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_570442284 = addInt(res_570442284, 1);
              }
          };
        };
      };
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [125]);;
      break;
    case 15:
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [118,111,105,100,45,116,121,112,101]);;
      break;
    case 16:
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [123,118,111,105,100,125]);;
      break;
    case 5:
      var Temporary24 = n_p0;
      if (ConstSet164[Temporary24.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary24.kind, NTI570425392)); }
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], reprEnum(Temporary24.atomicType, NTI570425391));;
      break;
    case 0:
      var Temporary25 = n_p0;
      if (ConstSet165[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI570425392)); }
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], Temporary25.sym);;
      break;
    case 3:
      var Temporary26 = n_p0;
      if (ConstSet166[Temporary26.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'keyword\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary26.kind, NTI570425392)); }
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], reprEnum(Temporary26.keyword, NTI570425384));;
      break;
    case 10:
      var Temporary27 = n_p0;
      if (ConstSet167[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'dot\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI570425392)); }
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], Temporary27.dot);;
      break;
    case 14:
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [97,110,121,45,116,121,112,101]);;
      break;
    case 12:
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [116,97,98,108,101,32,123]);;
      var Temporary28 = n_p0;
      if (ConstSet168[Temporary28.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableKeyType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary28.kind, NTI570425392)); }
      process__lisp_u6185(Temporary28.tableKeyType, result_p1, result_p1_Idx);
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [44,32]);;
      var Temporary29 = n_p0;
      if (ConstSet169[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI570425392)); }
      process__lisp_u6185(Temporary29.tableValueType, result_p1, result_p1_Idx);
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [125]);;
      break;
    case 13:
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [97,114,114,97,121,32,123]);;
      var Temporary30 = n_p0;
      if (ConstSet170[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arrayValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI570425392)); }
      process__lisp_u6185(Temporary30.arrayValueType, result_p1, result_p1_Idx);
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [125]);;
      break;
    case 7:
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [60,101,110,117,109,62,32,123]);;
      Label31: {
        var v_570431580 = null;
        var colontmp__570442287 = [];
        var Temporary32 = n_p0;
        if (ConstSet171[Temporary32.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'enumTypeValues\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary32.kind, NTI570425392)); }
        colontmp__570442287 = Temporary32.enumTypeValues;
        var i_570442288 = 0;
        var L_570442289 = (colontmp__570442287).length;
        Label33: {
            Label34: while (true) {
            if (!(i_570442288 < L_570442289)) break Label34;
              v_570431580 = colontmp__570442287[chckIndx(i_570442288, 0, (colontmp__570442287).length - 1)];
              result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], (HEX24__lisp_u6182(v_570431580)).concat([44,32]));;
              i_570442288 += 1;
              if (!(((colontmp__570442287).length == L_570442289))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [125]);;
      break;
    case 9:
      var Temporary35 = n_p0;
      if (ConstSet172[Temporary35.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary35.kind, NTI570425392)); }
      switch (Temporary35.atomicKind) {
      case 0:
        var Temporary36 = n_p0;
        if (ConstSet173[Temporary36.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary36.atomicKind, NTI570425391)); }
        result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], HEX24__system_u3165(Temporary36.num));;
        break;
      case 1:
        var Temporary37 = n_p0;
        if (ConstSet174[Temporary37.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary37.atomicKind, NTI570425391)); }
        result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], Temporary37.str);;
        break;
      case 2:
        var Temporary38 = n_p0;
        if (ConstSet175[Temporary38.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolean\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary38.atomicKind, NTI570425391)); }
        result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], nimBoolToStr(Temporary38.boolean));;
        break;
      }
      break;
    case 8:
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [60,111,98,106,101,99,116,62,32,123]);;
      Label39: {
        var k_570431588 = [];
        var v_570431589 = null;
        var colontmp__570442292 = ({data: [], counter: 0});
        var Temporary40 = n_p0;
        if (ConstSet176[Temporary40.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary40.kind, NTI570425392)); }
        colontmp__570442292 = nimCopy(colontmp__570442292, Temporary40.objectFields, NTI570425415);
        var L_570442293 = len__lisp_u498(colontmp__570442292);
        Label41: {
          var h_570442295 = 0;
          var colontmp__570442296 = 0;
          colontmp__570442296 = (colontmp__570442292.data).length - 1;
          var res_570442297 = 0;
          Label42: {
              Label43: while (true) {
              if (!(res_570442297 <= colontmp__570442296)) break Label43;
                h_570442295 = res_570442297;
                if (isFilled__pureZcollectionsZtables_u31(colontmp__570442292.data[chckIndx(h_570442295, 0, (colontmp__570442292.data).length - 1)].Field0)) {
                k_570431588 = colontmp__570442292.data[chckIndx(h_570442295, 0, (colontmp__570442292.data).length - 1)].Field1;
                v_570431589 = colontmp__570442292.data[chckIndx(h_570442295, 0, (colontmp__570442292.data).length - 1)].Field2;
                result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], (k_570431588).concat([58,32],HEX24__lisp_u6182(v_570431589),[44,32]));;
                if (!((len__lisp_u498(colontmp__570442292) == L_570442293))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_570442297 = addInt(res_570442297, 1);
              }
          };
        };
      };
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [125]);;
      break;
    case 6:
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [60,116,121,112,101,62,32,123]);;
      Label44: {
        var k_570431594 = [];
        var v_570431595 = null;
        var colontmp__570442300 = ({data: [], counter: 0});
        var Temporary45 = n_p0;
        if (ConstSet177[Temporary45.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectTypeFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary45.kind, NTI570425392)); }
        colontmp__570442300 = nimCopy(colontmp__570442300, Temporary45.objectTypeFields, NTI570425415);
        var L_570442301 = len__lisp_u498(colontmp__570442300);
        Label46: {
          var h_570442303 = 0;
          var colontmp__570442304 = 0;
          colontmp__570442304 = (colontmp__570442300.data).length - 1;
          var res_570442305 = 0;
          Label47: {
              Label48: while (true) {
              if (!(res_570442305 <= colontmp__570442304)) break Label48;
                h_570442303 = res_570442305;
                if (isFilled__pureZcollectionsZtables_u31(colontmp__570442300.data[chckIndx(h_570442303, 0, (colontmp__570442300.data).length - 1)].Field0)) {
                k_570431594 = colontmp__570442300.data[chckIndx(h_570442303, 0, (colontmp__570442300.data).length - 1)].Field1;
                v_570431595 = colontmp__570442300.data[chckIndx(h_570442303, 0, (colontmp__570442300.data).length - 1)].Field2;
                result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], (k_570431594).concat([58,32],HEX24__lisp_u6182(v_570431595),[44,32]));;
                if (!((len__lisp_u498(colontmp__570442300) == L_570442301))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_570442305 = addInt(res_570442305, 1);
              }
          };
        };
      };
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [125]);;
      break;
    case 4:
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [123]);;
      Label49: {
        var k_570431600 = null;
        var v_570431601 = null;
        var colontmp__570442308 = ({data: [], counter: 0});
        var Temporary50 = n_p0;
        if (ConstSet178[Temporary50.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableVal\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary50.kind, NTI570425392)); }
        colontmp__570442308 = nimCopy(colontmp__570442308, Temporary50.tableVal, NTI570425445);
        var L_570442313 = len__lisp_u1038(colontmp__570442308);
        Label51: {
          var h_570442315 = 0;
          var colontmp__570442316 = 0;
          colontmp__570442316 = (colontmp__570442308.data).length - 1;
          var res_570442317 = 0;
          Label52: {
              Label53: while (true) {
              if (!(res_570442317 <= colontmp__570442316)) break Label53;
                h_570442315 = res_570442317;
                if (isFilled__pureZcollectionsZtables_u31(colontmp__570442308.data[chckIndx(h_570442315, 0, (colontmp__570442308.data).length - 1)].Field0)) {
                k_570431600 = colontmp__570442308.data[chckIndx(h_570442315, 0, (colontmp__570442308.data).length - 1)].Field1;
                v_570431601 = colontmp__570442308.data[chckIndx(h_570442315, 0, (colontmp__570442308.data).length - 1)].Field2;
                process__lisp_u6185(k_570431600, result_p1, result_p1_Idx);
                result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [58,32]);;
                process__lisp_u6185(v_570431601, result_p1, result_p1_Idx);
                result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [44,32]);;
                if (!((len__lisp_u1038(colontmp__570442308) == L_570442313))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_570442317 = addInt(res_570442317, 1);
              }
          };
        };
      };
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [125]);;
      break;
    case 1:
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [40]);;
      Label54: {
        var i_570431642 = 0;
        var k_570431643 = null;
        var colontmp__570442320 = [];
        var Temporary55 = n_p0;
        if (ConstSet179[Temporary55.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary55.kind, NTI570425392)); }
        colontmp__570442320 = Temporary55.kids;
        var i_570442322 = 0;
        var L_570442323 = (colontmp__570442320).length;
        Label56: {
            Label57: while (true) {
            if (!(i_570442322 < L_570442323)) break Label57;
              i_570431642 = i_570442322;
              k_570431643 = colontmp__570442320[chckIndx(i_570442322, 0, (colontmp__570442320).length - 1)];
              if ((0 < i_570431642)) {
              result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [32]);;
              }
              
              process__lisp_u6185(k_570431643, result_p1, result_p1_Idx);
              i_570442322 += 1;
              if (!(((colontmp__570442320).length == L_570442323))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(187, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [41]);;
      break;
    case 2:
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [60,102,117,110,99,116,105,111,110,62]);;
      break;
    case 11:
      result_p1[result_p1_Idx].push.apply(result_p1[result_p1_Idx], [60,116,101,109,112,108,97,116,101,62]);;
      break;
    }

  
}

function HEX24__lisp_u6182(n_p0) {
  var result_570431528 = [[]];

    if (!(!(HEX3DHEX3D__lisp_u1499(n_p0, null)))) {
    failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,55,54,57,44,32,51,41,32,96,10,110,111,116,32,40,110,32,61,61,32,110,105,108,41,96,32]);
    }
    
    process__lisp_u6185(n_p0, result_570431528, 0);

  return result_570431528[0];

}

function nsuJoinSep(a_p0, sep_p1) {
  var result_771753517 = [];

    if ((0 < (a_p0).length)) {
    var L_771753524 = mulInt((sep_p1).length, subInt((a_p0).length, 1));
    Label1: {
      var i_771753532 = 0;
      var colontmp__570442403 = 0;
      colontmp__570442403 = (a_p0).length - 1;
      var res_570442404 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570442404 <= colontmp__570442403)) break Label3;
            i_771753532 = res_570442404;
            L_771753524 = addInt(L_771753524, (a_p0[chckIndx(i_771753532, 0, (a_p0).length - 1)]).length);
            res_570442404 = addInt(res_570442404, 1);
          }
      };
    };
    result_771753517 = nimCopy(null, mnewString(0), NTI33554449);
    result_771753517.push.apply(result_771753517, a_p0[chckIndx(0, 0, (a_p0).length - 1)]);;
    Label4: {
      var i_771753545 = 0;
      var colontmp__570442407 = 0;
      colontmp__570442407 = (a_p0).length - 1;
      var res_570442408 = 1;
      Label5: {
          Label6: while (true) {
          if (!(res_570442408 <= colontmp__570442407)) break Label6;
            i_771753545 = res_570442408;
            result_771753517.push.apply(result_771753517, sep_p1);;
            result_771753517.push.apply(result_771753517, a_p0[chckIndx(i_771753545, 0, (a_p0).length - 1)]);;
            res_570442408 = addInt(res_570442408, 1);
          }
      };
    };
    }
    else {
      result_771753517 = nimCopy(null, [], NTI33554449);
    }
    

  return result_771753517;

}

function HEX24__lisp_u6305(s_p0) {
  var result_570431651 = [];

    result_570431651.push.apply(result_570431651, ([60]).concat(reprEnum(s_p0.kind, NTI570425394),[62,32,91]));;
    var resultHEX60gensym213_570431868 = [];
    Label1: {
      var xHEX60gensym213_570431869 = [];
      var L_570442396 = len__lisp_u498(s_p0.symbols);
      Label2: {
        var h_570442398 = 0;
        var colontmp__570442399 = 0;
        colontmp__570442399 = (s_p0.symbols.data).length - 1;
        var res_570442400 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_570442400 <= colontmp__570442399)) break Label4;
              h_570442398 = res_570442400;
              if (isFilled__pureZcollectionsZtables_u31(s_p0.symbols.data[chckIndx(h_570442398, 0, (s_p0.symbols.data).length - 1)].Field0)) {
              xHEX60gensym213_570431869 = s_p0.symbols.data[chckIndx(h_570442398, 0, (s_p0.symbols.data).length - 1)]["Field1"];
              var Temporary5 = nimCopy(null, xHEX60gensym213_570431869, NTI33554449);
              resultHEX60gensym213_570431868.push(Temporary5);;
              if (!((len__lisp_u498(s_p0.symbols) == L_570442396))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(752, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_570442400 = addInt(res_570442400, 1);
            }
        };
      };
    };
    result_570431651.push.apply(result_570431651, nsuJoinSep(resultHEX60gensym213_570431868, [44,32]));;
    result_570431651.push.apply(result_570431651, [93]);;

  return result_570431651;

}

function addQuoted__lisp_u13766(s_p0, s_p0_Idx, x_p1) {
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], HEX24__lisp_u6305(x_p1));;

  
}

function collectionToString__lisp_u13727(x_p0, prefix_p1, separator_p2, suffix_p3) {
  var result_570439077 = [[]];

    result_570439077[0] = nimCopy(null, prefix_p1, NTI33554449);
    var firstElement_570439078 = true;
    Label1: {
      var value_570439100 = null;
      var i_570442392 = 0;
      var L_570442393 = (x_p0).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570442392 < L_570442393)) break Label3;
            value_570439100 = x_p0[i_570442392];
            if (firstElement_570439078) {
            firstElement_570439078 = false;
            }
            else {
            result_570439077[0].push.apply(result_570439077[0], separator_p2);;
            }
            
            if ((value_570439100 == null)) {
            result_570439077[0].push.apply(result_570439077[0], [110,105,108]);;
            }
            else {
            addQuoted__lisp_u13766(result_570439077, 0, value_570439100);
            }
            
            i_570442392 += 1;
            if (!(((x_p0).length == L_570442393))) {
            failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_570439077[0].push.apply(result_570439077[0], suffix_p3);;

  return result_570439077[0];

}

function HEX24__lisp_u13723(x_p0) {
  var result_570439070 = [];

    result_570439070 = nimCopy(null, collectionToString__lisp_u13727(x_p0, [64,91], [44,32], [93]), NTI33554449);

  return result_570439070;

}

function HEX5BHEX5D__lisp_u9400(s_p0, x_p1) {
  var result_570434750 = [];

    var a_570434752 = x_p1.a;
    var L_570434757 = addInt(subInt(subInt((s_p0).length, x_p1.b), a_570434752), 1);
    result_570434750 = new Array(chckRange(L_570434757, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_570434757, 0, 2147483647) ; ++i) { result_570434750[i] = null; }    Label1: {
      var i_570434766 = 0;
      var i_570442411 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570442411 < L_570434757)) break Label3;
            i_570434766 = i_570442411;
            result_570434750[chckIndx(i_570434766, 0, (result_570434750).length - 1)] = s_p0[chckIndx(addInt(i_570434766, a_570434752), 0, (s_p0).length - 1)];
            i_570442411 = addInt(i_570442411, 1);
          }
      };
    };

  return result_570434750;

}

function addQuoted__pureZstrutils_u1413(s_p0, s_p0_Idx, x_p1) {
    addInt__stdZprivateZdigitsutils_u241(s_p0, s_p0_Idx, x_p1);

  
}

function addQuoted__lisp_u6659(s_p0, s_p0_Idx, x_p1) {
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], reprEnum(x_p1, NTI570425385));;

  
}

function collectionToString__lisp_u6644(x_p0, prefix_p1, separator_p2, suffix_p3) {
  var result_570431994 = [[]];

    result_570431994[0] = nimCopy(null, prefix_p1, NTI33554449);
    var firstElement_570431995 = true;
    Label1: {
      var value_570431999 = 0;
      var i_570442424 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570442424 <= 1)) break Label3;
            if ((x_p0[i_570442424] != undefined)) {
            value_570431999 = i_570442424;
            if (firstElement_570431995) {
            firstElement_570431995 = false;
            }
            else {
            result_570431994[0].push.apply(result_570431994[0], separator_p2);;
            }
            
            addQuoted__lisp_u6659(result_570431994, 0, value_570431999);
            }
            
            i_570442424 += 1;
          }
      };
    };
    result_570431994[0].push.apply(result_570431994[0], suffix_p3);;

  return result_570431994[0];

}

function HEX24__lisp_u6640(x_p0) {
  var result_570431987 = [];

    result_570431987 = nimCopy(null, collectionToString__lisp_u6644(x_p0, [123], [44,32], [125]), NTI33554449);

  return result_570431987;

}

function addQuoted__lisp_u6634(s_p0, s_p0_Idx, x_p1) {
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], HEX24__lisp_u6640(x_p1));;

  
}

function addQuoted__lisp_u6682(s_p0, s_p0_Idx, x_p1) {
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], HEX24__lisp_u6182(x_p1));;

  
}

function addQuoted__lisp_u6699(s_p0, s_p0_Idx, x_p1) {
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], reprEnum(x_p1, NTI570425392));;

  
}

function addEscapedChar__system_u3640(s_p0, s_p0_Idx, c_p1) {
    switch (c_p1) {
    case 7:
      s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], [92,97]);;
      break;
    case 8:
      s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], [92,98]);;
      break;
    case 9:
      s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], [92,116]);;
      break;
    case 10:
      s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], [92,110]);;
      break;
    case 11:
      s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], [92,118]);;
      break;
    case 12:
      s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], [92,102]);;
      break;
    case 13:
      s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], [92,114]);;
      break;
    case 27:
      s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], [92,101]);;
      break;
    case 92:
      s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], [92,92]);;
      break;
    case 39:
      s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], [92,39]);;
      break;
    case 34:
      s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], [92,34]);;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      addChar(s_p0[s_p0_Idx], c_p1);;
      break;
    default: 
      s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], [92,120]);;
      var n_33558084 = c_p1;
      addChar(s_p0[s_p0_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx(((n_33558084 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      addChar(s_p0[s_p0_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_33558084 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      break;
    }

  
}

function addQuoted__lisp_u6716(s_p0, s_p0_Idx, x_p1) {
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], [34]);;
    Label1: {
      var c_570432064 = 0;
      var i_570442428 = 0;
      var L_570442429 = (x_p1).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570442428 < L_570442429)) break Label3;
            c_570432064 = x_p1[chckIndx(i_570442428, 0, (x_p1).length - 1)];
            if ((c_570432064 <= 127)) {
            addEscapedChar__system_u3640(s_p0, s_p0_Idx, c_570432064);
            }
            else {
            addChar(s_p0[s_p0_Idx], c_570432064);;
            }
            
            i_570442428 += 1;
            if (!(((x_p1).length == L_570442429))) {
            failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(272, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], [34]);;

  
}

function HEX24__lisp_u6904(t_p0) {
  var result_570432252 = [[]];

    if ((len__lisp_u498(t_p0) == 0)) {
    result_570432252[0] = nimCopy(null, [123,58,125], NTI33554449);
    }
    else {
      result_570432252[0] = nimCopy(null, [123], NTI33554449);
      Label1: {
        var key_570432301 = [];
        var val_570432302 = null;
        var L_570442432 = len__lisp_u498(t_p0);
        Label2: {
          var h_570442434 = 0;
          var colontmp__570442435 = 0;
          colontmp__570442435 = (t_p0.data).length - 1;
          var res_570442436 = 0;
          Label3: {
              Label4: while (true) {
              if (!(res_570442436 <= colontmp__570442435)) break Label4;
                h_570442434 = res_570442436;
                if (isFilled__pureZcollectionsZtables_u31(t_p0.data[chckIndx(h_570442434, 0, (t_p0.data).length - 1)].Field0)) {
                key_570432301 = t_p0.data[chckIndx(h_570442434, 0, (t_p0.data).length - 1)].Field1;
                val_570432302 = t_p0.data[chckIndx(h_570442434, 0, (t_p0.data).length - 1)].Field2;
                if ((1 < (result_570432252[0]).length)) {
                result_570432252[0].push.apply(result_570432252[0], [44,32]);;
                }
                
                addQuoted__lisp_u6716(result_570432252, 0, key_570432301);
                result_570432252[0].push.apply(result_570432252[0], [58,32]);;
                addQuoted__lisp_u6682(result_570432252, 0, val_570432302);
                if (!((len__lisp_u498(t_p0) == L_570442432))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_570442436 = addInt(res_570442436, 1);
              }
          };
        };
      };
      result_570432252[0].push.apply(result_570432252[0], [125]);;
    }
    

  return result_570432252[0];

}

function addQuoted__lisp_u6860(s_p0, s_p0_Idx, x_p1) {
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], HEX24__lisp_u6904(x_p1));;

  
}

function addQuoted__lisp_u7170(s_p0, s_p0_Idx, x_p1) {
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], reprEnum(x_p1, NTI570425384));;

  
}

function addQuoted__lisp_u7190(s_p0, s_p0_Idx, x_p1) {
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], reprEnum(x_p1, NTI570425391));;

  
}

function addQuoted__lisp_u7210(s_p0, s_p0_Idx, x_p1) {
    addFloat__system_u3169(s_p0, s_p0_Idx, x_p1);

  
}

function addQuoted__lisp_u7240(s_p0, s_p0_Idx, x_p1) {
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], nimBoolToStr(x_p1));;

  
}

function collectionToString__lisp_u7320(x_p0, prefix_p1, separator_p2, suffix_p3) {
  var result_570432670 = [[]];

    result_570432670[0] = nimCopy(null, prefix_p1, NTI33554449);
    var firstElement_570432671 = true;
    Label1: {
      var value_570432675 = null;
      var i_570442439 = 0;
      var L_570442440 = (x_p0).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570442439 < L_570442440)) break Label3;
            value_570432675 = x_p0[i_570442439];
            if (firstElement_570432671) {
            firstElement_570432671 = false;
            }
            else {
            result_570432670[0].push.apply(result_570432670[0], separator_p2);;
            }
            
            if ((value_570432675 == null)) {
            result_570432670[0].push.apply(result_570432670[0], [110,105,108]);;
            }
            else {
            addQuoted__lisp_u6682(result_570432670, 0, value_570432675);
            }
            
            i_570442439 += 1;
            if (!(((x_p0).length == L_570442440))) {
            failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_570432670[0].push.apply(result_570432670[0], suffix_p3);;

  return result_570432670[0];

}

function HEX24__lisp_u7316(x_p0) {
  var result_570432663 = [];

    result_570432663 = nimCopy(null, collectionToString__lisp_u7320(x_p0, [64,91], [44,32], [93]), NTI33554449);

  return result_570432663;

}

function addQuoted__lisp_u7310(s_p0, s_p0_Idx, x_p1) {
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], HEX24__lisp_u7316(x_p1));;

  
}

function HEX24__lisp_u7516(t_p0) {
  var result_570432864 = [[]];

    if ((len__lisp_u1038(t_p0) == 0)) {
    result_570432864[0] = nimCopy(null, [123,58,125], NTI33554449);
    }
    else {
      result_570432864[0] = nimCopy(null, [123], NTI33554449);
      Label1: {
        var key_570432913 = null;
        var val_570432914 = null;
        var L_570442443 = len__lisp_u1038(t_p0);
        Label2: {
          var h_570442445 = 0;
          var colontmp__570442446 = 0;
          colontmp__570442446 = (t_p0.data).length - 1;
          var res_570442447 = 0;
          Label3: {
              Label4: while (true) {
              if (!(res_570442447 <= colontmp__570442446)) break Label4;
                h_570442445 = res_570442447;
                if (isFilled__pureZcollectionsZtables_u31(t_p0.data[chckIndx(h_570442445, 0, (t_p0.data).length - 1)].Field0)) {
                key_570432913 = t_p0.data[chckIndx(h_570442445, 0, (t_p0.data).length - 1)].Field1;
                val_570432914 = t_p0.data[chckIndx(h_570442445, 0, (t_p0.data).length - 1)].Field2;
                if ((1 < (result_570432864[0]).length)) {
                result_570432864[0].push.apply(result_570432864[0], [44,32]);;
                }
                
                addQuoted__lisp_u6682(result_570432864, 0, key_570432913);
                result_570432864[0].push.apply(result_570432864[0], [58,32]);;
                addQuoted__lisp_u6682(result_570432864, 0, val_570432914);
                if (!((len__lisp_u1038(t_p0) == L_570442443))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_570442447 = addInt(res_570442447, 1);
              }
          };
        };
      };
      result_570432864[0].push.apply(result_570432864[0], [125]);;
    }
    

  return result_570432864[0];

}

function addQuoted__lisp_u7472(s_p0, s_p0_Idx, x_p1) {
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], HEX24__lisp_u7516(x_p1));;

  
}

function collectionToString__lisp_u7656(x_p0, prefix_p1, separator_p2, suffix_p3) {
  var result_570433006 = [[]];

    result_570433006[0] = nimCopy(null, prefix_p1, NTI33554449);
    var firstElement_570433007 = true;
    Label1: {
      var value_570433029 = [];
      var i_570442451 = 0;
      var L_570442452 = (x_p0).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570442451 < L_570442452)) break Label3;
            value_570433029 = x_p0[i_570442451];
            if (firstElement_570433007) {
            firstElement_570433007 = false;
            }
            else {
            result_570433006[0].push.apply(result_570433006[0], separator_p2);;
            }
            
            addQuoted__lisp_u6716(result_570433006, 0, value_570433029);
            i_570442451 += 1;
            if (!(((x_p0).length == L_570442452))) {
            failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_570433006[0].push.apply(result_570433006[0], suffix_p3);;

  return result_570433006[0];

}

function HEX24__lisp_u7652(x_p0) {
  var result_570432999 = [];

    result_570432999 = nimCopy(null, collectionToString__lisp_u7656(x_p0, [64,91], [44,32], [93]), NTI33554449);

  return result_570432999;

}

function addQuoted__lisp_u7646(s_p0, s_p0_Idx, x_p1) {
    s_p0[s_p0_Idx].push.apply(s_p0[s_p0_Idx], HEX24__lisp_u7652(x_p1));;

  
}

function HEX24__lisp_u6568(x_p0) {
      var Temporary1;
      var Temporary2;
        var Temporary3;
        var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary7;
        var Temporary8;
      var Temporary9;
      var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
      var Temporary14;
        var Temporary15;
        var Temporary16;
        var Temporary17;
      var Temporary18;
      var Temporary19;
      var Temporary20;
        var Temporary21;
        var Temporary22;
      var Temporary23;
        var Temporary24;
        var Temporary25;
      var Temporary26;
      var Temporary27;
        var Temporary28;
        var Temporary29;
        var Temporary30;
        var Temporary31;
        var Temporary32;
        var Temporary33;
      var Temporary34;
        var Temporary35;
        var Temporary36;
      var Temporary37;
        var Temporary38;
        var Temporary39;
      var Temporary40;
      var Temporary41;
        var Temporary42;
        var Temporary43;
        var Temporary44;
        var Temporary45;
        var Temporary46;
        var Temporary47;

  var result_570431915 = [[]];

    result_570431915[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym219_570431926 = 0;
    if (true) {
    if ((0 < countHEX60gensym219_570431926)) {
    result_570431915[0].push.apply(result_570431915[0], [44,32]);;
    }
    
    result_570431915[0].push.apply(result_570431915[0], [108,105,110,101]);;
    result_570431915[0].push.apply(result_570431915[0], [58,32]);;
    countHEX60gensym219_570431926 += 1;
    addQuoted__pureZstrutils_u1413(result_570431915, 0, x_p0.line);
    }
    
    if (true) {
    if ((0 < countHEX60gensym219_570431926)) {
    result_570431915[0].push.apply(result_570431915[0], [44,32]);;
    }
    
    result_570431915[0].push.apply(result_570431915[0], [116,97,103,115]);;
    result_570431915[0].push.apply(result_570431915[0], [58,32]);;
    countHEX60gensym219_570431926 += 1;
    addQuoted__lisp_u6634(result_570431915, 0, x_p0.tags);
    }
    
    if (true) {
    if ((0 < countHEX60gensym219_570431926)) {
    result_570431915[0].push.apply(result_570431915[0], [44,32]);;
    }
    
    result_570431915[0].push.apply(result_570431915[0], [101,110,117,109,84,121,112,101]);;
    result_570431915[0].push.apply(result_570431915[0], [58,32]);;
    countHEX60gensym219_570431926 += 1;
    if ((x_p0.enumType == null)) {
    result_570431915[0].push.apply(result_570431915[0], [110,105,108]);;
    }
    else {
    addQuoted__lisp_u6682(result_570431915, 0, x_p0.enumType);
    }
    
    }
    
    if (true) {
    if ((0 < countHEX60gensym219_570431926)) {
    result_570431915[0].push.apply(result_570431915[0], [44,32]);;
    }
    
    result_570431915[0].push.apply(result_570431915[0], [107,105,110,100]);;
    result_570431915[0].push.apply(result_570431915[0], [58,32]);;
    countHEX60gensym219_570431926 += 1;
    addQuoted__lisp_u6699(result_570431915, 0, x_p0.kind);
    }
    
    switch (x_p0.kind) {
    case 19:
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [109,101,109,98,101,114]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary1 = x_p0;
      if (ConstSet185[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'member\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI570425392)); }
      addQuoted__lisp_u6716(result_570431915, 0, Temporary1.member);
      }
      
      break;
    case 17:
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [99,108,97,115,115,78,97,109,101]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary2 = x_p0;
      if (ConstSet186[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'className\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI570425392)); }
      addQuoted__lisp_u6716(result_570431915, 0, Temporary2.className);
      }
      
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [99,108,97,115,115,80,97,114,101,110,116]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
        var Temporary3 = x_p0;
        if (ConstSet187[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classParent\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI570425392)); }
      if ((Temporary3.classParent == null)) {
      result_570431915[0].push.apply(result_570431915[0], [110,105,108]);;
      }
      else {
        var Temporary4 = x_p0;
        if (ConstSet188[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classParent\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI570425392)); }
      addQuoted__lisp_u6682(result_570431915, 0, Temporary4.classParent);
      }
      
      }
      
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [99,108,97,115,115,70,105,101,108,100,115]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary5 = x_p0;
      if (ConstSet189[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI570425392)); }
      addQuoted__lisp_u6860(result_570431915, 0, Temporary5.classFields);
      }
      
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [99,108,97,115,115,77,101,116,104,111,100,115]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary6 = x_p0;
      if (ConstSet190[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classMethods\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI570425392)); }
      addQuoted__lisp_u6860(result_570431915, 0, Temporary6.classMethods);
      }
      
      break;
    case 18:
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [99,108,97,115,115,79,98,106,84,121,112,101]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
        var Temporary7 = x_p0;
        if (ConstSet191[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI570425392)); }
      if ((Temporary7.classObjType == null)) {
      result_570431915[0].push.apply(result_570431915[0], [110,105,108]);;
      }
      else {
        var Temporary8 = x_p0;
        if (ConstSet192[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI570425392)); }
      addQuoted__lisp_u6682(result_570431915, 0, Temporary8.classObjType);
      }
      
      }
      
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [99,108,97,115,115,79,98,106,70,105,101,108,100,115]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary9 = x_p0;
      if (ConstSet193[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI570425392)); }
      addQuoted__lisp_u6860(result_570431915, 0, Temporary9.classObjFields);
      }
      
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [99,108,97,115,115,79,98,106,77,101,116,104,111,100,115]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary10 = x_p0;
      if (ConstSet194[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjMethods\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI570425392)); }
      addQuoted__lisp_u6860(result_570431915, 0, Temporary10.classObjMethods);
      }
      
      break;
    case 14:
    case 15:
    case 16:
      break;
    case 10:
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [100,111,116]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary11 = x_p0;
      if (ConstSet195[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'dot\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI570425392)); }
      addQuoted__lisp_u6716(result_570431915, 0, Temporary11.dot);
      }
      
      break;
    case 3:
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [107,101,121,119,111,114,100]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary12 = x_p0;
      if (ConstSet196[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'keyword\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI570425392)); }
      addQuoted__lisp_u7170(result_570431915, 0, Temporary12.keyword);
      }
      
      break;
    case 9:
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [97,116,111,109,105,99,75,105,110,100]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary13 = x_p0;
      if (ConstSet197[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI570425392)); }
      addQuoted__lisp_u7190(result_570431915, 0, Temporary13.atomicKind);
      }
      
      var Temporary14 = x_p0;
      if (ConstSet198[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI570425392)); }
      switch (Temporary14.atomicKind) {
      case 0:
        if (true) {
        if ((0 < countHEX60gensym219_570431926)) {
        result_570431915[0].push.apply(result_570431915[0], [44,32]);;
        }
        
        result_570431915[0].push.apply(result_570431915[0], [110,117,109]);;
        result_570431915[0].push.apply(result_570431915[0], [58,32]);;
        countHEX60gensym219_570431926 += 1;
        var Temporary15 = x_p0;
        if (ConstSet199[Temporary15.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary15.atomicKind, NTI570425391)); }
        addQuoted__lisp_u7210(result_570431915, 0, Temporary15.num);
        }
        
        break;
      case 1:
        if (true) {
        if ((0 < countHEX60gensym219_570431926)) {
        result_570431915[0].push.apply(result_570431915[0], [44,32]);;
        }
        
        result_570431915[0].push.apply(result_570431915[0], [115,116,114]);;
        result_570431915[0].push.apply(result_570431915[0], [58,32]);;
        countHEX60gensym219_570431926 += 1;
        var Temporary16 = x_p0;
        if (ConstSet200[Temporary16.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary16.atomicKind, NTI570425391)); }
        addQuoted__lisp_u6716(result_570431915, 0, Temporary16.str);
        }
        
        break;
      case 2:
        if (true) {
        if ((0 < countHEX60gensym219_570431926)) {
        result_570431915[0].push.apply(result_570431915[0], [44,32]);;
        }
        
        result_570431915[0].push.apply(result_570431915[0], [98,111,111,108,101,97,110]);;
        result_570431915[0].push.apply(result_570431915[0], [58,32]);;
        countHEX60gensym219_570431926 += 1;
        var Temporary17 = x_p0;
        if (ConstSet201[Temporary17.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolean\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary17.atomicKind, NTI570425391)); }
        addQuoted__lisp_u7240(result_570431915, 0, Temporary17.boolean);
        }
        
        break;
      }
      break;
    case 0:
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [115,121,109]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary18 = x_p0;
      if (ConstSet202[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI570425392)); }
      addQuoted__lisp_u6716(result_570431915, 0, Temporary18.sym);
      }
      
      break;
    case 5:
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [97,116,111,109,105,99,84,121,112,101]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary19 = x_p0;
      if (ConstSet203[Temporary19.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary19.kind, NTI570425392)); }
      addQuoted__lisp_u7190(result_570431915, 0, Temporary19.atomicType);
      }
      
      break;
    case 1:
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [107,105,100,115]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary20 = x_p0;
      if (ConstSet204[Temporary20.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary20.kind, NTI570425392)); }
      addQuoted__lisp_u7310(result_570431915, 0, Temporary20.kids);
      }
      
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [108,105,115,116,84,121,112,101]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
        var Temporary21 = x_p0;
        if (ConstSet205[Temporary21.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'listType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary21.kind, NTI570425392)); }
      if ((Temporary21.listType == null)) {
      result_570431915[0].push.apply(result_570431915[0], [110,105,108]);;
      }
      else {
        var Temporary22 = x_p0;
        if (ConstSet206[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'listType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI570425392)); }
      addQuoted__lisp_u6682(result_570431915, 0, Temporary22.listType);
      }
      
      }
      
      break;
    case 4:
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [116,97,98,108,101,86,97,108]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary23 = x_p0;
      if (ConstSet207[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableVal\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI570425392)); }
      addQuoted__lisp_u7472(result_570431915, 0, Temporary23.tableVal);
      }
      
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [116,97,98,108,101,84,121,112,101]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
        var Temporary24 = x_p0;
        if (ConstSet208[Temporary24.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary24.kind, NTI570425392)); }
      if ((Temporary24.tableType == null)) {
      result_570431915[0].push.apply(result_570431915[0], [110,105,108]);;
      }
      else {
        var Temporary25 = x_p0;
        if (ConstSet209[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI570425392)); }
      addQuoted__lisp_u6682(result_570431915, 0, Temporary25.tableType);
      }
      
      }
      
      break;
    case 2:
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [102,117,110,99,80,97,114,97,109,115]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary26 = x_p0;
      if (ConstSet210[Temporary26.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcParams\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary26.kind, NTI570425392)); }
      addQuoted__lisp_u7646(result_570431915, 0, Temporary26.funcParams);
      }
      
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [102,117,110,99,84,121,112,101,115]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary27 = x_p0;
      if (ConstSet211[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcTypes\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI570425392)); }
      addQuoted__lisp_u7310(result_570431915, 0, Temporary27.funcTypes);
      }
      
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [102,117,110,99,66,111,100,121]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
        var Temporary28 = x_p0;
        if (ConstSet212[Temporary28.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcBody\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary28.kind, NTI570425392)); }
      if ((Temporary28.funcBody == null)) {
      result_570431915[0].push.apply(result_570431915[0], [110,105,108]);;
      }
      else {
        var Temporary29 = x_p0;
        if (ConstSet213[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcBody\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI570425392)); }
      addQuoted__lisp_u6682(result_570431915, 0, Temporary29.funcBody);
      }
      
      }
      
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [102,117,110,99,82,101,116,117,114,110,84,121,112,101]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
        var Temporary30 = x_p0;
        if (ConstSet214[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcReturnType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI570425392)); }
      if ((Temporary30.funcReturnType == null)) {
      result_570431915[0].push.apply(result_570431915[0], [110,105,108]);;
      }
      else {
        var Temporary31 = x_p0;
        if (ConstSet215[Temporary31.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcReturnType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary31.kind, NTI570425392)); }
      addQuoted__lisp_u6682(result_570431915, 0, Temporary31.funcReturnType);
      }
      
      }
      
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [102,117,110,99,79,98,106]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
        var Temporary32 = x_p0;
        if (ConstSet216[Temporary32.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcObj\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary32.kind, NTI570425392)); }
      if ((Temporary32.funcObj == null)) {
      result_570431915[0].push.apply(result_570431915[0], [110,105,108]);;
      }
      else {
        var Temporary33 = x_p0;
        if (ConstSet217[Temporary33.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcObj\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary33.kind, NTI570425392)); }
      addQuoted__lisp_u6682(result_570431915, 0, Temporary33.funcObj);
      }
      
      }
      
      break;
    case 11:
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [116,101,109,112,108,97,116,101,80,97,114,97,109,115]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary34 = x_p0;
      if (ConstSet218[Temporary34.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'templateParams\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary34.kind, NTI570425392)); }
      addQuoted__lisp_u7646(result_570431915, 0, Temporary34.templateParams);
      }
      
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [116,101,109,112,108,97,116,101,66,111,100,121]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
        var Temporary35 = x_p0;
        if (ConstSet219[Temporary35.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'templateBody\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary35.kind, NTI570425392)); }
      if ((Temporary35.templateBody == null)) {
      result_570431915[0].push.apply(result_570431915[0], [110,105,108]);;
      }
      else {
        var Temporary36 = x_p0;
        if (ConstSet220[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'templateBody\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI570425392)); }
      addQuoted__lisp_u6682(result_570431915, 0, Temporary36.templateBody);
      }
      
      }
      
      break;
    case 6:
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [111,98,106,101,99,116,84,121,112,101,70,105,101,108,100,115]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary37 = x_p0;
      if (ConstSet221[Temporary37.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectTypeFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary37.kind, NTI570425392)); }
      addQuoted__lisp_u6860(result_570431915, 0, Temporary37.objectTypeFields);
      }
      
      break;
    case 8:
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [111,98,106,101,99,116,84,121,112,101]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
        var Temporary38 = x_p0;
        if (ConstSet222[Temporary38.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary38.kind, NTI570425392)); }
      if ((Temporary38.objectType == null)) {
      result_570431915[0].push.apply(result_570431915[0], [110,105,108]);;
      }
      else {
        var Temporary39 = x_p0;
        if (ConstSet223[Temporary39.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary39.kind, NTI570425392)); }
      addQuoted__lisp_u6682(result_570431915, 0, Temporary39.objectType);
      }
      
      }
      
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [111,98,106,101,99,116,70,105,101,108,100,115]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary40 = x_p0;
      if (ConstSet224[Temporary40.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary40.kind, NTI570425392)); }
      addQuoted__lisp_u6860(result_570431915, 0, Temporary40.objectFields);
      }
      
      break;
    case 7:
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [101,110,117,109,84,121,112,101,86,97,108,117,101,115]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
      var Temporary41 = x_p0;
      if (ConstSet225[Temporary41.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'enumTypeValues\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary41.kind, NTI570425392)); }
      addQuoted__lisp_u7310(result_570431915, 0, Temporary41.enumTypeValues);
      }
      
      break;
    case 12:
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [116,97,98,108,101,75,101,121,84,121,112,101]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
        var Temporary42 = x_p0;
        if (ConstSet226[Temporary42.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableKeyType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary42.kind, NTI570425392)); }
      if ((Temporary42.tableKeyType == null)) {
      result_570431915[0].push.apply(result_570431915[0], [110,105,108]);;
      }
      else {
        var Temporary43 = x_p0;
        if (ConstSet227[Temporary43.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableKeyType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary43.kind, NTI570425392)); }
      addQuoted__lisp_u6682(result_570431915, 0, Temporary43.tableKeyType);
      }
      
      }
      
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [116,97,98,108,101,86,97,108,117,101,84,121,112,101]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
        var Temporary44 = x_p0;
        if (ConstSet228[Temporary44.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary44.kind, NTI570425392)); }
      if ((Temporary44.tableValueType == null)) {
      result_570431915[0].push.apply(result_570431915[0], [110,105,108]);;
      }
      else {
        var Temporary45 = x_p0;
        if (ConstSet229[Temporary45.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary45.kind, NTI570425392)); }
      addQuoted__lisp_u6682(result_570431915, 0, Temporary45.tableValueType);
      }
      
      }
      
      break;
    case 13:
      if (true) {
      if ((0 < countHEX60gensym219_570431926)) {
      result_570431915[0].push.apply(result_570431915[0], [44,32]);;
      }
      
      result_570431915[0].push.apply(result_570431915[0], [97,114,114,97,121,86,97,108,117,101,84,121,112,101]);;
      result_570431915[0].push.apply(result_570431915[0], [58,32]);;
      countHEX60gensym219_570431926 += 1;
        var Temporary46 = x_p0;
        if (ConstSet230[Temporary46.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arrayValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary46.kind, NTI570425392)); }
      if ((Temporary46.arrayValueType == null)) {
      result_570431915[0].push.apply(result_570431915[0], [110,105,108]);;
      }
      else {
        var Temporary47 = x_p0;
        if (ConstSet231[Temporary47.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arrayValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary47.kind, NTI570425392)); }
      addQuoted__lisp_u6682(result_570431915, 0, Temporary47.arrayValueType);
      }
      
      }
      
      break;
    }
    result_570431915[0].push.apply(result_570431915[0], [41]);;

  return result_570431915[0];

}

function find__lisp_u7997(a_p0, item_p1) {
  var result_570433346 = 0;

  BeforeRet: {
    result_570433346 = 0;
    Label1: {
      var i_570433350 = null;
      var i_570442455 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570442455 < (a_p0).length)) break Label3;
            i_570433350 = a_p0[chckIndx(i_570442455, 0, (a_p0).length - 1)];
            if (HEX3DHEX3D__lisp_u1499(i_570433350, item_p1)) {
            break BeforeRet;
            }
            
            result_570433346 = addInt(result_570433346, 1);
            i_570442455 += 1;
          }
      };
    };
    result_570433346 = (-1);
  };

  return result_570433346;

}

function contains__lisp_u7992(a_p0, item_p1) {
  var result_570433340 = false;

  BeforeRet: {
    result_570433340 = (0 <= find__lisp_u7997(a_p0, item_p1));
    break BeforeRet;
  };

  return result_570433340;

}

function newSeq__stdZsyncio_u559(len_p0) {
  var result_536871475 = [];

    result_536871475 = new Array(len_p0); for (var i = 0 ; i < len_p0 ; ++i) { result_536871475[i] = []; }
  return result_536871475;

}

function expectValidEnumValue__lisp_u6543(n_p0) {
      var Temporary1;
      var Temporary3;

    if (!(!(HEX3DHEX3D__lisp_u1499(n_p0.enumType, null)))) {
    var inst_570431890 = {Field0: [108,105,115,112,46,110,105,109], Field1: 797, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570431890.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p0.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,110,32,101,110,117,109,32,118,97,108,117,101]));
    }
    
    var nHEX60gensym216_570431893 = n_p0.enumType;
    var kindHEX60gensym216_570431894 = 7;
    var nHEX60gensym217_570431896 = nHEX60gensym216_570431893;
    if (!(!((nHEX60gensym217_570431896 == null)))) {
    var inst_570431901 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570431901.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym217_570431896.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
    }
    
    if (!((nHEX60gensym216_570431893.kind == kindHEX60gensym216_570431894))) {
    var inst_570433335 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433335.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym216_570431893.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym216_570431894, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym216_570431893.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym216_570431893)));
    }
    
      var Temporary1 = n_p0.enumType;
      if (ConstSet232[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'enumTypeValues\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI570425392)); }
    if (!(contains__lisp_u7992(Temporary1.enumTypeValues, n_p0))) {
    var inst_570433411 = {Field0: [108,105,115,112,46,110,105,109], Field1: 801, Field2: 3};
    Label2: {
      var Temporary3 = n_p0.enumType;
      if (ConstSet233[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'enumTypeValues\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI570425392)); }
      var HEX3Atmp_570433374 = nimCopy(null, Temporary3.enumTypeValues, NTI570425465);
      var iHEX60gensym340_570433377 = 0;
      var resultHEX60gensym340_570433401 = newSeq__stdZsyncio_u559(chckRange((HEX3Atmp_570433374).length, 0, 2147483647));
      Label4: {
        var it_570433405 = null;
        var i_570442420 = 0;
        var L_570442421 = (HEX3Atmp_570433374).length;
        Label5: {
            Label6: while (true) {
            if (!(i_570442420 < L_570442421)) break Label6;
              it_570433405 = HEX3Atmp_570433374[chckIndx(i_570442420, 0, (HEX3Atmp_570433374).length - 1)];
              resultHEX60gensym340_570433401[chckIndx(iHEX60gensym340_570433377, 0, (resultHEX60gensym340_570433401).length - 1)] = nimCopy(null, [96].concat(HEX24__lisp_u6182(it_570433405),[96]), NTI33554449);
              iHEX60gensym340_570433377 = addInt(iHEX60gensym340_570433377, 1);
              i_570442420 += 1;
              if (!(((HEX3Atmp_570433374).length == L_570442421))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433411.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p0.line),[41,58,32,73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32],HEX24__lisp_u6182(n_p0),[46,32,86,97,108,105,100,32,118,97,108,117,101,115,58,32],nsuJoinSep(resultHEX60gensym340_570433401, [44,32])));
    }
    

  
}

function expectListLen__lisp_u8301(n_p0, len_p1) {
      var Temporary1;
    var Temporary2;

    var nHEX60gensym368_570433650 = n_p0;
    var kindHEX60gensym368_570433651 = 1;
    var nHEX60gensym369_570433653 = nHEX60gensym368_570433650;
    if (!(!((nHEX60gensym369_570433653 == null)))) {
    var inst_570433658 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433658.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym369_570433653.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
    }
    
    if (!((nHEX60gensym368_570433650.kind == kindHEX60gensym368_570433651))) {
    var inst_570433673 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433673.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym368_570433650.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym368_570433651, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym368_570433650.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym368_570433650)));
    }
    
      var Temporary1 = n_p0;
      if (ConstSet234[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI570425392)); }
    if (!(((Temporary1.kids).length == len_p1))) {
    var inst_570433681 = {Field0: [108,105,115,112,46,110,105,109], Field1: 832, Field2: 3};
    var Temporary2 = n_p0;
    if (ConstSet235[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI570425392)); }
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433681.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p0.line),[41,58,32],([69,120,112,101,99,116,101,100,32,97,32,108,105,115,116,32,111,102,32]).concat(HEX24__systemZdollars_u8(len_p1),[32,118,97,108,117,101,115,32,98,117,116,32,103,111,116,32],HEX24__systemZdollars_u8((Temporary2.kids).length))));
    }
    

  
}

function isInt__lisp_u302(f_p0) {
  var result_570425648 = false;

    result_570425648 = (((f_p0) | 0) == f_p0);

  return result_570425648;

}

function expectInt__lisp_u8170(n_p0) {
      var Temporary1;
    var Temporary2;
      var Temporary3;

    var nHEX60gensym355_570433518 = n_p0;
    var kindHEX60gensym355_570433519 = 0;
    var nHEX60gensym356_570433522 = nHEX60gensym355_570433518;
    var kindHEX60gensym356_570433523 = 9;
    var nHEX60gensym357_570433525 = nHEX60gensym356_570433522;
    if (!(!((nHEX60gensym357_570433525 == null)))) {
    var inst_570433530 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433530.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym357_570433525.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
    }
    
    if (!((nHEX60gensym356_570433522.kind == kindHEX60gensym356_570433523))) {
    var inst_570433545 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433545.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym356_570433522.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym356_570433523, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym356_570433522.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym356_570433522)));
    }
    
      var Temporary1 = nHEX60gensym355_570433518;
      if (ConstSet236[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI570425392)); }
    if (!((Temporary1.atomicKind == kindHEX60gensym355_570433519))) {
    var inst_570433557 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
    var Temporary2 = nHEX60gensym355_570433518;
    if (ConstSet237[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI570425392)); }
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433557.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym355_570433518.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym355_570433519, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary2.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym355_570433518)));
    }
    
      var Temporary3 = n_p0;
      if (ConstSet238[Temporary3.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary3.atomicKind, NTI570425391)); }
    if (!(isInt__lisp_u302(Temporary3.num))) {
    var inst_570433559 = {Field0: [108,105,115,112,46,110,105,109], Field1: 821, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433559.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p0.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,110,32,105,110,116,101,103,101,114]));
    }
    

  
}

function contains__lisp_u8776(t_p0, key_p1) {
  var result_570434125 = false;

  BeforeRet: {
    result_570434125 = hasKey__lisp_u2089(t_p0, key_p1);
    break BeforeRet;
  };

  return result_570434125;

}

function nextPowerOfTwo__pureZmath_u274(x_p0) {
  var result_805306644 = 0;

    result_805306644 = (x_p0 - 1);
    result_805306644 = (result_805306644 | (result_805306644 >> 16));
    result_805306644 = (result_805306644 | (result_805306644 >> 8));
    result_805306644 = (result_805306644 | (result_805306644 >> 4));
    result_805306644 = (result_805306644 | (result_805306644 >> 2));
    result_805306644 = (result_805306644 | (result_805306644 >> 1));
    result_805306644 += (1 + ((x_p0 <= 0) ? 1 : 0));

  return result_805306644;

}

function slotsNeeded__pureZcollectionsZtables_u42(count_p0) {
  var result_1090519084 = 0;

    result_1090519084 = nextPowerOfTwo__pureZmath_u274(addInt(addInt(divInt(count_p0, 2), count_p0), 4));

  return result_1090519084;

}

function mustRehash__lisp_u2963(t_p0) {
  var result_570428310 = false;

    if (!((t_p0.counter < (t_p0.data).length))) {
    failedAssertImpl__stdZassertions_u84([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_570428310 = (((t_p0.data).length < addInt(t_p0.counter, divInt(t_p0.counter, 2))) || (subInt((t_p0.data).length, t_p0.counter) < 4));

  return result_570428310;

}

function rawInsert__lisp_u3380(t_p0, data_p1, data_p1_Idx, key_p2, val_p3, hc_p4, h_p5) {
    data_p1[data_p1_Idx][chckIndx(h_p5, 0, (data_p1[data_p1_Idx]).length - 1)].Field1 = nimCopy(null, key_p2, NTI33554449);
    data_p1[data_p1_Idx][chckIndx(h_p5, 0, (data_p1[data_p1_Idx]).length - 1)].Field2 = val_p3;
    data_p1[data_p1_Idx][chckIndx(h_p5, 0, (data_p1[data_p1_Idx]).length - 1)].Field0 = hc_p4;

  
}

function enlarge__lisp_u3106(t_p0) {
    var n_570428456 = [];
    n_570428456 = new Array(chckRange(mulInt((t_p0.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_p0.data).length, 2), 0, 2147483647) ; ++i) { n_570428456[i] = {Field0: 0, Field1: [], Field2: null}; }    var HEX3Atmp_570442471 = nimCopy(null, t_p0.data, NTI570425418);
    t_p0.data = n_570428456;
    n_570428456 = HEX3Atmp_570442471;
    Label1: {
      var i_570428516 = 0;
      var colontmp__570442468 = 0;
      colontmp__570442468 = (n_570428456).length - 1;
      var res_570442469 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570442469 <= colontmp__570442468)) break Label3;
            i_570428516 = res_570442469;
            var eh_570428566 = n_570428456[chckIndx(i_570428516, 0, (n_570428456).length - 1)].Field0;
            if (isFilled__pureZcollectionsZtables_u31(eh_570428566)) {
            var j_570428570 = (eh_570428566 & (t_p0.data).length - 1);
            Label4: {
                Label5: while (true) {
                if (!isFilled__pureZcollectionsZtables_u31(t_p0.data[chckIndx(j_570428570, 0, (t_p0.data).length - 1)].Field0)) break Label5;
                  j_570428570 = nextTry__pureZcollectionsZtables_u34(j_570428570, (t_p0.data).length - 1);
                }
            };
            rawInsert__lisp_u3380(t_p0, t_p0, "data", n_570428456[chckIndx(i_570428516, 0, (n_570428456).length - 1)].Field1, n_570428456[chckIndx(i_570428516, 0, (n_570428456).length - 1)].Field2, eh_570428566, j_570428570);
            }
            
            res_570442469 = addInt(res_570442469, 1);
          }
      };
    };

  
}

function rawGetKnownHC__lisp_u3537(t_p0, key_p1, hc_p2) {
  var result_570428887 = 0;

  BeforeRet: {
    if (((t_p0.data).length == 0)) {
    result_570428887 = (-1);
    break BeforeRet;
    }
    
    var h_570428934 = (hc_p2 & (t_p0.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled__pureZcollectionsZtables_u31(t_p0.data[chckIndx(h_570428934, 0, (t_p0.data).length - 1)].Field0)) break Label2;
          if (((t_p0.data[chckIndx(h_570428934, 0, (t_p0.data).length - 1)].Field0 == hc_p2) && eqStrings(t_p0.data[chckIndx(h_570428934, 0, (t_p0.data).length - 1)].Field1, key_p1))) {
          result_570428887 = h_570428934;
          break BeforeRet;
          }
          
          h_570428934 = nextTry__pureZcollectionsZtables_u34(h_570428934, (t_p0.data).length - 1);
        }
    };
    result_570428887 = subInt((-1), h_570428934);
  };

  return result_570428887;

}

function HEX5BHEX5DHEX3D__lisp_u2797(t_p0, key_p1, val_p2) {
    if (((t_p0.data).length == 0)) {
    var correctSizeHEX60gensym118_570428191 = slotsNeeded__pureZcollectionsZtables_u42(32);
    t_p0.counter = 0;
    t_p0.data = new Array(chckRange(correctSizeHEX60gensym118_570428191, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym118_570428191, 0, 2147483647) ; ++i) { t_p0.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    var hc_570428201 = [0];
    var index_570428208 = rawGet__lisp_u2096(t_p0, key_p1, hc_570428201, 0);
    if ((0 <= index_570428208)) {
    t_p0.data[chckIndx(index_570428208, 0, (t_p0.data).length - 1)].Field2 = val_p2;
    }
    else {
      if (((t_p0.data).length == 0)) {
      var correctSizeHEX60gensym121_570428302 = slotsNeeded__pureZcollectionsZtables_u42(32);
      t_p0.counter = 0;
      t_p0.data = new Array(chckRange(correctSizeHEX60gensym121_570428302, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym121_570428302, 0, 2147483647) ; ++i) { t_p0.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash__lisp_u2963(t_p0)) {
      enlarge__lisp_u3106(t_p0);
      index_570428208 = rawGetKnownHC__lisp_u3537(t_p0, key_p1, hc_570428201[0]);
      }
      
      index_570428208 = subInt((-1), index_570428208);
      rawInsert__lisp_u3380(t_p0, t_p0, "data", key_p1, val_p2, hc_570428201[0], index_570428208);
      t_p0.counter = addInt(t_p0.counter, 1);
    }
    

  
}

function allInheritedClassFields__lisp_u8700(n_p0) {
    var Temporary1;
    var Temporary2;
            var Temporary6;
          var Temporary10;

  var result_570434048 = [({data: [], counter: 0})];

    var nHEX60gensym412_570434051 = n_p0;
    var kindHEX60gensym412_570434052 = 17;
    var nHEX60gensym413_570434054 = nHEX60gensym412_570434051;
    if (!(!((nHEX60gensym413_570434054 == null)))) {
    var inst_570434059 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434059.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym413_570434054.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
    }
    
    if (!((nHEX60gensym412_570434051.kind == kindHEX60gensym412_570434052))) {
    var inst_570434074 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434074.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym412_570434051.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym412_570434052, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym412_570434051.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym412_570434051)));
    }
    
    var Temporary1 = n_p0;
    if (ConstSet241[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI570425392)); }
    result_570434048[0] = nimCopy(result_570434048[0], Temporary1.classFields, NTI570425415);
    var Temporary2 = n_p0;
    if (ConstSet242[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classParent\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI570425392)); }
    var nextAncestor_570434075 = Temporary2.classParent;
    Label3: {
        Label4: while (true) {
        if (!!(HEX3DHEX3D__lisp_u1499(nextAncestor_570434075, null))) break Label4;
          Label5: {
            var k_570434080 = [];
            var v_570434081 = null;
            var colontmp__570442459 = ({data: [], counter: 0});
            var Temporary6 = nextAncestor_570434075;
            if (ConstSet243[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI570425392)); }
            colontmp__570442459 = nimCopy(colontmp__570442459, Temporary6.classFields, NTI570425415);
            var L_570442460 = len__lisp_u498(colontmp__570442459);
            Label7: {
              var h_570442462 = 0;
              var colontmp__570442463 = 0;
              colontmp__570442463 = (colontmp__570442459.data).length - 1;
              var res_570442464 = 0;
              Label8: {
                  Label9: while (true) {
                  if (!(res_570442464 <= colontmp__570442463)) break Label9;
                    h_570442462 = res_570442464;
                    if (isFilled__pureZcollectionsZtables_u31(colontmp__570442459.data[chckIndx(h_570442462, 0, (colontmp__570442459.data).length - 1)].Field0)) {
                    k_570434080 = colontmp__570442459.data[chckIndx(h_570442462, 0, (colontmp__570442459.data).length - 1)].Field1;
                    v_570434081 = colontmp__570442459.data[chckIndx(h_570442462, 0, (colontmp__570442459.data).length - 1)].Field2;
                    if (!(!(contains__lisp_u8776(result_570434048[0], k_570434080)))) {
                    var inst_570434147 = {Field0: [108,105,115,112,46,110,105,109], Field1: 988, Field2: 7};
                    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434147.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p0.line),[41,58,32,70,105,101,108,100,32,100,101,102,105,110,101,100,32,109,111,114,101,32,116,104,97,110,32,111,110,99,101,58,32],k_570434080));
                    }
                    
                    HEX5BHEX5DHEX3D__lisp_u2797(result_570434048[0], k_570434080, v_570434081);
                    if (!((len__lisp_u498(colontmp__570442459) == L_570442460))) {
                    failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    res_570442464 = addInt(res_570442464, 1);
                  }
              };
            };
          };
          var Temporary10 = nextAncestor_570434075;
          if (ConstSet244[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classParent\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI570425392)); }
          nextAncestor_570434075 = Temporary10.classParent;
        }
    };

  return result_570434048[0];

}

function contains__lisp_u8292(s_p0, value_p1) {
  var result_570433642 = false;

    result_570433642 = ((s_p0.a <= value_p1) && (value_p1 <= s_p0.b));

  return result_570433642;

}

function HEX2EHEX2E__stdZstrbasics_u48(a_p0, b_p1) {
  var result_1006633013 = ({a: 0, b: 0});

    result_1006633013 = nimCopy(result_1006633013, {a: a_p0, b: b_p1}, NTI704643381);

  return result_1006633013;

}

function HEX5BHEX5D__lisp_u8216(n_p0, i_p1) {
      var Temporary1;
    var Temporary2;
    var Temporary3;

  var result_570433563 = null;

    var nHEX60gensym362_570433566 = n_p0;
    var kindHEX60gensym362_570433567 = 1;
    var nHEX60gensym363_570433569 = nHEX60gensym362_570433566;
    if (!(!((nHEX60gensym363_570433569 == null)))) {
    var inst_570433574 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433574.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym363_570433569.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
    }
    
    if (!((nHEX60gensym362_570433566.kind == kindHEX60gensym362_570433567))) {
    var inst_570433589 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433589.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym362_570433566.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym362_570433567, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym362_570433566.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym362_570433566)));
    }
    
      var Temporary1 = n_p0;
      if (ConstSet245[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI570425392)); }
    if (!(contains__lisp_u8292(HEX2EHEX2E__stdZstrbasics_u48(0, (Temporary1.kids).length), i_p1))) {
    var inst_570433644 = {Field0: [108,105,115,112,46,110,105,109], Field1: 825, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433644.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p0.line),[41,58,32],([73,110,100,101,120,32]).concat(HEX24__systemZdollars_u8(i_p1),[110,111,116,32,102,111,117,110,100,32,105,110,32,108,105,115,116,58,32],HEX24__lisp_u6182(n_p0))));
    }
    
    var Temporary2 = n_p0;
    if (ConstSet246[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI570425392)); }
    result_570433563 = (Temporary3 = Temporary2.kids, Temporary3)[chckIndx(i_p1, 0, (Temporary3).length - 1)];

  return result_570433563;

}

function inheritsFrom__lisp_u8389(a_p0, b_p1) {
    var Temporary1;
    var Temporary2;
      var Temporary3;
            var Temporary6;

  var result_570433736 = false;

    var a_570433737 = a_p0;
    var b_570433738 = b_p1;
    if (!((ConstSet253[a_570433737.kind] != undefined))) {
    failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,56,55,56,44,32,51,41,32,96,99,111,110,116,97,105,110,115,40,123,110,107,67,108,97,115,115,84,121,112,101,44,32,110,107,67,108,97,115,115,79,98,106,125,44,32,97,46,107,105,110,100,41,96,32]);
    }
    
    if (!((ConstSet254[b_570433738.kind] != undefined))) {
    failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,56,55,57,44,32,51,41,32,96,99,111,110,116,97,105,110,115,40,123,110,107,67,108,97,115,115,84,121,112,101,44,32,110,107,67,108,97,115,115,79,98,106,125,44,32,98,46,107,105,110,100,41,96,32]);
    }
    
    if ((a_570433737.kind == 18)) {
    var Temporary1 = a_570433737;
    if (ConstSet255[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI570425392)); }
    a_570433737 = Temporary1.classObjType;
    }
    
    if ((b_570433738.kind == 18)) {
    var Temporary2 = b_570433738;
    if (ConstSet256[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI570425392)); }
    b_570433738 = Temporary2.classObjType;
    }
    
    result_570433736 = false;
    if (HEX3DHEX3D__lisp_u1499(a_570433737, b_570433738)) {
    result_570433736 = true;
    }
    else {
      var Temporary3 = a_570433737;
      if (ConstSet257[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classParent\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI570425392)); }
      var nextAncestor_570433766 = Temporary3.classParent;
      Label4: {
          Label5: while (true) {
          if (!!(HEX3DHEX3D__lisp_u1499(nextAncestor_570433766, null))) break Label5;
            if (HEX3DHEX3D__lisp_u1499(nextAncestor_570433766, b_570433738)) {
            result_570433736 = true;
            break Label4;
            }
            
            var Temporary6 = nextAncestor_570433766;
            if (ConstSet258[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classParent\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI570425392)); }
            nextAncestor_570433766 = Temporary6.classParent;
          }
      };
    }
    
    rawEcho([114,101,115,117,108,116], [32,61,32], nimBoolToStr(result_570433736));

  return result_570433736;

}

function canConvertToEnum__lisp_u8348(n_p0, enumType_p1) {
      var Temporary2;

  var result_570433695 = false;

    if (!(!((n_p0.kind == 0)))) {
    var inst_570433701 = {Field0: [108,105,115,112,46,110,105,109], Field1: 860, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433701.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p0.line),[41,58,32,78,111,100,101,32,109,117,115,116,32,98,101,32,101,118,97,108,117,97,116,101,100,32,98,101,102,111,114,101,32,99,111,110,118,101,114,115,105,111,110]));
    }
    
    var nHEX60gensym379_570433704 = enumType_p1;
    var kindHEX60gensym379_570433705 = 7;
    var nHEX60gensym380_570433707 = nHEX60gensym379_570433704;
    if (!(!((nHEX60gensym380_570433707 == null)))) {
    var inst_570433712 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433712.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym380_570433707.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
    }
    
    if (!((nHEX60gensym379_570433704.kind == kindHEX60gensym379_570433705))) {
    var inst_570433727 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433727.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym379_570433704.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym379_570433705, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym379_570433704.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym379_570433704)));
    }
    
    result_570433695 = false;
    Label1: {
      var v_570433731 = null;
      var colontmp__570442488 = [];
      var Temporary2 = enumType_p1;
      if (ConstSet259[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'enumTypeValues\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI570425392)); }
      colontmp__570442488 = Temporary2.enumTypeValues;
      var i_570442489 = 0;
      var L_570442490 = (colontmp__570442488).length;
      Label3: {
          Label4: while (true) {
          if (!(i_570442489 < L_570442490)) break Label4;
            v_570433731 = colontmp__570442488[chckIndx(i_570442489, 0, (colontmp__570442488).length - 1)];
            if (HEX3DHEX3D__lisp_u1499(n_p0, v_570433731)) {
            result_570433695 = true;
            break Label1;
            }
            
            i_570442489 += 1;
            if (!(((colontmp__570442488).length == L_570442490))) {
            failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_570433695;

}

function newNode__lisp_u2484(kind_p0) {
  var result_570427830 = null;

    result_570427830 = {kind: 5, atomicType: kind_p0, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};

  return result_570427830;

}

function getAtomicValueKind__lisp_u5514(n_p0) {
    var Temporary1;

  var result_570430860 = 0;

    if (!((n_p0.kind == 9))) {
    var inst_570430866 = {Field0: [108,105,115,112,46,110,105,109], Field1: 544, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570430866.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p0.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,116,111,109,105,99,32,118,97,108,117,101]));
    }
    
    var Temporary1 = n_p0;
    if (ConstSet266[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI570425392)); }
    result_570430860 = Temporary1.atomicKind;

  return result_570430860;

}

function getType__lisp_u8338(n_p0) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;

  var result_570433684 = null;

    if (!(HEX3DHEX3D__lisp_u1499(n_p0.enumType, null))) {
    result_570433684 = n_p0.enumType;
    }
    else {
      switch (n_p0.kind) {
      case 9:
        result_570433684 = newNode__lisp_u2484(getAtomicValueKind__lisp_u5514(n_p0));
        break;
      case 8:
        var Temporary1 = n_p0;
        if (ConstSet267[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI570425392)); }
        result_570433684 = Temporary1.objectType;
        break;
      case 1:
        var Temporary2 = n_p0;
        if (ConstSet268[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'listType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI570425392)); }
        result_570433684 = Temporary2.listType;
        break;
      case 4:
        var Temporary3 = n_p0;
        if (ConstSet269[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI570425392)); }
        result_570433684 = Temporary3.tableType;
        break;
      case 16:
        result_570433684 = {kind: 15, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
        break;
      case 18:
        var Temporary4 = n_p0;
        if (ConstSet270[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI570425392)); }
        result_570433684 = Temporary4.classObjType;
        break;
      default: 
        if (true) {
        var inst_570433686 = {Field0: [108,105,115,112,46,110,105,109], Field1: 854, Field2: 7};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433686.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p0.line),[41,58,32],([78,111,100,101,32,100,111,101,115,32,110,111,116,32,104,97,118,101,32,97,32,116,121,112,101,100,32,118,97,108,117,101,58,32]).concat(HEX24__lisp_u6182(n_p0))));
        }
        
        break;
      }
    }
    
    if (!(!(HEX3DHEX3D__lisp_u1499(result_570433684, null)))) {
    var inst_570433691 = {Field0: [108,105,115,112,46,110,105,109], Field1: 857, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433691.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p0.line),[41,58,32,73,110,116,101,114,110,97,108,32,101,114,114,111,114,44,32,99,97,110,39,116,32,103,101,116,32,116,104,101,32,116,121,112,101,32,111,102,58,32],reprAny(n_p0, null, NTI570425393)));
    }
    

  return result_570433684;

}

function canConvertToType__lisp_u8439(n_p0, newType_p1) {
        var Temporary2;
                  var Temporary6;
                  var Temporary7;
                    var Temporary8;
        var Temporary10;
                var Temporary13;
                var Temporary14;

  var result_570433786 = false;

    if (!(!((n_p0 == null)))) {
    failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,57,48,56,44,32,51,41,32,96,110,111,116,32,105,115,78,105,108,40,110,41,96,32]);
    }
    
    if (!(!((newType_p1 == null)))) {
    failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,57,48,57,44,32,51,41,32,96,110,111,116,32,105,115,78,105,108,40,110,101,119,84,121,112,101,41,96,32]);
    }
    
    if (!((ConstSet252[newType_p1.kind] != undefined))) {
    failedAssertImpl__stdZassertions_u84((makeNimstrLit("lisp.nim(910, 3) `contains({nkEnumType, nkAtomicType, nkObjectType, nkTableType, nkAnyType,\x0A          nkVoidType, nkClassType, nkArrayType}, newType.kind)` ")).concat(([84,121,112,101,32,110,111,100,101,32,101,120,112,101,99,116,101,100,44,32,103,111,116,58,32]).concat(HEX24__lisp_u6182(n_p0))));
    }
    
    switch (newType_p1.kind) {
    case 17:
      result_570433786 = inheritsFrom__lisp_u8389(n_p0, newType_p1);
      break;
    case 14:
      result_570433786 = true;
      break;
    case 7:
      result_570433786 = canConvertToEnum__lisp_u8348(n_p0, newType_p1);
      break;
    case 12:
      if ((n_p0.kind == 4)) {
      result_570433786 = true;
      Label1: {
        var k_570433820 = null;
        var v_570433821 = null;
        var colontmp__570442474 = ({data: [], counter: 0});
        var Temporary2 = n_p0;
        if (ConstSet260[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableVal\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI570425392)); }
        colontmp__570442474 = nimCopy(colontmp__570442474, Temporary2.tableVal, NTI570425445);
        var L_570442475 = len__lisp_u1038(colontmp__570442474);
        Label3: {
          var h_570442477 = 0;
          var colontmp__570442478 = 0;
          colontmp__570442478 = (colontmp__570442474.data).length - 1;
          var res_570442479 = 0;
          Label4: {
              Label5: while (true) {
              if (!(res_570442479 <= colontmp__570442478)) break Label5;
                h_570442477 = res_570442479;
                if (isFilled__pureZcollectionsZtables_u31(colontmp__570442474.data[chckIndx(h_570442477, 0, (colontmp__570442474.data).length - 1)].Field0)) {
                k_570433820 = colontmp__570442474.data[chckIndx(h_570442477, 0, (colontmp__570442474.data).length - 1)].Field1;
                v_570433821 = colontmp__570442474.data[chckIndx(h_570442477, 0, (colontmp__570442474.data).length - 1)].Field2;
                  var Temporary7 = newType_p1;
                  if (ConstSet261[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableKeyType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI570425392)); }
                  if (!(canConvertToType__lisp_u8439(k_570433820, Temporary7.tableKeyType))) Temporary6 = true; else {                    var Temporary8 = newType_p1;
                    if (ConstSet262[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI570425392)); }
                    Temporary6 = !(canConvertToType__lisp_u8439(v_570433821, Temporary8.tableValueType));                  }                if (Temporary6) {
                result_570433786 = false;
                break Label1;
                }
                
                if (!((len__lisp_u1038(colontmp__570442474) == L_570442475))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_570442479 = addInt(res_570442479, 1);
              }
          };
        };
      };
      }
      else {
        result_570433786 = false;
      }
      
      break;
    case 13:
      result_570433786 = true;
      if ((n_p0.kind == 1)) {
      Label9: {
        var it_570433829 = null;
        var colontmp__570442482 = [];
        var Temporary10 = n_p0;
        if (ConstSet263[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI570425392)); }
        colontmp__570442482 = Temporary10.kids;
        var i_570442483 = 0;
        var L_570442484 = (colontmp__570442482).length;
        Label11: {
            Label12: while (true) {
            if (!(i_570442483 < L_570442484)) break Label12;
              it_570433829 = colontmp__570442482[chckIndx(i_570442483, 0, (colontmp__570442482).length - 1)];
                var Temporary13 = n_p0;
                if (ConstSet265[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'listType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI570425392)); }
                var Temporary14 = Temporary13.listType;
                if (ConstSet264[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arrayValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI570425392)); }
              if (!(canConvertToType__lisp_u8439(it_570433829, Temporary14.arrayValueType))) {
              result_570433786 = false;
              break Label9;
              }
              
              i_570442483 += 1;
              if (!(((colontmp__570442482).length == L_570442484))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      }
      else {
        result_570433786 = false;
      }
      
      break;
    default: 
      result_570433786 = HEX3DHEX3D__lisp_u1499(getType__lisp_u8338(n_p0), newType_p1);
      break;
    }

  return result_570433786;

}

function HEX5BHEX5D__lisp_u14028(t_p0, key_p1) {
  var result_570439377 = null;

    var hcHEX60gensym20_570439378 = [0];
    var indexHEX60gensym20_570439385 = rawGet__lisp_u2096(t_p0, key_p1, hcHEX60gensym20_570439378, 0);
    if ((0 <= indexHEX60gensym20_570439385)) {
    result_570439377 = t_p0.data[chckIndx(indexHEX60gensym20_570439385, 0, (t_p0.data).length - 1)]["Field2"];
    }
    else {
    raiseKeyError__lisp_u5395(key_p1);
    }
    

  return result_570439377;

}

function initTable__lisp_u2737(initialSize_p0) {
  var result_570428085 = ({data: [], counter: 0});

    result_570428085 = nimCopy(result_570428085, ({data: [], counter: 0}), NTI570425415);
    var correctSizeHEX60gensym115_570428094 = slotsNeeded__pureZcollectionsZtables_u42(chckRange(initialSize_p0, 0, 2147483647));
    result_570428085.counter = 0;
    result_570428085.data = new Array(chckRange(correctSizeHEX60gensym115_570428094, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym115_570428094, 0, 2147483647) ; ++i) { result_570428085.data[i] = {Field0: 0, Field1: [], Field2: null}; }
  return result_570428085;

}

function newSeq__lisp_u3899(len_p0) {
  var result_570429247 = [];

    result_570429247 = new Array(len_p0); for (var i = 0 ; i < len_p0 ; ++i) { result_570429247[i] = null; }
  return result_570429247;

}

function initTable__lisp_u3996(initialSize_p0) {
  var result_570429344 = ({data: [], counter: 0});

    result_570429344 = nimCopy(result_570429344, ({data: [], counter: 0}), NTI570425445);
    var correctSizeHEX60gensym139_570429353 = slotsNeeded__pureZcollectionsZtables_u42(chckRange(initialSize_p0, 0, 2147483647));
    result_570429344.counter = 0;
    result_570429344.data = new Array(chckRange(correctSizeHEX60gensym139_570429353, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym139_570429353, 0, 2147483647) ; ++i) { result_570429344.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_570429344;

}

function mustRehash__lisp_u4221(t_p0) {
  var result_570429568 = false;

    if (!((t_p0.counter < (t_p0.data).length))) {
    failedAssertImpl__stdZassertions_u84([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_570429568 = (((t_p0.data).length < addInt(t_p0.counter, divInt(t_p0.counter, 2))) || (subInt((t_p0.data).length, t_p0.counter) < 4));

  return result_570429568;

}

function rawInsert__lisp_u4638(t_p0, data_p1, data_p1_Idx, key_p2, val_p3, hc_p4, h_p5) {
    data_p1[data_p1_Idx][chckIndx(h_p5, 0, (data_p1[data_p1_Idx]).length - 1)].Field1 = key_p2;
    data_p1[data_p1_Idx][chckIndx(h_p5, 0, (data_p1[data_p1_Idx]).length - 1)].Field2 = val_p3;
    data_p1[data_p1_Idx][chckIndx(h_p5, 0, (data_p1[data_p1_Idx]).length - 1)].Field0 = hc_p4;

  
}

function enlarge__lisp_u4364(t_p0) {
    var n_570429714 = [];
    n_570429714 = new Array(chckRange(mulInt((t_p0.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_p0.data).length, 2), 0, 2147483647) ; ++i) { n_570429714[i] = {Field0: 0, Field1: null, Field2: null}; }    var HEX3Atmp_570442552 = nimCopy(null, t_p0.data, NTI570425448);
    t_p0.data = n_570429714;
    n_570429714 = HEX3Atmp_570442552;
    Label1: {
      var i_570429774 = 0;
      var colontmp__570442549 = 0;
      colontmp__570442549 = (n_570429714).length - 1;
      var res_570442550 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570442550 <= colontmp__570442549)) break Label3;
            i_570429774 = res_570442550;
            var eh_570429824 = n_570429714[chckIndx(i_570429774, 0, (n_570429714).length - 1)].Field0;
            if (isFilled__pureZcollectionsZtables_u31(eh_570429824)) {
            var j_570429828 = (eh_570429824 & (t_p0.data).length - 1);
            Label4: {
                Label5: while (true) {
                if (!isFilled__pureZcollectionsZtables_u31(t_p0.data[chckIndx(j_570429828, 0, (t_p0.data).length - 1)].Field0)) break Label5;
                  j_570429828 = nextTry__pureZcollectionsZtables_u34(j_570429828, (t_p0.data).length - 1);
                }
            };
            rawInsert__lisp_u4638(t_p0, t_p0, "data", n_570429714[chckIndx(i_570429774, 0, (n_570429714).length - 1)].Field1, n_570429714[chckIndx(i_570429774, 0, (n_570429714).length - 1)].Field2, eh_570429824, j_570429828);
            }
            
            res_570442550 = addInt(res_570442550, 1);
          }
      };
    };

  
}

function rawGetKnownHC__lisp_u4795(t_p0, key_p1, hc_p2) {
  var result_570430145 = 0;

  BeforeRet: {
    if (((t_p0.data).length == 0)) {
    result_570430145 = (-1);
    break BeforeRet;
    }
    
    var h_570430192 = (hc_p2 & (t_p0.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled__pureZcollectionsZtables_u31(t_p0.data[chckIndx(h_570430192, 0, (t_p0.data).length - 1)].Field0)) break Label2;
          if (((t_p0.data[chckIndx(h_570430192, 0, (t_p0.data).length - 1)].Field0 == hc_p2) && HEX3DHEX3D__lisp_u1499(t_p0.data[chckIndx(h_570430192, 0, (t_p0.data).length - 1)].Field1, key_p1))) {
          result_570430145 = h_570430192;
          break BeforeRet;
          }
          
          h_570430192 = nextTry__pureZcollectionsZtables_u34(h_570430192, (t_p0.data).length - 1);
        }
    };
    result_570430145 = subInt((-1), h_570430192);
  };

  return result_570430145;

}

function HEX5BHEX5DHEX3D__lisp_u4056(t_p0, key_p1, val_p2) {
    if (((t_p0.data).length == 0)) {
    var correctSizeHEX60gensym142_570429450 = slotsNeeded__pureZcollectionsZtables_u42(32);
    t_p0.counter = 0;
    t_p0.data = new Array(chckRange(correctSizeHEX60gensym142_570429450, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym142_570429450, 0, 2147483647) ; ++i) { t_p0.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_570429459 = [0];
    var index_570429466 = rawGet__lisp_u1655(t_p0, key_p1, hc_570429459, 0);
    if ((0 <= index_570429466)) {
    t_p0.data[chckIndx(index_570429466, 0, (t_p0.data).length - 1)].Field2 = val_p2;
    }
    else {
      if (((t_p0.data).length == 0)) {
      var correctSizeHEX60gensym145_570429560 = slotsNeeded__pureZcollectionsZtables_u42(32);
      t_p0.counter = 0;
      t_p0.data = new Array(chckRange(correctSizeHEX60gensym145_570429560, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym145_570429560, 0, 2147483647) ; ++i) { t_p0.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash__lisp_u4221(t_p0)) {
      enlarge__lisp_u4364(t_p0);
      index_570429466 = rawGetKnownHC__lisp_u4795(t_p0, key_p1, hc_570429459[0]);
      }
      
      index_570429466 = subInt((-1), index_570429466);
      rawInsert__lisp_u4638(t_p0, t_p0, "data", key_p1, val_p2, hc_570429459[0], index_570429466);
      t_p0.counter = addInt(t_p0.counter, 1);
    }
    

  
}

function copyTree__lisp_u2692(n_p0) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary5;
      var Temporary9;
        var Temporary11;
      var Temporary15;
      var Temporary16;
      var Temporary17;
      var Temporary18;
        var Temporary20;
      var Temporary24;
      var Temporary25;
      var Temporary26;
      var Temporary27;
      var Temporary28;
      var Temporary29;
        var Temporary30;
        var Temporary31;
        var Temporary32;
        var Temporary33;
        var Temporary34;
        var Temporary35;
      var Temporary36;
        var Temporary38;
      var Temporary42;
        var Temporary44;
      var Temporary48;
      var Temporary49;
      var Temporary50;
        var Temporary52;
      var Temporary56;
      var Temporary57;
      var Temporary58;
      var Temporary59;
        var Temporary60;
      var Temporary61;
      var Temporary62;
      var Temporary63;
      var Temporary64;
      var Temporary65;
      var Temporary66;
      var Temporary67;
        var Temporary69;
      var Temporary73;
      var Temporary74;
      var Temporary75;
        var Temporary77;

  var result_570428038 = null;

    if (!(!((n_p0 == null)))) {
    failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,52,50,56,44,32,51,41,32,96,110,111,116,32,105,115,78,105,108,40,110,41,96,32]);
    }
    
    switch (n_p0.kind) {
    case 19:
      var Temporary1 = n_p0;
      if (ConstSet278[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'member\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI570425392)); }
      result_570428038 = {kind: 19, member: nimCopy(null, Temporary1.member, NTI33554449), line: 0, tags: {}, enumType: null, className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 17:
      result_570428038 = n_p0;
      break;
    case 18:
      var Temporary2 = n_p0;
      if (ConstSet279[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI570425392)); }
      result_570428038 = {kind: 18, classObjType: copyTree__lisp_u2692(Temporary2.classObjType), classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      var Temporary3 = result_570428038;
      if (ConstSet280[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI570425392)); }
      var collectResult_570428051 = [initTable__lisp_u2737(32)];
      Label4: {
        var k_570428103 = [];
        var v_570428104 = null;
        var colontmp__570442493 = ({data: [], counter: 0});
        var Temporary5 = n_p0;
        if (ConstSet281[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI570425392)); }
        colontmp__570442493 = nimCopy(colontmp__570442493, Temporary5.classObjFields, NTI570425415);
        var L_570442494 = len__lisp_u498(colontmp__570442493);
        Label6: {
          var h_570442496 = 0;
          var colontmp__570442497 = 0;
          colontmp__570442497 = (colontmp__570442493.data).length - 1;
          var res_570442498 = 0;
          Label7: {
              Label8: while (true) {
              if (!(res_570442498 <= colontmp__570442497)) break Label8;
                h_570442496 = res_570442498;
                if (isFilled__pureZcollectionsZtables_u31(colontmp__570442493.data[chckIndx(h_570442496, 0, (colontmp__570442493.data).length - 1)].Field0)) {
                k_570428103 = colontmp__570442493.data[chckIndx(h_570442496, 0, (colontmp__570442493.data).length - 1)].Field1;
                v_570428104 = colontmp__570442493.data[chckIndx(h_570442496, 0, (colontmp__570442493.data).length - 1)].Field2;
                HEX5BHEX5DHEX3D__lisp_u2797(collectResult_570428051[0], k_570428103, copyTree__lisp_u2692(v_570428104));
                if (!((len__lisp_u498(colontmp__570442493) == L_570442494))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_570442498 = addInt(res_570442498, 1);
              }
          };
        };
      };
      Temporary3.classObjFields = nimCopy(Temporary3.classObjFields, collectResult_570428051[0], NTI570425415);
      var Temporary9 = result_570428038;
      if (ConstSet282[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjMethods\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI570425392)); }
      var collectResult_570429103 = [initTable__lisp_u2737(32)];
      Label10: {
        var k_570429136 = [];
        var v_570429137 = null;
        var colontmp__570442501 = ({data: [], counter: 0});
        var Temporary11 = n_p0;
        if (ConstSet283[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjMethods\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI570425392)); }
        colontmp__570442501 = nimCopy(colontmp__570442501, Temporary11.classObjMethods, NTI570425415);
        var L_570442502 = len__lisp_u498(colontmp__570442501);
        Label12: {
          var h_570442504 = 0;
          var colontmp__570442505 = 0;
          colontmp__570442505 = (colontmp__570442501.data).length - 1;
          var res_570442506 = 0;
          Label13: {
              Label14: while (true) {
              if (!(res_570442506 <= colontmp__570442505)) break Label14;
                h_570442504 = res_570442506;
                if (isFilled__pureZcollectionsZtables_u31(colontmp__570442501.data[chckIndx(h_570442504, 0, (colontmp__570442501.data).length - 1)].Field0)) {
                k_570429136 = colontmp__570442501.data[chckIndx(h_570442504, 0, (colontmp__570442501.data).length - 1)].Field1;
                v_570429137 = colontmp__570442501.data[chckIndx(h_570442504, 0, (colontmp__570442501.data).length - 1)].Field2;
                HEX5BHEX5DHEX3D__lisp_u2797(collectResult_570429103[0], k_570429136, copyTree__lisp_u2692(v_570429137));
                if (!((len__lisp_u498(colontmp__570442501) == L_570442502))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_570442506 = addInt(res_570442506, 1);
              }
          };
        };
      };
      Temporary9.classObjMethods = nimCopy(Temporary9.classObjMethods, collectResult_570429103[0], NTI570425415);
      break;
    case 15:
      result_570428038 = {kind: 15, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 16:
      result_570428038 = {kind: 16, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 12:
      var Temporary15 = n_p0;
      if (ConstSet284[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableKeyType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI570425392)); }
      var Temporary16 = n_p0;
      if (ConstSet285[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI570425392)); }
      result_570428038 = {kind: 12, tableKeyType: copyTree__lisp_u2692(Temporary15.tableKeyType), tableValueType: copyTree__lisp_u2692(Temporary16.tableValueType), line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], arrayValueType: null};
      break;
    case 13:
      var Temporary17 = n_p0;
      if (ConstSet286[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'arrayValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI570425392)); }
      result_570428038 = {kind: 13, arrayValueType: copyTree__lisp_u2692(Temporary17.arrayValueType), line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null};
      break;
    case 7:
      result_570428038 = {kind: 7, enumTypeValues: [], line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), tableKeyType: null, tableValueType: null, arrayValueType: null};
      var Temporary18 = result_570428038;
      if (ConstSet287[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'enumTypeValues\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI570425392)); }
      Label19: {
        var Temporary20 = n_p0;
        if (ConstSet288[Temporary20.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'enumTypeValues\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary20.kind, NTI570425392)); }
        var HEX3Atmp_570429216 = nimCopy(null, Temporary20.enumTypeValues, NTI570425465);
        var iHEX60gensym130_570429223 = 0;
        var resultHEX60gensym130_570429252 = newSeq__lisp_u3899(chckRange((HEX3Atmp_570429216).length, 0, 2147483647));
        Label21: {
          var it_570429256 = null;
          var i_570442510 = 0;
          var L_570442511 = (HEX3Atmp_570429216).length;
          Label22: {
              Label23: while (true) {
              if (!(i_570442510 < L_570442511)) break Label23;
                it_570429256 = HEX3Atmp_570429216[chckIndx(i_570442510, 0, (HEX3Atmp_570429216).length - 1)];
                resultHEX60gensym130_570429252[chckIndx(iHEX60gensym130_570429223, 0, (resultHEX60gensym130_570429252).length - 1)] = copyTree__lisp_u2692(it_570429256);
                iHEX60gensym130_570429223 = addInt(iHEX60gensym130_570429223, 1);
                i_570442510 += 1;
                if (!(((HEX3Atmp_570429216).length == L_570442511))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      Temporary18.enumTypeValues = nimCopy(null, resultHEX60gensym130_570429252, NTI570427886);
      break;
    case 14:
      result_570428038 = {kind: n_p0.kind, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 0:
      var Temporary24 = n_p0;
      if (ConstSet289[Temporary24.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary24.kind, NTI570425392)); }
      result_570428038 = {kind: 0, sym: nimCopy(null, Temporary24.sym, NTI33554449), line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 3:
      var Temporary25 = n_p0;
      if (ConstSet290[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'keyword\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI570425392)); }
      result_570428038 = {kind: 3, keyword: Temporary25.keyword, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 10:
      var Temporary26 = n_p0;
      if (ConstSet291[Temporary26.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'dot\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary26.kind, NTI570425392)); }
      result_570428038 = {kind: 10, dot: nimCopy(null, Temporary26.dot, NTI33554449), line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 5:
      var Temporary27 = n_p0;
      if (ConstSet292[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI570425392)); }
      result_570428038 = {kind: 5, atomicType: Temporary27.atomicType, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 9:
      var Temporary28 = n_p0;
      if (ConstSet293[Temporary28.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary28.kind, NTI570425392)); }
      result_570428038 = {kind: 9, atomicKind: Temporary28.atomicKind, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      var Temporary29 = n_p0;
      if (ConstSet294[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI570425392)); }
      switch (Temporary29.atomicKind) {
      case 0:
        var Temporary30 = result_570428038;
        if (ConstSet295[Temporary30.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary30.atomicKind, NTI570425391)); }
        var Temporary31 = n_p0;
        if (ConstSet296[Temporary31.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary31.atomicKind, NTI570425391)); }
        Temporary30.num = Temporary31.num;
        break;
      case 1:
        var Temporary32 = result_570428038;
        if (ConstSet297[Temporary32.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary32.atomicKind, NTI570425391)); }
        var Temporary33 = n_p0;
        if (ConstSet298[Temporary33.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary33.atomicKind, NTI570425391)); }
        Temporary32.str = nimCopy(null, Temporary33.str, NTI33554449);
        break;
      case 2:
        var Temporary34 = result_570428038;
        if (ConstSet299[Temporary34.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolean\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary34.atomicKind, NTI570425391)); }
        var Temporary35 = n_p0;
        if (ConstSet300[Temporary35.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolean\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary35.atomicKind, NTI570425391)); }
        Temporary34.boolean = Temporary35.boolean;
        break;
      }
      break;
    case 1:
      result_570428038 = {kind: 1, kids: [], listType: null, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      var Temporary36 = result_570428038;
      if (ConstSet301[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI570425392)); }
      Label37: {
        var Temporary38 = n_p0;
        if (ConstSet302[Temporary38.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary38.kind, NTI570425392)); }
        var HEX3Atmp_570429279 = nimCopy(null, Temporary38.kids, NTI570425437);
        var iHEX60gensym135_570429282 = 0;
        var resultHEX60gensym135_570429306 = newSeq__lisp_u3899(chckRange((HEX3Atmp_570429279).length, 0, 2147483647));
        Label39: {
          var it_570429310 = null;
          var i_570442515 = 0;
          var L_570442516 = (HEX3Atmp_570429279).length;
          Label40: {
              Label41: while (true) {
              if (!(i_570442515 < L_570442516)) break Label41;
                it_570429310 = HEX3Atmp_570429279[chckIndx(i_570442515, 0, (HEX3Atmp_570429279).length - 1)];
                resultHEX60gensym135_570429306[chckIndx(iHEX60gensym135_570429282, 0, (resultHEX60gensym135_570429306).length - 1)] = copyTree__lisp_u2692(it_570429310);
                iHEX60gensym135_570429282 = addInt(iHEX60gensym135_570429282, 1);
                i_570442515 += 1;
                if (!(((HEX3Atmp_570429279).length == L_570442516))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      Temporary36.kids = nimCopy(null, resultHEX60gensym135_570429306, NTI570427886);
      break;
    case 4:
      result_570428038 = {kind: 4, tableVal: ({data: [], counter: 0}), tableType: null, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      var Temporary42 = result_570428038;
      if (ConstSet303[Temporary42.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableVal\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary42.kind, NTI570425392)); }
      var collectResult_570429315 = [initTable__lisp_u3996(32)];
      Label43: {
        var k_570429362 = null;
        var v_570429363 = null;
        var colontmp__570442519 = ({data: [], counter: 0});
        var Temporary44 = n_p0;
        if (ConstSet304[Temporary44.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableVal\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary44.kind, NTI570425392)); }
        colontmp__570442519 = nimCopy(colontmp__570442519, Temporary44.tableVal, NTI570425445);
        var L_570442520 = len__lisp_u1038(colontmp__570442519);
        Label45: {
          var h_570442522 = 0;
          var colontmp__570442523 = 0;
          colontmp__570442523 = (colontmp__570442519.data).length - 1;
          var res_570442524 = 0;
          Label46: {
              Label47: while (true) {
              if (!(res_570442524 <= colontmp__570442523)) break Label47;
                h_570442522 = res_570442524;
                if (isFilled__pureZcollectionsZtables_u31(colontmp__570442519.data[chckIndx(h_570442522, 0, (colontmp__570442519.data).length - 1)].Field0)) {
                k_570429362 = colontmp__570442519.data[chckIndx(h_570442522, 0, (colontmp__570442519.data).length - 1)].Field1;
                v_570429363 = colontmp__570442519.data[chckIndx(h_570442522, 0, (colontmp__570442519.data).length - 1)].Field2;
                HEX5BHEX5DHEX3D__lisp_u4056(collectResult_570429315[0], copyTree__lisp_u2692(k_570429362), copyTree__lisp_u2692(v_570429363));
                if (!((len__lisp_u1038(colontmp__570442519) == L_570442520))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_570442524 = addInt(res_570442524, 1);
              }
          };
        };
      };
      Temporary42.tableVal = nimCopy(Temporary42.tableVal, collectResult_570429315[0], NTI570425445);
      break;
    case 2:
      result_570428038 = {kind: 2, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      var Temporary48 = result_570428038;
      if (ConstSet305[Temporary48.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcParams\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary48.kind, NTI570425392)); }
      var Temporary49 = n_p0;
      if (ConstSet306[Temporary49.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcParams\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary49.kind, NTI570425392)); }
      Temporary48.funcParams = nimCopy(null, Temporary49.funcParams, NTI570425452);
      var Temporary50 = result_570428038;
      if (ConstSet307[Temporary50.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcTypes\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary50.kind, NTI570425392)); }
      Label51: {
        var Temporary52 = n_p0;
        if (ConstSet308[Temporary52.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcTypes\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary52.kind, NTI570425392)); }
        var HEX3Atmp_570430379 = nimCopy(null, Temporary52.funcTypes, NTI570425453);
        var iHEX60gensym153_570430382 = 0;
        var resultHEX60gensym153_570430406 = newSeq__lisp_u3899(chckRange((HEX3Atmp_570430379).length, 0, 2147483647));
        Label53: {
          var it_570430410 = null;
          var i_570442528 = 0;
          var L_570442529 = (HEX3Atmp_570430379).length;
          Label54: {
              Label55: while (true) {
              if (!(i_570442528 < L_570442529)) break Label55;
                it_570430410 = HEX3Atmp_570430379[chckIndx(i_570442528, 0, (HEX3Atmp_570430379).length - 1)];
                resultHEX60gensym153_570430406[chckIndx(iHEX60gensym153_570430382, 0, (resultHEX60gensym153_570430406).length - 1)] = copyTree__lisp_u2692(it_570430410);
                iHEX60gensym153_570430382 = addInt(iHEX60gensym153_570430382, 1);
                i_570442528 += 1;
                if (!(((HEX3Atmp_570430379).length == L_570442529))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      Temporary50.funcTypes = nimCopy(null, resultHEX60gensym153_570430406, NTI570427886);
      var Temporary56 = result_570428038;
      if (ConstSet309[Temporary56.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcReturnType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary56.kind, NTI570425392)); }
      var Temporary57 = n_p0;
      if (ConstSet310[Temporary57.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcReturnType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary57.kind, NTI570425392)); }
      Temporary56.funcReturnType = copyTree__lisp_u2692(Temporary57.funcReturnType);
      var Temporary58 = result_570428038;
      if (ConstSet311[Temporary58.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcBody\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary58.kind, NTI570425392)); }
      var Temporary59 = n_p0;
      if (ConstSet312[Temporary59.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcBody\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary59.kind, NTI570425392)); }
      Temporary58.funcBody = copyTree__lisp_u2692(Temporary59.funcBody);
        var Temporary60 = n_p0;
        if (ConstSet313[Temporary60.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcObj\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary60.kind, NTI570425392)); }
      if (!((Temporary60.funcObj == null))) {
      var Temporary61 = result_570428038;
      if (ConstSet314[Temporary61.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcObj\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary61.kind, NTI570425392)); }
      var Temporary62 = n_p0;
      if (ConstSet315[Temporary62.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcObj\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary62.kind, NTI570425392)); }
      Temporary61.funcObj = Temporary62.funcObj;
      }
      
      break;
    case 11:
      result_570428038 = {kind: 11, templateParams: [], templateBody: null, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      var Temporary63 = result_570428038;
      if (ConstSet316[Temporary63.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'templateParams\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary63.kind, NTI570425392)); }
      var Temporary64 = n_p0;
      if (ConstSet317[Temporary64.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'templateParams\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary64.kind, NTI570425392)); }
      Temporary63.templateParams = nimCopy(null, Temporary64.templateParams, NTI570425454);
      var Temporary65 = result_570428038;
      if (ConstSet318[Temporary65.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'templateBody\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary65.kind, NTI570425392)); }
      var Temporary66 = n_p0;
      if (ConstSet319[Temporary66.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'templateBody\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary66.kind, NTI570425392)); }
      Temporary65.templateBody = copyTree__lisp_u2692(Temporary66.templateBody);
      break;
    case 6:
      result_570428038 = {kind: 6, objectTypeFields: ({data: [], counter: 0}), line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      var Temporary67 = result_570428038;
      if (ConstSet320[Temporary67.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectTypeFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary67.kind, NTI570425392)); }
      var collectResult_570430418 = [initTable__lisp_u2737(32)];
      Label68: {
        var k_570430451 = [];
        var v_570430452 = null;
        var colontmp__570442532 = ({data: [], counter: 0});
        var Temporary69 = n_p0;
        if (ConstSet321[Temporary69.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectTypeFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary69.kind, NTI570425392)); }
        colontmp__570442532 = nimCopy(colontmp__570442532, Temporary69.objectTypeFields, NTI570425415);
        var L_570442533 = len__lisp_u498(colontmp__570442532);
        Label70: {
          var h_570442535 = 0;
          var colontmp__570442536 = 0;
          colontmp__570442536 = (colontmp__570442532.data).length - 1;
          var res_570442537 = 0;
          Label71: {
              Label72: while (true) {
              if (!(res_570442537 <= colontmp__570442536)) break Label72;
                h_570442535 = res_570442537;
                if (isFilled__pureZcollectionsZtables_u31(colontmp__570442532.data[chckIndx(h_570442535, 0, (colontmp__570442532.data).length - 1)].Field0)) {
                k_570430451 = colontmp__570442532.data[chckIndx(h_570442535, 0, (colontmp__570442532.data).length - 1)].Field1;
                v_570430452 = colontmp__570442532.data[chckIndx(h_570442535, 0, (colontmp__570442532.data).length - 1)].Field2;
                HEX5BHEX5DHEX3D__lisp_u2797(collectResult_570430418[0], k_570430451, copyTree__lisp_u2692(v_570430452));
                if (!((len__lisp_u498(colontmp__570442532) == L_570442533))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_570442537 = addInt(res_570442537, 1);
              }
          };
        };
      };
      Temporary67.objectTypeFields = nimCopy(Temporary67.objectTypeFields, collectResult_570430418[0], NTI570425415);
      break;
    case 8:
      result_570428038 = {kind: 8, objectType: null, objectFields: ({data: [], counter: 0}), line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      var Temporary73 = result_570428038;
      if (ConstSet322[Temporary73.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary73.kind, NTI570425392)); }
      var Temporary74 = n_p0;
      if (ConstSet323[Temporary74.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary74.kind, NTI570425392)); }
      Temporary73.objectType = copyTree__lisp_u2692(Temporary74.objectType);
      var Temporary75 = result_570428038;
      if (ConstSet324[Temporary75.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary75.kind, NTI570425392)); }
      var collectResult_570430495 = [initTable__lisp_u2737(32)];
      Label76: {
        var k_570430528 = [];
        var v_570430529 = null;
        var colontmp__570442540 = ({data: [], counter: 0});
        var Temporary77 = n_p0;
        if (ConstSet325[Temporary77.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary77.kind, NTI570425392)); }
        colontmp__570442540 = nimCopy(colontmp__570442540, Temporary77.objectFields, NTI570425415);
        var L_570442541 = len__lisp_u498(colontmp__570442540);
        Label78: {
          var h_570442543 = 0;
          var colontmp__570442544 = 0;
          colontmp__570442544 = (colontmp__570442540.data).length - 1;
          var res_570442545 = 0;
          Label79: {
              Label80: while (true) {
              if (!(res_570442545 <= colontmp__570442544)) break Label80;
                h_570442543 = res_570442545;
                if (isFilled__pureZcollectionsZtables_u31(colontmp__570442540.data[chckIndx(h_570442543, 0, (colontmp__570442540.data).length - 1)].Field0)) {
                k_570430528 = colontmp__570442540.data[chckIndx(h_570442543, 0, (colontmp__570442540.data).length - 1)].Field1;
                v_570430529 = colontmp__570442540.data[chckIndx(h_570442543, 0, (colontmp__570442540.data).length - 1)].Field2;
                HEX5BHEX5DHEX3D__lisp_u2797(collectResult_570430495[0], k_570430528, copyTree__lisp_u2692(v_570430529));
                if (!((len__lisp_u498(colontmp__570442540) == L_570442541))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_570442545 = addInt(res_570442545, 1);
              }
          };
        };
      };
      Temporary75.objectFields = nimCopy(Temporary75.objectFields, collectResult_570430495[0], NTI570425415);
      break;
    }
    result_570428038.line = n_p0.line;
    result_570428038.tags = nimCopy(result_570428038.tags, n_p0.tags, NTI570425407);

  return result_570428038;

}

function contains__lisp_u8576(t_p0, key_p1) {
  var result_570433925 = false;

  BeforeRet: {
    result_570433925 = hasKey__lisp_u1648(t_p0, key_p1);
    break BeforeRet;
  };

  return result_570433925;

}

function convertValueToType__lisp_u8486(val_p0, typ_p1) {
        var Temporary2;
              var Temporary5;
              var Temporary6;
        var Temporary8;
        var Temporary12;
      var Temporary13;

  var result_570433833 = null;

    if (!(!((val_p0 == null)))) {
    failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,57,52,53,44,32,51,41,32,96,110,111,116,32,105,115,78,105,108,40,118,97,108,41,96,32]);
    }
    
    if (!(!((typ_p1 == null)))) {
    failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,57,52,54,44,32,51,41,32,96,110,111,116,32,105,115,78,105,108,40,116,121,112,41,96,32]);
    }
    
    if (!(!((!((val_p0.kind == 16)) && (typ_p1.kind == 15))))) {
    var inst_570433859 = {Field0: [108,105,115,112,46,110,105,109], Field1: 948, Field2: 5};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433859.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(val_p0.line),[41,58,32,85,110,117,115,101,100,32,40,110,111,110,45,118,111,105,100,41,32,118,97,108,117,101,32,109,117,115,116,32,98,101,32,100,105,115,99,97,114,100,101,100,32,109,97,110,117,97,108,108,121,46]));
    }
    
    if (!(canConvertToType__lisp_u8439(val_p0, typ_p1))) {
    var inst_570433864 = {Field0: [108,105,115,112,46,110,105,109], Field1: 951, Field2: 5};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433864.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(val_p0.line),[41,58,32],([67,97,110,39,116,32,99,111,110,118,101,114,116,32,118,97,108,117,101,32,102,114,111,109,32,116,121,112,101,32]).concat(HEX24__lisp_u6182(getType__lisp_u8338(val_p0)),[32,116,111,32,116,121,112,101,32],HEX24__lisp_u6182(typ_p1),[58,32],reprAny(val_p0, null, NTI570425393))));
    }
    
    switch (typ_p1.kind) {
    case 7:
      result_570433833 = copyTree__lisp_u2692(val_p0);
      result_570433833.enumType = typ_p1;
      break;
    case 1:
      result_570433833 = {kind: 1, listType: typ_p1, kids: [], line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      Label1: {
        var k_570433868 = null;
        var colontmp__570442555 = [];
        var Temporary2 = val_p0;
        if (ConstSet340[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI570425392)); }
        colontmp__570442555 = Temporary2.kids;
        var i_570442556 = 0;
        var L_570442557 = (colontmp__570442555).length;
        Label3: {
            Label4: while (true) {
            if (!(i_570442556 < L_570442557)) break Label4;
              k_570433868 = colontmp__570442555[chckIndx(i_570442556, 0, (colontmp__570442555).length - 1)];
              var Temporary5 = result_570433833;
              if (ConstSet341[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI570425392)); }
              var Temporary6 = typ_p1;
              if (ConstSet342[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'listType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI570425392)); }
              Temporary5.kids.push(convertValueToType__lisp_u8486(k_570433868, Temporary6.listType));;
              i_570442556 += 1;
              if (!(((colontmp__570442555).length == L_570442557))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 12:
      var newTable_570433875 = [({data: [], counter: 0})];
      Label7: {
        var k_570433880 = null;
        var v_570433881 = null;
        var colontmp__570442560 = ({data: [], counter: 0});
        var Temporary8 = val_p0;
        if (ConstSet343[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableVal\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI570425392)); }
        colontmp__570442560 = nimCopy(colontmp__570442560, Temporary8.tableVal, NTI570425445);
        var L_570442561 = len__lisp_u1038(colontmp__570442560);
        Label9: {
          var h_570442563 = 0;
          var colontmp__570442564 = 0;
          colontmp__570442564 = (colontmp__570442560.data).length - 1;
          var res_570442565 = 0;
          Label10: {
              Label11: while (true) {
              if (!(res_570442565 <= colontmp__570442564)) break Label11;
                h_570442563 = res_570442565;
                if (isFilled__pureZcollectionsZtables_u31(colontmp__570442560.data[chckIndx(h_570442563, 0, (colontmp__570442560.data).length - 1)].Field0)) {
                k_570433880 = colontmp__570442560.data[chckIndx(h_570442563, 0, (colontmp__570442560.data).length - 1)].Field1;
                v_570433881 = colontmp__570442560.data[chckIndx(h_570442563, 0, (colontmp__570442560.data).length - 1)].Field2;
                if (!(!(contains__lisp_u8576(newTable_570433875[0], k_570433880)))) {
                failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,57,54,54,44,32,55,41,32,96,110,111,116,32,99,111,110,116,97,105,110,115,40,110,101,119,84,97,98,108,101,44,32,107,41,96,32]);
                }
                
                HEX5BHEX5DHEX3D__lisp_u4056(newTable_570433875[0], k_570433880, v_570433881);
                if (!((len__lisp_u1038(colontmp__570442560) == L_570442561))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(709, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_570442565 = addInt(res_570442565, 1);
              }
          };
        };
      };
      result_570433833 = {kind: 4, tableVal: nimCopy(null, newTable_570433875[0], NTI570425445), tableType: typ_p1, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 14:
      result_570433833 = val_p0;
      break;
    case 17:
        var Temporary12 = val_p0;
        if (ConstSet344[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjMethods\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI570425392)); }
      if (!((0 < len__lisp_u498(Temporary12.classObjMethods)))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,57,55,50,44,32,53,41,32,96,10,48,32,60,32,108,101,110,40,118,97,108,46,99,108,97,115,115,79,98,106,77,101,116,104,111,100,115,41,96,32]);
      }
      
      result_570433833 = copyTree__lisp_u2692(val_p0);
      var Temporary13 = result_570433833;
      if (ConstSet345[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI570425392)); }
      Temporary13.classObjType = typ_p1;
      break;
    default: 
      if (!(HEX3DHEX3D__lisp_u1499(typ_p1, getType__lisp_u8338(val_p0)))) {
      var inst_570434043 = {Field0: [108,105,115,112,46,110,105,109], Field1: 979, Field2: 7};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434043.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(val_p0.line),[41,58,32,73,110,116,101,114,110,97,108,32,101,114,114,111,114,58,32],HEX24__lisp_u6182(typ_p1)));
      }
      
      result_570433833 = val_p0;
      break;
    }

  return result_570433833;

}

function ast__lisp_u2683(b_p0) {
  var result_570428029 = null;

    result_570428029 = {kind: 9, atomicKind: 2, boolean: b_p0, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, num: 0.0, str: [], sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};

  return result_570428029;

}

function astList__lisp_u2689(nodes_p0) {
  var result_570428035 = null;

    result_570428035 = {kind: 1, kids: nimCopy(null, nodes_p0, NTI570427200), listType: null, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};

  return result_570428035;

}

function HEX26__lisp_u9811(x_p0, y_p1) {
  var result_570435159 = [];

    result_570435159 = new Array(chckRange(addInt((x_p0).length, (y_p1).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_p0).length, (y_p1).length), 0, 2147483647) ; ++i) { result_570435159[i] = null; }    Label1: {
      var i_570435177 = 0;
      var colontmp__570442686 = 0;
      colontmp__570442686 = subInt((x_p0).length, 1);
      var res_570442687 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570442687 <= colontmp__570442686)) break Label3;
            i_570435177 = res_570442687;
            result_570435159[chckIndx(i_570435177, 0, (result_570435159).length - 1)] = x_p0[chckIndx(i_570435177, 0, (x_p0).length - 1)];
            res_570442687 = addInt(res_570442687, 1);
          }
      };
    };
    Label4: {
      var i_570435185 = 0;
      var colontmp__570442690 = 0;
      colontmp__570442690 = subInt((y_p1).length, 1);
      var res_570442691 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_570442691 <= colontmp__570442690)) break Label6;
            i_570435185 = res_570442691;
            result_570435159[chckIndx(addInt(i_570435185, (x_p0).length), 0, (result_570435159).length - 1)] = y_p1[chckIndx(i_570435185, 0, (y_p1).length - 1)];
            res_570442691 = addInt(res_570442691, 1);
          }
      };
    };

  return result_570435159;

}

function ast__lisp_u2661(m_p0) {
  var result_570428007 = null;

    result_570428007 = {kind: 3, keyword: m_p0, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};

  return result_570428007;

}

function isNimException__system_u2017() {
    return lastJSError && lastJSError.m_type;

  
}

function getBool__lisp_u8125(n_p0) {
      var Temporary1;
    var Temporary2;
    var Temporary3;

  var result_570433471 = false;

    var nHEX60gensym349_570433474 = n_p0;
    var kindHEX60gensym349_570433475 = 2;
    var nHEX60gensym350_570433478 = nHEX60gensym349_570433474;
    var kindHEX60gensym350_570433479 = 9;
    var nHEX60gensym351_570433481 = nHEX60gensym350_570433478;
    if (!(!((nHEX60gensym351_570433481 == null)))) {
    var inst_570433486 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433486.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym351_570433481.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
    }
    
    if (!((nHEX60gensym350_570433478.kind == kindHEX60gensym350_570433479))) {
    var inst_570433501 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433501.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym350_570433478.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym350_570433479, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym350_570433478.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym350_570433478)));
    }
    
      var Temporary1 = nHEX60gensym349_570433474;
      if (ConstSet412[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI570425392)); }
    if (!((Temporary1.atomicKind == kindHEX60gensym349_570433475))) {
    var inst_570433513 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
    var Temporary2 = nHEX60gensym349_570433474;
    if (ConstSet413[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI570425392)); }
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570433513.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym349_570433474.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym349_570433475, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary2.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym349_570433474)));
    }
    
    var Temporary3 = n_p0;
    if (ConstSet414[Temporary3.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolean\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary3.atomicKind, NTI570425391)); }
    result_570433471 = Temporary3.boolean;

  return result_570433471;

}

function HEX5BHEX5D__lisp_u10516(s_p0, i_p1) {
  var result_570435864 = null;
  var result_570435864_Idx = 0;

    result_570435864 = s_p0; result_570435864_Idx = chckIndx(subInt((s_p0).length, i_p1), 0, (s_p0).length - 1);

  return [result_570435864, result_570435864_Idx];

}

function delete__lisp_u10553(x_p0, x_p0_Idx, i_p1) {
    if (((x_p0[x_p0_Idx]).length - 1 < i_p1)) {
    raiseException({message: ([105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,58,32,39]).concat(HEX24__systemZdollars_u8(i_p1),[39,32,60,32,39],HEX24__systemZdollars_u8((x_p0[x_p0_Idx]).length),[39,32,102,97,105,108,101,100]), m_type: NTI134217749, parent: null, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    x_p0[x_p0_Idx].splice(i_p1, 1);

  
}

function ast__lisp_u2680(num_p0) {
  var result_570428026 = null;

    result_570428026 = {kind: 9, atomicKind: 0, num: num_p0, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};

  return result_570428026;

}

function isKind__lisp_u288(n_p0, at_p1) {
    var Temporary1;

  var result_570425635 = false;

    result_570425635 = false;
    if ((n_p0.kind == 9)) {
    var Temporary1 = n_p0;
    if (ConstSet424[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI570425392)); }
    result_570425635 = (Temporary1.atomicKind == 1);
    }
    

  return result_570425635;

}

function HEX2BHEX3D__pureZstrutils_u2340(x_p0, x_p0_Idx, y_p1) {
    x_p0[x_p0_Idx] = (x_p0[x_p0_Idx] + y_p1);

  
}

function HEX2DHEX3D__lisp_u11428(x_p0, x_p0_Idx, y_p1) {
    x_p0[x_p0_Idx] = (x_p0[x_p0_Idx] - y_p1);

  
}

function ast__lisp_u2686(s_p0) {
  var result_570428032 = null;

    result_570428032 = {kind: 9, atomicKind: 1, str: nimCopy(null, s_p0, NTI33554449), line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, num: 0.0, boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};

  return result_570428032;

}

function find__lisp_u12856(a_p0, item_p1) {
  var result_570438205 = 0;

  BeforeRet: {
    result_570438205 = 0;
    Label1: {
      var i_570438209 = 0;
      var i_570442700 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570442700 < (a_p0).length)) break Label3;
            i_570438209 = a_p0[chckIndx(i_570442700, 0, (a_p0).length - 1)];
            if ((i_570438209 == item_p1)) {
            break BeforeRet;
            }
            
            result_570438205 = addInt(result_570438205, 1);
            i_570442700 += 1;
          }
      };
    };
    result_570438205 = (-1);
  };

  return result_570438205;

}

function contains__lisp_u12851(a_p0, item_p1) {
  var result_570438199 = false;

  BeforeRet: {
    result_570438199 = (0 <= find__lisp_u12856(a_p0, item_p1));
    break BeforeRet;
  };

  return result_570438199;

}

function evaluateKeywordCall__lisp_u9367(s_p0, n_p1) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;
    var Temporary7;
        var Temporary8;
        var Temporary9;
      var Temporary10;
        var Temporary11;
        var Temporary12;
      var Temporary13;
        var Temporary14;
        var Temporary15;
        var Temporary16;
        var Temporary17;
      var Temporary18;
                var Temporary22;
              var Temporary23;
              var Temporary24;
                var Temporary26;
                      var Temporary29;
                var Temporary30;
              var Temporary34;
                var Temporary38;
              var Temporary39;
                var Temporary40;
                var Temporary41;
              var Temporary42;
      var Temporary44;
              var Temporary48;
              var Temporary49;
        var Temporary50;
      var Temporary51;
        var Temporary52;
      var Temporary53;
      var Temporary54;
      var Temporary55;
        var Temporary56;
      var Temporary57;
        var Temporary58;
      var Temporary59;
      var Temporary60;
      var Temporary61;
        var Temporary62;
      var Temporary63;
        var Temporary64;
      var Temporary65;
      var Temporary66;
      var Temporary67;
        var Temporary68;
      var Temporary69;
        var Temporary70;
      var Temporary71;
      var Temporary72;
      var Temporary73;
              var Temporary77;
        var Temporary79;
        var Temporary83;
                var Temporary87;
      var Temporary88;
              var Temporary92;
        var Temporary94;
                var Temporary100;
                var Temporary101;
                var Temporary102;
                var Temporary103;
                  var Temporary104;
      var Temporary105;
      var Temporary106;
        var Temporary107;
      var Temporary108;
      var Temporary109;
        var Temporary110;
      var Temporary111;
                var Temporary115;
              var Temporary116;
              var Temporary117;
              var Temporary118;
        var Temporary119;
      var Temporary120;
                var Temporary124;
              var Temporary125;
              var Temporary126;
              var Temporary127;
              var Temporary131;
              var Temporary135;
      var Temporary136;
      var Temporary137;
      var Temporary138;
        var Temporary140;
        var Temporary141;
              var Temporary144;
        var Temporary145;
      var Temporary146;
                var Temporary150;
              var Temporary151;
              var Temporary152;
              var Temporary153;
              var Temporary154;
      var Temporary155;
              var Temporary159;
                  var Temporary160;
                  var Temporary161;
                  var Temporary162;
                var Temporary163;
                var Temporary164;
                var Temporary165;
                  var Temporary166;
                  var Temporary167;
                  var Temporary168;
                var Temporary169;
                var Temporary170;
                var Temporary171;
                var Temporary172;
      var Temporary173;
      var Temporary174;
        var Temporary176;
                var Temporary179;
              var Temporary180;
              var Temporary181;
                var Temporary182;
                var Temporary183;
              var Temporary184;
              var Temporary185;
              var Temporary186;
              var Temporary187;
              var Temporary188;
      var Temporary189;
      var Temporary190;
      var Temporary191;
      var Temporary192;
                var Temporary196;
              var Temporary197;
              var Temporary198;
              var Temporary199;
              var Temporary200;
              var Temporary201;
        var Temporary206;
      var Temporary207;
      var Temporary208;
        var Temporary210;
              var Temporary213;
                  var Temporary215;
                var Temporary216;
                var Temporary217;
                var Temporary218;
                var Temporary219;
                var Temporary220;
      var Temporary222;
        var Temporary223;
        var Temporary224;
      var Temporary225;
      var Temporary226;
      var Temporary227;
        var Temporary228;
        var Temporary230;
                var Temporary233;
              var Temporary234;
                var Temporary235;
              var Temporary236;
      var Temporary237;
      var Temporary238;
      var Temporary239;
                var Temporary247;
              var Temporary248;
      var Temporary249;
        var Temporary250;
                var Temporary254;
                var Temporary255;
              var Temporary259;
              var Temporary260;

  var result_570434714 = null;

    if (!((n_p1.kind == 1))) {
    var inst_570434721 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1083, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434721.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
    }
    
      var Temporary1 = n_p1;
      if (ConstSet355[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI570425392)); }
    if (!((0 < (Temporary1.kids).length))) {
    var inst_570434727 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1084, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434727.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
    }
    
      var Temporary2 = n_p1;
      if (ConstSet356[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI570425392)); }
    if (!(((Temporary3 = Temporary2.kids, Temporary3)[chckIndx(0, 0, (Temporary3).length - 1)].kind == 3))) {
    var inst_570434734 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1085, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434734.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
    }
    
    var Temporary4 = n_p1;
    if (ConstSet357[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI570425392)); }
    var args_570434767 = HEX5BHEX5D__lisp_u9400(Temporary4.kids, HEX2EHEX2E__stdZenumutils_u105(1, 1));
    var Temporary5 = n_p1;
    if (ConstSet359[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI570425392)); }
    var Temporary7 = (Temporary6 = Temporary5.kids, Temporary6)[chckIndx(0, 0, (Temporary6).length - 1)];
    if (ConstSet358[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'keyword\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI570425392)); }
    switch (Temporary7.keyword) {
    case 54:
      if (!(((args_570434767).length == 0))) {
      var inst_570434773 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1091, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434773.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
      }
      
      raiseException({m_type: NTI570425401, parent: null, name: null, message: [], trace: [], up: null}, "Continue:ObjectType");
      break;
    case 55:
      if (!(((args_570434767).length == 0))) {
      var inst_570434779 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1094, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434779.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
      }
      
      raiseException({m_type: NTI570425400, parent: null, name: null, message: [], trace: [], up: null}, "Break:ObjectType");
      break;
    case 53:
      if (!(((args_570434767).length == 2))) {
      var inst_570434785 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1097, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434785.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
      }
      
      var table_570434786 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var key_570434787 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      var nHEX60gensym513_570434790 = table_570434786;
      var kindHEX60gensym513_570434791 = 4;
      var nHEX60gensym514_570434793 = nHEX60gensym513_570434790;
      if (!(!((nHEX60gensym514_570434793 == null)))) {
      var inst_570434798 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434798.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym514_570434793.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym513_570434790.kind == kindHEX60gensym513_570434791))) {
      var inst_570434813 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434813.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym513_570434790.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym513_570434791, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym513_570434790.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym513_570434790)));
      }
      
        var Temporary8 = table_570434786;
        if (ConstSet361[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI570425392)); }
        var Temporary9 = Temporary8.tableType;
        if (ConstSet360[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableKeyType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI570425392)); }
      if (!(canConvertToType__lisp_u8439(key_570434787, Temporary9.tableKeyType))) {
      var inst_570434815 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1103, Field2: 7};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434815.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(key_570434787.line),[41,58,32,73,110,118,97,108,105,100,32,107,101,121,32,116,121,112,101]));
      }
      
      var Temporary10 = table_570434786;
      if (ConstSet362[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableVal\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI570425392)); }
      result_570434714 = ast__lisp_u2683(hasKey__lisp_u1648(Temporary10.tableVal, key_570434787));
      break;
    case 52:
      if (!(((args_570434767).length == 2))) {
      var inst_570434862 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1108, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434862.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
      }
      
      var table_570434863 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var key_570434864 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      var nHEX60gensym520_570434867 = table_570434863;
      var kindHEX60gensym520_570434868 = 4;
      var nHEX60gensym521_570434870 = nHEX60gensym520_570434867;
      if (!(!((nHEX60gensym521_570434870 == null)))) {
      var inst_570434875 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434875.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym521_570434870.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym520_570434867.kind == kindHEX60gensym520_570434868))) {
      var inst_570434890 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434890.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym520_570434867.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym520_570434868, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym520_570434867.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym520_570434867)));
      }
      
        var Temporary11 = table_570434863;
        if (ConstSet364[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI570425392)); }
        var Temporary12 = Temporary11.tableType;
        if (ConstSet363[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableKeyType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI570425392)); }
      if (!(canConvertToType__lisp_u8439(key_570434864, Temporary12.tableKeyType))) {
      var inst_570434892 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1114, Field2: 7};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434892.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(key_570434864.line),[41,58,32,73,110,118,97,108,105,100,32,107,101,121,32,116,121,112,101]));
      }
      
      var Temporary13 = table_570434863;
      if (ConstSet365[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableVal\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI570425392)); }
      result_570434714 = getOrDefault__lisp_u1925(Temporary13.tableVal, key_570434864);
      if (!(!(HEX3DHEX3D__lisp_u1499(result_570434714, null)))) {
      var inst_570434961 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1118, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434961.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,75,101,121,32,110,111,116,32,102,111,117,110,100,58,32],HEX24__lisp_u6182(key_570434864)));
      }
      
      break;
    case 51:
      if (!(((args_570434767).length == 3))) {
      var inst_570434967 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1120, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434967.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
      }
      
      var table_570434968 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var key_570434969 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      var val_570434970 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(2, 0, (args_570434767).length - 1)]);
      var nHEX60gensym529_570434973 = table_570434968;
      var kindHEX60gensym529_570434974 = 4;
      var nHEX60gensym530_570434976 = nHEX60gensym529_570434973;
      if (!(!((nHEX60gensym530_570434976 == null)))) {
      var inst_570434981 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434981.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym530_570434976.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym529_570434973.kind == kindHEX60gensym529_570434974))) {
      var inst_570434996 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434996.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym529_570434973.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym529_570434974, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym529_570434973.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym529_570434973)));
      }
      
        var Temporary14 = table_570434968;
        if (ConstSet367[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI570425392)); }
        var Temporary15 = Temporary14.tableType;
        if (ConstSet366[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableKeyType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI570425392)); }
      if (!(canConvertToType__lisp_u8439(key_570434969, Temporary15.tableKeyType))) {
      var inst_570434998 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1127, Field2: 7};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570434998.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(key_570434969.line),[41,58,32,73,110,118,97,108,105,100,32,107,101,121,32,116,121,112,101]));
      }
      
        var Temporary16 = table_570434968;
        if (ConstSet369[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI570425392)); }
        var Temporary17 = Temporary16.tableType;
        if (ConstSet368[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI570425392)); }
      if (!(canConvertToType__lisp_u8439(val_570434970, Temporary17.tableValueType))) {
      var inst_570435000 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1128, Field2: 7};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435000.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(val_570434970.line),[41,58,32,73,110,118,97,108,105,100,32,118,97,108,117,101,32,116,121,112,101]));
      }
      
      var Temporary18 = table_570434968;
      if (ConstSet370[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableVal\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI570425392)); }
      HEX5BHEX5DHEX3D__lisp_u4056(Temporary18.tableVal, key_570434969, val_570434970);
      result_570434714 = {kind: 16, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 50:
      if (!((2 <= (args_570434767).length))) {
      var inst_570435048 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1134, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435048.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
      }
      
      var compared_570435049 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      Label19: {
        var b_570435068 = null;
        var colontmp__570442573 = [];
        colontmp__570442573 = HEX5BHEX5D__lisp_u9400(args_570434767, HEX2EHEX2E__stdZenumutils_u105(1, 1));
        var i_570442574 = 0;
        var L_570442575 = (colontmp__570442573).length;
        Label20: {
            Label21: while (true) {
            if (!(i_570442574 < L_570442575)) break Label21;
              b_570435068 = colontmp__570442573[chckIndx(i_570442574, 0, (colontmp__570442573).length - 1)];
              var nHEX60gensym540_570435071 = b_570435068;
              var kindHEX60gensym540_570435072 = 1;
              var nHEX60gensym541_570435074 = nHEX60gensym540_570435071;
              if (!(!((nHEX60gensym541_570435074 == null)))) {
              var inst_570435079 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435079.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym541_570435074.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
              }
              
              if (!((nHEX60gensym540_570435071.kind == kindHEX60gensym540_570435072))) {
              var inst_570435094 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435094.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym540_570435071.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym540_570435072, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym540_570435071.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym540_570435071)));
              }
              
                var Temporary22 = b_570435068;
                if (ConstSet371[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI570425392)); }
              if (!((2 <= (Temporary22.kids).length))) {
              var inst_570435100 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1140, Field2: 7};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435100.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(b_570435068.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
              }
              
              var Temporary23 = b_570435068;
              if (ConstSet372[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI570425392)); }
              var condition_570435101 = (Temporary24 = Temporary23.kids, Temporary24)[chckIndx(0, 0, (Temporary24).length - 1)];
              if ((condition_570435101.kind == 1)) {
              Label25: {
                var it_570435109 = null;
                var colontmp__570442569 = [];
                var Temporary26 = condition_570435101;
                if (ConstSet373[Temporary26.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary26.kind, NTI570425392)); }
                colontmp__570442569 = Temporary26.kids;
                var i_570442570 = 0;
                var L_570442571 = (colontmp__570442569).length;
                Label27: {
                    Label28: while (true) {
                    if (!(i_570442570 < L_570442571)) break Label28;
                      it_570435109 = colontmp__570442569[chckIndx(i_570442570, 0, (colontmp__570442569).length - 1)];
                      var nHEX60gensym547_570435112 = it_570435109;
                      var kindHEX60gensym547_570435113 = 9;
                      var nHEX60gensym548_570435115 = nHEX60gensym547_570435112;
                      if (!(!((nHEX60gensym548_570435115 == null)))) {
                      var inst_570435120 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
                      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435120.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym548_570435115.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
                      }
                      
                      if (!((nHEX60gensym547_570435112.kind == kindHEX60gensym547_570435113))) {
                      var inst_570435135 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
                      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435135.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym547_570435112.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym547_570435113, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym547_570435112.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym547_570435112)));
                      }
                      
                      if (HEX3DHEX3D__lisp_u1499(it_570435109, compared_570435049)) {
                      var Temporary29 = b_570435068;
                      if (ConstSet374[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI570425392)); }
                      result_570434714 = evaluate__lisp_u9364(s_p0, astList__lisp_u2689(HEX26__lisp_u9811([ast__lisp_u2661(8)], HEX5BHEX5D__lisp_u9400(Temporary29.kids, HEX2EHEX2E__stdZenumutils_u105(1, 1)))));
                      break Label25;
                      }
                      
                      i_570442570 += 1;
                      if (!(((colontmp__570442569).length == L_570442571))) {
                      failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              }
              else {
                var nHEX60gensym553_570435191 = condition_570435101;
                var kindHEX60gensym553_570435192 = 9;
                var nHEX60gensym554_570435194 = nHEX60gensym553_570435191;
                if (!(!((nHEX60gensym554_570435194 == null)))) {
                var inst_570435199 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435199.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym554_570435194.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
                }
                
                if (!((nHEX60gensym553_570435191.kind == kindHEX60gensym553_570435192))) {
                var inst_570435214 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435214.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym553_570435191.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym553_570435192, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym553_570435191.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym553_570435191)));
                }
                
                if (HEX3DHEX3D__lisp_u1499(compared_570435049, condition_570435101)) {
                var Temporary30 = b_570435068;
                if (ConstSet375[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI570425392)); }
                result_570434714 = evaluate__lisp_u9364(s_p0, astList__lisp_u2689(HEX26__lisp_u9811([ast__lisp_u2661(8)], HEX5BHEX5D__lisp_u9400(Temporary30.kids, HEX2EHEX2E__stdZenumutils_u105(1, 1)))));
                }
                
              }
              
              i_570442574 += 1;
              if (!(((colontmp__570442573).length == L_570442575))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (!(!(HEX3DHEX3D__lisp_u1499(result_570434714, null)))) {
      var inst_570435239 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1157, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435239.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,78,111,32,109,97,116,99,104,105,110,103,32,99,97,115,101,32,98,114,97,110,99,104,32,102,111,117,110,100,32,102,111,114,58,32],HEX24__lisp_u6182(compared_570435049)));
      }
      
      break;
    case 49:
      if (!(((args_570434767).length == 1))) {
      var inst_570435245 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1159, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435245.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
      }
      
      var valueType_570435246 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      if (!((ConstSet376[valueType_570435246.kind] != undefined))) {
      var inst_570435252 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1162, Field2: 11};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435252.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(args_570434767[chckIndx(0, 0, (args_570434767).length - 1)].line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,116,121,112,101]));
      }
      
      result_570434714 = {kind: 13, arrayValueType: valueType_570435246, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null};
      break;
    case 48:
      if (!(((args_570434767).length == 2))) {
      var inst_570435258 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1167, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435258.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
      }
      
      var keyType_570435259 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var valueType_570435260 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      if (!((ConstSet377[keyType_570435259.kind] != undefined))) {
      var inst_570435266 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1172, Field2: 11};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435266.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(args_570434767[chckIndx(0, 0, (args_570434767).length - 1)].line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,116,121,112,101]));
      }
      
      if (!((ConstSet378[valueType_570435260.kind] != undefined))) {
      var inst_570435272 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1174, Field2: 11};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435272.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(args_570434767[chckIndx(1, 0, (args_570434767).length - 1)].line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,116,121,112,101]));
      }
      
      result_570434714 = {kind: 12, tableKeyType: keyType_570435259, tableValueType: valueType_570435260, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], arrayValueType: null};
      break;
    case 44:
      if (!((1 <= (args_570434767).length))) {
      var inst_570435278 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1179, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435278.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
      }
      
      result_570434714 = {kind: 7, enumTypeValues: [], line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), tableKeyType: null, tableValueType: null, arrayValueType: null};
      Label31: {
        var a_570435282 = null;
        var i_570442578 = 0;
        var L_570442579 = (args_570434767).length;
        Label32: {
            Label33: while (true) {
            if (!(i_570442578 < L_570442579)) break Label33;
              a_570435282 = args_570434767[chckIndx(i_570442578, 0, (args_570434767).length - 1)];
              var a_570435283 = evaluate__lisp_u9364(s_p0, a_570435282);
              var Temporary34 = result_570434714;
              if (ConstSet379[Temporary34.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'enumTypeValues\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary34.kind, NTI570425392)); }
              Temporary34.enumTypeValues.push(a_570435283);;
              i_570442578 += 1;
              if (!(((args_570434767).length == L_570442579))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 46:
    case 47:
      if (true) {
      var inst_570435289 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1187, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435289.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),makeNimstrLit("): Except and finally blocks are not allowed outside of a try block")));
      }
      
      break;
    case 45:
      if (!((1 <= (args_570434767).length))) {
      var inst_570435295 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1190, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435295.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
      }
      
      var body_570435300 = astList__lisp_u2689([ast__lisp_u2661(8)]);
      var exceptBlock_570435301 = null;
      var finallyBlock_570435302 = null;
      Label35: {
        var a_570435306 = null;
        var i_570442582 = 0;
        var L_570442583 = (args_570434767).length;
        Label36: {
            Label37: while (true) {
            if (!(i_570442582 < L_570442583)) break Label37;
              a_570435306 = args_570434767[chckIndx(i_570442582, 0, (args_570434767).length - 1)];
              var didFind_570435307 = false;
              if ((a_570435306.kind == 1)) {
                var Temporary38 = a_570435306;
                if (ConstSet380[Temporary38.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary38.kind, NTI570425392)); }
              if (!((0 < (Temporary38.kids).length))) {
              var inst_570435316 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1201, Field2: 9};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435316.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(a_570435306.line),[41,58,32,69,109,112,116,121,32,108,105,115,116,32,105,115,32,105,110,118,97,108,105,100]));
              }
              
              var Temporary39 = HEX5BHEX5D__lisp_u8216(a_570435306, 0);
              if (ConstSet381[Temporary39.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'keyword\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary39.kind, NTI570425392)); }
              switch (Temporary39.keyword) {
              case 46:
                if (!(HEX3DHEX3D__lisp_u1499(exceptBlock_570435301, null))) {
                var inst_570435318 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1205, Field2: 11};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435318.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(a_570435306.line),[41,58,32,79,110,108,121,32,111,110,101,32,101,120,99,101,112,116,32,98,108,111,99,107,32,97,108,108,111,119,101,100]));
                }
                
                if (!(HEX3DHEX3D__lisp_u1499(finallyBlock_570435302, null))) {
                var inst_570435320 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1207, Field2: 11};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435320.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(a_570435306.line),[41,58,32,70,105,110,97,108,108,121,32,98,108,111,99,107,32,109,117,115,116,32,98,101,32,116,104,101,32,108,97,115,116,32,111,110,101]));
                }
                
                var Temporary40 = a_570435306;
                if (ConstSet382[Temporary40.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary40.kind, NTI570425392)); }
                exceptBlock_570435301 = astList__lisp_u2689(HEX26__lisp_u9811([ast__lisp_u2661(8)], HEX5BHEX5D__lisp_u9400(Temporary40.kids, HEX2EHEX2E__stdZenumutils_u105(1, 1))));
                didFind_570435307 = true;
                break;
              case 47:
                if (!(HEX3DHEX3D__lisp_u1499(finallyBlock_570435302, null))) {
                var inst_570435345 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1212, Field2: 11};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435345.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(a_570435306.line),[41,58,32,79,110,108,121,32,111,110,101,32,102,105,110,97,108,108,121,32,98,108,111,99,107,32,97,108,108,111,119,101,100]));
                }
                
                var Temporary41 = a_570435306;
                if (ConstSet383[Temporary41.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary41.kind, NTI570425392)); }
                finallyBlock_570435302 = astList__lisp_u2689(HEX26__lisp_u9811([ast__lisp_u2661(8)], HEX5BHEX5D__lisp_u9400(Temporary41.kids, HEX2EHEX2E__stdZenumutils_u105(1, 1))));
                didFind_570435307 = true;
                break;
              default: 
                break;
              }
              }
              
              if (!(didFind_570435307)) {
              if (!(HEX3DHEX3D__lisp_u1499(exceptBlock_570435301, null))) {
              var inst_570435370 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1220, Field2: 9};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435370.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(a_570435306.line),[41,58,32,69,120,99,101,112,116,32,98,108,111,99,107,32,109,117,115,116,32,98,101,32,100,101,99,108,97,114,101,100,32,97,102,116,101,114,32,116,104,101,32,98,111,100,121]));
              }
              
              if (!(HEX3DHEX3D__lisp_u1499(finallyBlock_570435302, null))) {
              var inst_570435372 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1222, Field2: 9};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435372.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(a_570435306.line),[41,58,32,70,105,110,97,108,108,121,32,98,108,111,99,107,32,109,117,115,116,32,98,101,32,100,101,99,108,97,114,101,100,32,97,102,116,101,114,32,116,104,101,32,98,111,100,121]));
              }
              
              var Temporary42 = body_570435300;
              if (ConstSet384[Temporary42.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary42.kind, NTI570425392)); }
              Temporary42.kids.push(a_570435306);;
              }
              
              i_570442582 += 1;
              if (!(((args_570434767).length == L_570442583))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
++excHandler;
      try {
      result_570434714 = evaluate__lisp_u9364(s_p0, body_570435300);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI570425399))) {
      reraiseException();
      }
      else       if (lastJSError && (isObj(lastJSError.m_type, NTI33555171))) {
      if (!(HEX3DHEX3D__lisp_u1499(exceptBlock_570435301, null))) {
      result_570434714 = evaluate__lisp_u9364(s_p0, exceptBlock_570435301);
      }
      else {
        reraiseException();
      }
      
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      if (!(HEX3DHEX3D__lisp_u1499(finallyBlock_570435302, null))) {
      result_570434714 = evaluate__lisp_u9364(s_p0, finallyBlock_570435302);
      }
      
      }
      break;
    case 43:
      if (!(((args_570434767).length == 2))) {
      var inst_570435381 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1239, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435381.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,100,100,32,116,97,107,101,115,32,101,120,97,99,116,108,121,32,116,119,111,32,97,114,103,117,109,101,110,116,115]));
      }
      
      var a_570435382 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var b_570435383 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      var nHEX60gensym592_570435386 = a_570435382;
      var kindHEX60gensym592_570435387 = 1;
      var nHEX60gensym593_570435389 = nHEX60gensym592_570435386;
      if (!(!((nHEX60gensym593_570435389 == null)))) {
      var inst_570435394 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435394.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym593_570435389.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym592_570435386.kind == kindHEX60gensym592_570435387))) {
      var inst_570435409 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435409.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym592_570435386.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym592_570435387, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym592_570435386.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym592_570435386)));
      }
      
      var Temporary44 = a_570435382;
      if (ConstSet385[Temporary44.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary44.kind, NTI570425392)); }
      Temporary44.kids.push(b_570435383);;
      result_570434714 = {kind: 16, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 56:
      if (!((2 <= (args_570434767).length))) {
      var inst_570435418 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1250, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435418.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,106,111,105,110,45,108,105,115,116,115,32,116,97,107,101,115,32,97,116,32,108,101,97,115,116,32,116,119,111,32,97,114,103,117,109,101,110,116,115]));
      }
      
      result_570434714 = {kind: 1, kids: [], listType: null, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      Label45: {
        var a_570435422 = null;
        var i_570442586 = 0;
        var L_570442587 = (args_570434767).length;
        Label46: {
            Label47: while (true) {
            if (!(i_570442586 < L_570442587)) break Label47;
              a_570435422 = args_570434767[chckIndx(i_570442586, 0, (args_570434767).length - 1)];
              var a_570435423 = evaluate__lisp_u9364(s_p0, a_570435422);
              var nHEX60gensym598_570435426 = a_570435423;
              var kindHEX60gensym598_570435427 = 1;
              var nHEX60gensym599_570435429 = nHEX60gensym598_570435426;
              if (!(!((nHEX60gensym599_570435429 == null)))) {
              var inst_570435434 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435434.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym599_570435429.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
              }
              
              if (!((nHEX60gensym598_570435426.kind == kindHEX60gensym598_570435427))) {
              var inst_570435449 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435449.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym598_570435426.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym598_570435427, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym598_570435426.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym598_570435426)));
              }
              
              var Temporary48 = result_570434714;
              if (ConstSet386[Temporary48.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary48.kind, NTI570425392)); }
              var Temporary49 = a_570435423;
              if (ConstSet387[Temporary49.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary49.kind, NTI570425392)); }
              add__lisp_u8865(Temporary48, "kids", Temporary49.kids);
              i_570442586 += 1;
              if (!(((args_570434767).length == L_570442587))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 42:
      if (!(((args_570434767).length == 2))) {
      var inst_570435458 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1259, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435458.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,71,114,101,97,116,101,114,32,116,97,107,101,115,32,101,120,97,99,116,108,121,32,116,119,111,32,97,114,103,117,109,101,110,116,115]));
      }
      
      var a_570435459 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var b_570435460 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      var nHEX60gensym603_570435463 = a_570435459;
      var kindHEX60gensym603_570435464 = 0;
      var nHEX60gensym604_570435467 = nHEX60gensym603_570435463;
      var kindHEX60gensym604_570435468 = 9;
      var nHEX60gensym605_570435470 = nHEX60gensym604_570435467;
      if (!(!((nHEX60gensym605_570435470 == null)))) {
      var inst_570435475 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435475.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym605_570435470.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym604_570435467.kind == kindHEX60gensym604_570435468))) {
      var inst_570435490 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435490.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym604_570435467.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym604_570435468, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym604_570435467.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym604_570435467)));
      }
      
        var Temporary50 = nHEX60gensym603_570435463;
        if (ConstSet388[Temporary50.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary50.kind, NTI570425392)); }
      if (!((Temporary50.atomicKind == kindHEX60gensym603_570435464))) {
      var inst_570435502 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
      var Temporary51 = nHEX60gensym603_570435463;
      if (ConstSet389[Temporary51.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary51.kind, NTI570425392)); }
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435502.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym603_570435463.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym603_570435464, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary51.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym603_570435463)));
      }
      
      var nHEX60gensym609_570435505 = b_570435460;
      var kindHEX60gensym609_570435506 = 0;
      var nHEX60gensym610_570435509 = nHEX60gensym609_570435505;
      var kindHEX60gensym610_570435510 = 9;
      var nHEX60gensym611_570435512 = nHEX60gensym610_570435509;
      if (!(!((nHEX60gensym611_570435512 == null)))) {
      var inst_570435517 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435517.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym611_570435512.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym610_570435509.kind == kindHEX60gensym610_570435510))) {
      var inst_570435532 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435532.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym610_570435509.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym610_570435510, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym610_570435509.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym610_570435509)));
      }
      
        var Temporary52 = nHEX60gensym609_570435505;
        if (ConstSet390[Temporary52.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary52.kind, NTI570425392)); }
      if (!((Temporary52.atomicKind == kindHEX60gensym609_570435506))) {
      var inst_570435544 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
      var Temporary53 = nHEX60gensym609_570435505;
      if (ConstSet391[Temporary53.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary53.kind, NTI570425392)); }
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435544.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym609_570435505.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym609_570435506, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary53.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym609_570435505)));
      }
      
      var Temporary54 = b_570435460;
      if (ConstSet392[Temporary54.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary54.atomicKind, NTI570425391)); }
      var Temporary55 = a_570435459;
      if (ConstSet393[Temporary55.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary55.atomicKind, NTI570425391)); }
      result_570434714 = ast__lisp_u2683((Temporary54.num < Temporary55.num));
      break;
    case 41:
      if (!(((args_570434767).length == 2))) {
      var inst_570435549 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1270, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435549.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,76,101,115,115,101,114,32,116,97,107,101,115,32,101,120,97,99,116,108,121,32,116,119,111,32,97,114,103,117,109,101,110,116,115]));
      }
      
      var a_570435550 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var b_570435551 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      var nHEX60gensym617_570435554 = a_570435550;
      var kindHEX60gensym617_570435555 = 0;
      var nHEX60gensym618_570435558 = nHEX60gensym617_570435554;
      var kindHEX60gensym618_570435559 = 9;
      var nHEX60gensym619_570435561 = nHEX60gensym618_570435558;
      if (!(!((nHEX60gensym619_570435561 == null)))) {
      var inst_570435566 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435566.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym619_570435561.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym618_570435558.kind == kindHEX60gensym618_570435559))) {
      var inst_570435581 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435581.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym618_570435558.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym618_570435559, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym618_570435558.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym618_570435558)));
      }
      
        var Temporary56 = nHEX60gensym617_570435554;
        if (ConstSet394[Temporary56.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary56.kind, NTI570425392)); }
      if (!((Temporary56.atomicKind == kindHEX60gensym617_570435555))) {
      var inst_570435593 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
      var Temporary57 = nHEX60gensym617_570435554;
      if (ConstSet395[Temporary57.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary57.kind, NTI570425392)); }
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435593.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym617_570435554.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym617_570435555, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary57.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym617_570435554)));
      }
      
      var nHEX60gensym623_570435596 = b_570435551;
      var kindHEX60gensym623_570435597 = 0;
      var nHEX60gensym624_570435600 = nHEX60gensym623_570435596;
      var kindHEX60gensym624_570435601 = 9;
      var nHEX60gensym625_570435603 = nHEX60gensym624_570435600;
      if (!(!((nHEX60gensym625_570435603 == null)))) {
      var inst_570435608 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435608.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym625_570435603.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym624_570435600.kind == kindHEX60gensym624_570435601))) {
      var inst_570435623 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435623.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym624_570435600.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym624_570435601, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym624_570435600.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym624_570435600)));
      }
      
        var Temporary58 = nHEX60gensym623_570435596;
        if (ConstSet396[Temporary58.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary58.kind, NTI570425392)); }
      if (!((Temporary58.atomicKind == kindHEX60gensym623_570435597))) {
      var inst_570435635 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
      var Temporary59 = nHEX60gensym623_570435596;
      if (ConstSet397[Temporary59.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary59.kind, NTI570425392)); }
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435635.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym623_570435596.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym623_570435597, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary59.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym623_570435596)));
      }
      
      var Temporary60 = a_570435550;
      if (ConstSet398[Temporary60.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary60.atomicKind, NTI570425391)); }
      var Temporary61 = b_570435551;
      if (ConstSet399[Temporary61.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary61.atomicKind, NTI570425391)); }
      result_570434714 = ast__lisp_u2683((Temporary60.num < Temporary61.num));
      break;
    case 40:
      if (!(((args_570434767).length == 2))) {
      var inst_570435640 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1281, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435640.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,71,114,101,97,116,101,114,79,114,69,113,32,116,97,107,101,115,32,101,120,97,99,116,108,121,32,116,119,111,32,97,114,103,117,109,101,110,116,115]));
      }
      
      var a_570435641 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var b_570435642 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      var nHEX60gensym630_570435645 = a_570435641;
      var kindHEX60gensym630_570435646 = 0;
      var nHEX60gensym631_570435649 = nHEX60gensym630_570435645;
      var kindHEX60gensym631_570435650 = 9;
      var nHEX60gensym632_570435652 = nHEX60gensym631_570435649;
      if (!(!((nHEX60gensym632_570435652 == null)))) {
      var inst_570435657 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435657.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym632_570435652.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym631_570435649.kind == kindHEX60gensym631_570435650))) {
      var inst_570435672 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435672.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym631_570435649.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym631_570435650, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym631_570435649.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym631_570435649)));
      }
      
        var Temporary62 = nHEX60gensym630_570435645;
        if (ConstSet400[Temporary62.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary62.kind, NTI570425392)); }
      if (!((Temporary62.atomicKind == kindHEX60gensym630_570435646))) {
      var inst_570435684 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
      var Temporary63 = nHEX60gensym630_570435645;
      if (ConstSet401[Temporary63.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary63.kind, NTI570425392)); }
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435684.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym630_570435645.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym630_570435646, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary63.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym630_570435645)));
      }
      
      var nHEX60gensym636_570435687 = b_570435642;
      var kindHEX60gensym636_570435688 = 0;
      var nHEX60gensym637_570435691 = nHEX60gensym636_570435687;
      var kindHEX60gensym637_570435692 = 9;
      var nHEX60gensym638_570435694 = nHEX60gensym637_570435691;
      if (!(!((nHEX60gensym638_570435694 == null)))) {
      var inst_570435699 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435699.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym638_570435694.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym637_570435691.kind == kindHEX60gensym637_570435692))) {
      var inst_570435714 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435714.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym637_570435691.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym637_570435692, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym637_570435691.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym637_570435691)));
      }
      
        var Temporary64 = nHEX60gensym636_570435687;
        if (ConstSet402[Temporary64.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary64.kind, NTI570425392)); }
      if (!((Temporary64.atomicKind == kindHEX60gensym636_570435688))) {
      var inst_570435726 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
      var Temporary65 = nHEX60gensym636_570435687;
      if (ConstSet403[Temporary65.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary65.kind, NTI570425392)); }
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435726.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym636_570435687.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym636_570435688, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary65.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym636_570435687)));
      }
      
      var Temporary66 = b_570435642;
      if (ConstSet404[Temporary66.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary66.atomicKind, NTI570425391)); }
      var Temporary67 = a_570435641;
      if (ConstSet405[Temporary67.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary67.atomicKind, NTI570425391)); }
      result_570434714 = ast__lisp_u2683((Temporary66.num <= Temporary67.num));
      break;
    case 39:
      if (!(((args_570434767).length == 2))) {
      var inst_570435731 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1292, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435731.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,76,101,115,115,79,114,69,113,32,116,97,107,101,115,32,101,120,97,99,116,108,121,32,116,119,111,32,97,114,103,117,109,101,110,116,115]));
      }
      
      var a_570435732 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var b_570435733 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      var nHEX60gensym644_570435736 = a_570435732;
      var kindHEX60gensym644_570435737 = 0;
      var nHEX60gensym645_570435740 = nHEX60gensym644_570435736;
      var kindHEX60gensym645_570435741 = 9;
      var nHEX60gensym646_570435743 = nHEX60gensym645_570435740;
      if (!(!((nHEX60gensym646_570435743 == null)))) {
      var inst_570435748 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435748.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym646_570435743.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym645_570435740.kind == kindHEX60gensym645_570435741))) {
      var inst_570435763 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435763.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym645_570435740.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym645_570435741, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym645_570435740.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym645_570435740)));
      }
      
        var Temporary68 = nHEX60gensym644_570435736;
        if (ConstSet406[Temporary68.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary68.kind, NTI570425392)); }
      if (!((Temporary68.atomicKind == kindHEX60gensym644_570435737))) {
      var inst_570435775 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
      var Temporary69 = nHEX60gensym644_570435736;
      if (ConstSet407[Temporary69.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary69.kind, NTI570425392)); }
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435775.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym644_570435736.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym644_570435737, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary69.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym644_570435736)));
      }
      
      var nHEX60gensym650_570435778 = b_570435733;
      var kindHEX60gensym650_570435779 = 0;
      var nHEX60gensym651_570435782 = nHEX60gensym650_570435778;
      var kindHEX60gensym651_570435783 = 9;
      var nHEX60gensym652_570435785 = nHEX60gensym651_570435782;
      if (!(!((nHEX60gensym652_570435785 == null)))) {
      var inst_570435790 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435790.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym652_570435785.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym651_570435782.kind == kindHEX60gensym651_570435783))) {
      var inst_570435805 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435805.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym651_570435782.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym651_570435783, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym651_570435782.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym651_570435782)));
      }
      
        var Temporary70 = nHEX60gensym650_570435778;
        if (ConstSet408[Temporary70.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary70.kind, NTI570425392)); }
      if (!((Temporary70.atomicKind == kindHEX60gensym650_570435779))) {
      var inst_570435817 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
      var Temporary71 = nHEX60gensym650_570435778;
      if (ConstSet409[Temporary71.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary71.kind, NTI570425392)); }
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435817.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym650_570435778.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym650_570435779, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary71.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym650_570435778)));
      }
      
      var Temporary72 = a_570435732;
      if (ConstSet410[Temporary72.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary72.atomicKind, NTI570425391)); }
      var Temporary73 = b_570435733;
      if (ConstSet411[Temporary73.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary73.atomicKind, NTI570425391)); }
      result_570434714 = ast__lisp_u2683((Temporary72.num <= Temporary73.num));
      break;
    case 38:
      if (!((2 <= (args_570434767).length))) {
      var inst_570435822 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1303, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435822.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,87,104,105,108,101,32,116,97,107,101,115,32,97,116,32,108,101,97,115,116,32,116,119,111,32,97,114,103,117,109,101,110,116,115]));
      }
      
      var condition_570435823 = args_570434767[chckIndx(0, 0, (args_570434767).length - 1)];
      var body_570435847 = astList__lisp_u2689(HEX26__lisp_u9811([ast__lisp_u2661(8)], HEX5BHEX5D__lisp_u9400(args_570434767, HEX2EHEX2E__stdZenumutils_u105(1, 1))));
      result_570434714 = {kind: 16, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      Label74: {
          Label75: while (true) {
          if (!getBool__lisp_u8125(evaluate__lisp_u9364(s_p0, condition_570435823))) break Label75;
            var initialStacksHEX60gensym660_570435854 = (s_p0.stacks).length;
            var newStackHEX60gensym660_570435855 = {kind: 0, symbols: ({data: [], counter: 0}), currentClassObj: null};
            s_p0.stacks.push(newStackHEX60gensym660_570435855);;
            try {
            (evaluate__lisp_u9364(s_p0, body_570435847));
            } finally {
            if (!(((Temporary77 = HEX5BHEX5D__lisp_u10516(s_p0.stacks, 1), Temporary77)[0][Temporary77[1]] == newStackHEX60gensym660_570435855))) {
            failedAssertImpl__stdZassertions_u84(makeNimstrLit("lisp.nim(537, 5) `s.stacks[BackwardsIndex(1)] == newStack`gensym660` "));
            }
            
            delete__lisp_u10553(s_p0, "stacks", chckRange((s_p0.stacks).length - 1, 0, 2147483647));
            }
            if (!(((s_p0.stacks).length == initialStacksHEX60gensym660_570435854))) {
            failedAssertImpl__stdZassertions_u84(makeNimstrLit("lisp.nim(1312, 7) `len(s.stacks) == initialStacks`gensym660` Stack imbalance"));
            }
            
          }
      };
      break;
    case 37:
      if (!((2 <= (args_570434767).length))) {
      var inst_570435938 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1328, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435938.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
      }
      
      var params_570435939 = args_570434767[chckIndx(0, 0, (args_570434767).length - 1)];
      var nHEX60gensym671_570435942 = params_570435939;
      var kindHEX60gensym671_570435943 = 1;
      var nHEX60gensym672_570435945 = nHEX60gensym671_570435942;
      if (!(!((nHEX60gensym672_570435945 == null)))) {
      var inst_570435950 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435950.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym672_570435945.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym671_570435942.kind == kindHEX60gensym671_570435943))) {
      var inst_570435965 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435965.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym671_570435942.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym671_570435943, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym671_570435942.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym671_570435942)));
      }
      
      Label78: {
        var p_570435969 = null;
        var colontmp__570442591 = [];
        var Temporary79 = params_570435939;
        if (ConstSet415[Temporary79.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary79.kind, NTI570425392)); }
        colontmp__570442591 = Temporary79.kids;
        var i_570442592 = 0;
        var L_570442593 = (colontmp__570442591).length;
        Label80: {
            Label81: while (true) {
            if (!(i_570442592 < L_570442593)) break Label81;
              p_570435969 = colontmp__570442591[chckIndx(i_570442592, 0, (colontmp__570442591).length - 1)];
              var nHEX60gensym675_570435972 = p_570435969;
              var kindHEX60gensym675_570435973 = 0;
              var nHEX60gensym676_570435975 = nHEX60gensym675_570435972;
              if (!(!((nHEX60gensym676_570435975 == null)))) {
              var inst_570435980 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435980.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym676_570435975.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
              }
              
              if (!((nHEX60gensym675_570435972.kind == kindHEX60gensym675_570435973))) {
              var inst_570435995 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570435995.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym675_570435972.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym675_570435973, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym675_570435972.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym675_570435972)));
              }
              
              i_570442592 += 1;
              if (!(((colontmp__570442591).length == L_570442593))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      var body_570436019 = astList__lisp_u2689(HEX26__lisp_u9811([ast__lisp_u2661(8)], HEX5BHEX5D__lisp_u9400(args_570434767, HEX2EHEX2E__stdZenumutils_u105(1, 1))));
      Label82: {
        var Temporary83 = params_570435939;
        if (ConstSet416[Temporary83.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary83.kind, NTI570425392)); }
        var HEX3Atmp_570436038 = nimCopy(null, Temporary83.kids, NTI570425437);
        var iHEX60gensym681_570436041 = 0;
        var resultHEX60gensym681_570436065 = newSeq__stdZsyncio_u559(chckRange((HEX3Atmp_570436038).length, 0, 2147483647));
        Label84: {
          var it_570436069 = null;
          var i_570442597 = 0;
          var L_570442598 = (HEX3Atmp_570436038).length;
          Label85: {
              Label86: while (true) {
              if (!(i_570442597 < L_570442598)) break Label86;
                it_570436069 = HEX3Atmp_570436038[chckIndx(i_570442597, 0, (HEX3Atmp_570436038).length - 1)];
                var Temporary87 = it_570436069;
                if (ConstSet417[Temporary87.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary87.kind, NTI570425392)); }
                resultHEX60gensym681_570436065[chckIndx(iHEX60gensym681_570436041, 0, (resultHEX60gensym681_570436065).length - 1)] = nimCopy(null, Temporary87.sym, NTI33554449);
                iHEX60gensym681_570436041 = addInt(iHEX60gensym681_570436041, 1);
                i_570442597 += 1;
                if (!(((HEX3Atmp_570436038).length == L_570442598))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      result_570434714 = {kind: 11, templateParams: nimCopy(null, resultHEX60gensym681_570436065, NTI536871245), templateBody: body_570436019, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 36:
      if (!(((args_570434767).length == 2))) {
      var inst_570436078 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1343, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436078.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,67,111,110,116,97,105,110,115,32,116,97,107,101,115,32,101,120,97,99,116,108,121,32,116,119,111,32,97,114,103,117,109,101,110,116,115]));
      }
      
      var l_570436079 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var nHEX60gensym685_570436082 = l_570436079;
      var kindHEX60gensym685_570436083 = 1;
      var nHEX60gensym686_570436085 = nHEX60gensym685_570436082;
      if (!(!((nHEX60gensym686_570436085 == null)))) {
      var inst_570436090 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436090.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym686_570436085.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym685_570436082.kind == kindHEX60gensym685_570436083))) {
      var inst_570436105 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436105.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym685_570436082.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym685_570436083, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym685_570436082.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym685_570436082)));
      }
      
      var val_570436106 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      var Temporary88 = l_570436079;
      if (ConstSet418[Temporary88.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary88.kind, NTI570425392)); }
      result_570434714 = ast__lisp_u2683(contains__lisp_u7992(Temporary88.kids, val_570436106));
      break;
    case 27:
      if (!((3 <= (args_570434767).length))) {
      var inst_570436115 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1353, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436115.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32],HEX24__lisp_u6182(n_p1)));
      }
      
      var keySym_570436116 = null;
      var valSym_570436117 = null;
      if ((args_570434767[chckIndx(0, 0, (args_570434767).length - 1)].kind == 1)) {
      keySym_570436116 = HEX5BHEX5D__lisp_u8216(args_570434767[chckIndx(0, 0, (args_570434767).length - 1)], 0);
      valSym_570436117 = HEX5BHEX5D__lisp_u8216(args_570434767[chckIndx(0, 0, (args_570434767).length - 1)], 1);
      var nHEX60gensym692_570436124 = keySym_570436116;
      var kindHEX60gensym692_570436125 = 0;
      var nHEX60gensym693_570436127 = nHEX60gensym692_570436124;
      if (!(!((nHEX60gensym693_570436127 == null)))) {
      var inst_570436132 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436132.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym693_570436127.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym692_570436124.kind == kindHEX60gensym692_570436125))) {
      var inst_570436147 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436147.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym692_570436124.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym692_570436125, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym692_570436124.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym692_570436124)));
      }
      
      var nHEX60gensym696_570436150 = valSym_570436117;
      var kindHEX60gensym696_570436151 = 0;
      var nHEX60gensym697_570436153 = nHEX60gensym696_570436150;
      if (!(!((nHEX60gensym697_570436153 == null)))) {
      var inst_570436158 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436158.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym697_570436153.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym696_570436150.kind == kindHEX60gensym696_570436151))) {
      var inst_570436173 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436173.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym696_570436150.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym696_570436151, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym696_570436150.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym696_570436150)));
      }
      
      }
      else {
        var nHEX60gensym700_570436176 = args_570434767[chckIndx(0, 0, (args_570434767).length - 1)];
        var kindHEX60gensym700_570436177 = 0;
        var nHEX60gensym701_570436179 = nHEX60gensym700_570436176;
        if (!(!((nHEX60gensym701_570436179 == null)))) {
        var inst_570436184 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436184.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym701_570436179.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
        }
        
        if (!((nHEX60gensym700_570436176.kind == kindHEX60gensym700_570436177))) {
        var inst_570436199 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436199.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym700_570436176.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym700_570436177, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym700_570436176.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym700_570436176)));
        }
        
        valSym_570436117 = args_570434767[chckIndx(0, 0, (args_570434767).length - 1)];
        var nHEX60gensym704_570436202 = valSym_570436117;
        var kindHEX60gensym704_570436203 = 0;
        var nHEX60gensym705_570436205 = nHEX60gensym704_570436202;
        if (!(!((nHEX60gensym705_570436205 == null)))) {
        var inst_570436210 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436210.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym705_570436205.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
        }
        
        if (!((nHEX60gensym704_570436202.kind == kindHEX60gensym704_570436203))) {
        var inst_570436225 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436225.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym704_570436202.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym704_570436203, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym704_570436202.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym704_570436202)));
        }
        
      }
      
      var items_570436226 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      var nHEX60gensym708_570436229 = items_570436226;
      var kindHEX60gensym708_570436230 = 1;
      var nHEX60gensym709_570436232 = nHEX60gensym708_570436229;
      if (!(!((nHEX60gensym709_570436232 == null)))) {
      var inst_570436237 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436237.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym709_570436232.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym708_570436229.kind == kindHEX60gensym708_570436230))) {
      var inst_570436252 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436252.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym708_570436229.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym708_570436230, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym708_570436229.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym708_570436229)));
      }
      
      var body_570436257 = {kind: 1, kids: [{kind: 3, keyword: 8, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null}], listType: null, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      Label89: {
        var n_570436276 = null;
        var colontmp__570442601 = [];
        colontmp__570442601 = HEX5BHEX5D__lisp_u9400(args_570434767, HEX2EHEX2E__stdZenumutils_u105(2, 1));
        var i_570442602 = 0;
        var L_570442603 = (colontmp__570442601).length;
        Label90: {
            Label91: while (true) {
            if (!(i_570442602 < L_570442603)) break Label91;
              n_570436276 = colontmp__570442601[chckIndx(i_570442602, 0, (colontmp__570442601).length - 1)];
              var Temporary92 = body_570436257;
              if (ConstSet419[Temporary92.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary92.kind, NTI570425392)); }
              Temporary92.kids.push(n_570436276);;
              i_570442602 += 1;
              if (!(((colontmp__570442601).length == L_570442603))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_570434714 = {kind: 16, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      Label93: {
        var i_570436286 = 0;
        var item_570436287 = null;
        var colontmp__570442607 = [];
        var Temporary94 = items_570436226;
        if (ConstSet420[Temporary94.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary94.kind, NTI570425392)); }
        colontmp__570442607 = Temporary94.kids;
        var i_570442608 = 0;
        var L_570442609 = (colontmp__570442607).length;
        Label95: {
            Label96: while (true) {
            if (!(i_570442608 < L_570442609)) break Label96;
              i_570436286 = i_570442608;
              item_570436287 = colontmp__570442607[chckIndx(i_570442608, 0, (colontmp__570442607).length - 1)];
              Label97: {
                var initialStacksHEX60gensym714_570436293 = (s_p0.stacks).length;
                var newStackHEX60gensym714_570436294 = {kind: 0, symbols: ({data: [], counter: 0}), currentClassObj: null};
                s_p0.stacks.push(newStackHEX60gensym714_570436294);;
                try {
++excHandler;
                try {
                var Temporary101 = valSym_570436117;
                if (ConstSet421[Temporary101.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary101.kind, NTI570425392)); }
                HEX5BHEX5DHEX3D__lisp_u2797((Temporary100 = HEX5BHEX5D__lisp_u10516(s_p0.stacks, 1), Temporary100)[0][Temporary100[1]].symbols, Temporary101.sym, item_570436287);
                if (!(HEX3DHEX3D__lisp_u1499(keySym_570436116, null))) {
                var Temporary103 = keySym_570436116;
                if (ConstSet422[Temporary103.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary103.kind, NTI570425392)); }
                HEX5BHEX5DHEX3D__lisp_u2797((Temporary102 = HEX5BHEX5D__lisp_u10516(s_p0.stacks, 1), Temporary102)[0][Temporary102[1]].symbols, Temporary103.sym, ast__lisp_u2680(i_570436286));
                }
                
                (evaluate__lisp_u9364(s_p0, body_570436257));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI570425400))) {
                break Label93;
                }
                else                 if (lastJSError && (isObj(lastJSError.m_type, NTI570425401))) {
                break Label97;
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                } finally {
                if (!(((Temporary104 = HEX5BHEX5D__lisp_u10516(s_p0.stacks, 1), Temporary104)[0][Temporary104[1]] == newStackHEX60gensym714_570436294))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("lisp.nim(537, 5) `s.stacks[BackwardsIndex(1)] == newStack`gensym714` "));
                }
                
                delete__lisp_u10553(s_p0, "stacks", chckRange((s_p0.stacks).length - 1, 0, 2147483647));
                }
                if (!(((s_p0.stacks).length == initialStacksHEX60gensym714_570436293))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("lisp.nim(1377, 7) `len(s.stacks) == initialStacks`gensym714` Stack imbalance"));
                }
                
              };
              i_570442608 += 1;
              if (!(((colontmp__570442607).length == L_570442609))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(187, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 23:
      if (!(((args_570434767).length == 1))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,51,56,57,44,32,53,41,32,96,108,101,110,40,97,114,103,115,41,32,61,61,32,49,96,32]);
      }
      
      var l_570436427 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      if ((l_570436427.kind == 1)) {
      var Temporary105 = l_570436427;
      if (ConstSet423[Temporary105.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary105.kind, NTI570425392)); }
      result_570434714 = ast__lisp_u2683(((Temporary105.kids).length == 0));
      }
      else {
      if (isKind__lisp_u288(l_570436427, 1)) {
      var Temporary106 = l_570436427;
      if (ConstSet425[Temporary106.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary106.atomicKind, NTI570425391)); }
      result_570434714 = ast__lisp_u2683(((Temporary106.str).length == 0));
      }
      else {
        if (true) {
        var inst_570436436 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1404, Field2: 7};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436436.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,69,109,112,116,121,32,99,97,110,32,111,110,108,121,32,98,101,32,117,115,101,100,32,119,105,116,104,32,108,105,115,116,115,32,97,110,100,32,115,116,114,105,110,103,115]));
        }
        
      }
      }
      break;
    case 22:
      if (!(((args_570434767).length == 1))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,52,48,54,44,32,53,41,32,96,108,101,110,40,97,114,103,115,41,32,61,61,32,49,96,32]);
      }
      
      var b_570436445 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var nHEX60gensym728_570436448 = b_570436445;
      var kindHEX60gensym728_570436449 = 2;
      var nHEX60gensym729_570436452 = nHEX60gensym728_570436448;
      var kindHEX60gensym729_570436453 = 9;
      var nHEX60gensym730_570436455 = nHEX60gensym729_570436452;
      if (!(!((nHEX60gensym730_570436455 == null)))) {
      var inst_570436460 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436460.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym730_570436455.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym729_570436452.kind == kindHEX60gensym729_570436453))) {
      var inst_570436475 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436475.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym729_570436452.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym729_570436453, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym729_570436452.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym729_570436452)));
      }
      
        var Temporary107 = nHEX60gensym728_570436448;
        if (ConstSet426[Temporary107.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary107.kind, NTI570425392)); }
      if (!((Temporary107.atomicKind == kindHEX60gensym728_570436449))) {
      var inst_570436487 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
      var Temporary108 = nHEX60gensym728_570436448;
      if (ConstSet427[Temporary108.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary108.kind, NTI570425392)); }
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436487.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym728_570436448.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym728_570436449, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary108.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym728_570436448)));
      }
      
      var Temporary109 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      if (ConstSet428[Temporary109.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolean\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary109.atomicKind, NTI570425391)); }
      result_570434714 = ast__lisp_u2683(!(Temporary109.boolean));
      break;
    case 29:
      if (!((2 <= (args_570434767).length))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,52,49,50,44,32,53,41,32,96,10,50,32,60,61,32,108,101,110,40,97,114,103,115,41,96,32]);
      }
      
      var sym_570436496 = args_570434767[chckIndx(0, 0, (args_570434767).length - 1)];
      var nHEX60gensym737_570436499 = sym_570436496;
      var kindHEX60gensym737_570436500 = 0;
      var nHEX60gensym738_570436502 = nHEX60gensym737_570436499;
      if (!(!((nHEX60gensym738_570436502 == null)))) {
      var inst_570436507 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436507.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym738_570436502.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym737_570436499.kind == kindHEX60gensym737_570436500))) {
      var inst_570436522 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436522.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym737_570436499.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym737_570436500, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym737_570436499.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym737_570436499)));
      }
      
      var symVal_570436523 = evaluate__lisp_u9364(s_p0, sym_570436496);
      var nHEX60gensym741_570436526 = symVal_570436523;
      var kindHEX60gensym741_570436527 = 0;
      var nHEX60gensym742_570436530 = nHEX60gensym741_570436526;
      var kindHEX60gensym742_570436531 = 9;
      var nHEX60gensym743_570436533 = nHEX60gensym742_570436530;
      if (!(!((nHEX60gensym743_570436533 == null)))) {
      var inst_570436538 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436538.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym743_570436533.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym742_570436530.kind == kindHEX60gensym742_570436531))) {
      var inst_570436553 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436553.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym742_570436530.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym742_570436531, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym742_570436530.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym742_570436530)));
      }
      
        var Temporary110 = nHEX60gensym741_570436526;
        if (ConstSet429[Temporary110.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary110.kind, NTI570425392)); }
      if (!((Temporary110.atomicKind == kindHEX60gensym741_570436527))) {
      var inst_570436565 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
      var Temporary111 = nHEX60gensym741_570436526;
      if (ConstSet430[Temporary111.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary111.kind, NTI570425392)); }
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436565.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym741_570436526.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym741_570436527, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary111.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym741_570436526)));
      }
      
      Label112: {
        var a_570436584 = null;
        var colontmp__570442612 = [];
        colontmp__570442612 = HEX5BHEX5D__lisp_u9400(args_570434767, HEX2EHEX2E__stdZenumutils_u105(1, 1));
        var i_570442613 = 0;
        var L_570442614 = (colontmp__570442612).length;
        Label113: {
            Label114: while (true) {
            if (!(i_570442613 < L_570442614)) break Label114;
              a_570436584 = colontmp__570442612[chckIndx(i_570442613, 0, (colontmp__570442612).length - 1)];
              var a_570436585 = evaluate__lisp_u9364(s_p0, a_570436584);
              var nHEX60gensym749_570436588 = a_570436585;
              var kindHEX60gensym749_570436589 = 0;
              var nHEX60gensym750_570436592 = nHEX60gensym749_570436588;
              var kindHEX60gensym750_570436593 = 9;
              var nHEX60gensym751_570436595 = nHEX60gensym750_570436592;
              if (!(!((nHEX60gensym751_570436595 == null)))) {
              var inst_570436600 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436600.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym751_570436595.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
              }
              
              if (!((nHEX60gensym750_570436592.kind == kindHEX60gensym750_570436593))) {
              var inst_570436615 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436615.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym750_570436592.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym750_570436593, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym750_570436592.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym750_570436592)));
              }
              
                var Temporary115 = nHEX60gensym749_570436588;
                if (ConstSet431[Temporary115.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary115.kind, NTI570425392)); }
              if (!((Temporary115.atomicKind == kindHEX60gensym749_570436589))) {
              var inst_570436627 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
              var Temporary116 = nHEX60gensym749_570436588;
              if (ConstSet432[Temporary116.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary116.kind, NTI570425392)); }
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436627.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym749_570436588.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym749_570436589, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary116.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym749_570436588)));
              }
              
              var Temporary117 = symVal_570436523;
              if (ConstSet433[Temporary117.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary117.atomicKind, NTI570425391)); }
              var Temporary118 = a_570436585;
              if (ConstSet434[Temporary118.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary118.atomicKind, NTI570425391)); }
              HEX2BHEX3D__pureZstrutils_u2340(Temporary117, "num", Temporary118.num);
              i_570442613 += 1;
              if (!(((colontmp__570442612).length == L_570442614))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_570434714 = {kind: 16, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 30:
      if (!((2 <= (args_570434767).length))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,52,50,56,44,32,53,41,32,96,10,50,32,60,61,32,108,101,110,40,97,114,103,115,41,96,32]);
      }
      
      var sym_570436640 = args_570434767[chckIndx(0, 0, (args_570434767).length - 1)];
      var nHEX60gensym758_570436643 = sym_570436640;
      var kindHEX60gensym758_570436644 = 0;
      var nHEX60gensym759_570436646 = nHEX60gensym758_570436643;
      if (!(!((nHEX60gensym759_570436646 == null)))) {
      var inst_570436651 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436651.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym759_570436646.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym758_570436643.kind == kindHEX60gensym758_570436644))) {
      var inst_570436666 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436666.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym758_570436643.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym758_570436644, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym758_570436643.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym758_570436643)));
      }
      
      var symVal_570436667 = evaluate__lisp_u9364(s_p0, sym_570436640);
      var nHEX60gensym762_570436670 = symVal_570436667;
      var kindHEX60gensym762_570436671 = 0;
      var nHEX60gensym763_570436674 = nHEX60gensym762_570436670;
      var kindHEX60gensym763_570436675 = 9;
      var nHEX60gensym764_570436677 = nHEX60gensym763_570436674;
      if (!(!((nHEX60gensym764_570436677 == null)))) {
      var inst_570436682 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436682.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym764_570436677.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym763_570436674.kind == kindHEX60gensym763_570436675))) {
      var inst_570436697 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436697.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym763_570436674.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym763_570436675, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym763_570436674.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym763_570436674)));
      }
      
        var Temporary119 = nHEX60gensym762_570436670;
        if (ConstSet435[Temporary119.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary119.kind, NTI570425392)); }
      if (!((Temporary119.atomicKind == kindHEX60gensym762_570436671))) {
      var inst_570436709 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
      var Temporary120 = nHEX60gensym762_570436670;
      if (ConstSet436[Temporary120.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary120.kind, NTI570425392)); }
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436709.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym762_570436670.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym762_570436671, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary120.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym762_570436670)));
      }
      
      result_570434714 = ast__lisp_u2680(0.0);
      Label121: {
        var a_570436728 = null;
        var colontmp__570442617 = [];
        colontmp__570442617 = HEX5BHEX5D__lisp_u9400(args_570434767, HEX2EHEX2E__stdZenumutils_u105(1, 1));
        var i_570442618 = 0;
        var L_570442619 = (colontmp__570442617).length;
        Label122: {
            Label123: while (true) {
            if (!(i_570442618 < L_570442619)) break Label123;
              a_570436728 = colontmp__570442617[chckIndx(i_570442618, 0, (colontmp__570442617).length - 1)];
              var a_570436729 = evaluate__lisp_u9364(s_p0, a_570436728);
              var nHEX60gensym770_570436732 = a_570436729;
              var kindHEX60gensym770_570436733 = 0;
              var nHEX60gensym771_570436736 = nHEX60gensym770_570436732;
              var kindHEX60gensym771_570436737 = 9;
              var nHEX60gensym772_570436739 = nHEX60gensym771_570436736;
              if (!(!((nHEX60gensym772_570436739 == null)))) {
              var inst_570436744 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436744.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym772_570436739.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
              }
              
              if (!((nHEX60gensym771_570436736.kind == kindHEX60gensym771_570436737))) {
              var inst_570436759 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436759.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym771_570436736.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym771_570436737, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym771_570436736.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym771_570436736)));
              }
              
                var Temporary124 = nHEX60gensym770_570436732;
                if (ConstSet437[Temporary124.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary124.kind, NTI570425392)); }
              if (!((Temporary124.atomicKind == kindHEX60gensym770_570436733))) {
              var inst_570436771 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
              var Temporary125 = nHEX60gensym770_570436732;
              if (ConstSet438[Temporary125.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary125.kind, NTI570425392)); }
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436771.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym770_570436732.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym770_570436733, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary125.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym770_570436732)));
              }
              
              var Temporary126 = symVal_570436667;
              if (ConstSet439[Temporary126.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary126.atomicKind, NTI570425391)); }
              var Temporary127 = a_570436729;
              if (ConstSet440[Temporary127.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary127.atomicKind, NTI570425391)); }
              HEX2DHEX3D__lisp_u11428(Temporary126, "num", Temporary127.num);
              i_570442618 += 1;
              if (!(((colontmp__570442617).length == L_570442619))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_570434714 = {kind: 16, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 20:
      if (!(((args_570434767).length == 2))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,52,52,55,44,32,53,41,32,96,108,101,110,40,97,114,103,115,41,32,61,61,32,50,96,32]);
      }
      
      var a_570436784 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var b_570436785 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      result_570434714 = ast__lisp_u2683(HEX3DHEX3D__lisp_u1499(a_570436784, b_570436785));
      break;
    case 21:
      if (!(((args_570434767).length == 2))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,52,54,50,44,32,53,41,32,96,108,101,110,40,97,114,103,115,41,32,61,61,32,50,96,32]);
      }
      
      result_570434714 = ast__lisp_u2683(!(HEX3DHEX3D__lisp_u1499(evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]), evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]))));
      break;
    case 18:
      if (!(((args_570434767).length == 1))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,52,54,54,44,32,53,41,32,96,108,101,110,40,97,114,103,115,41,32,61,61,32,49,96,32]);
      }
      
      result_570434714 = ast__lisp_u2686(HEX24__lisp_u6182(evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)])));
      break;
    case 35:
      if (!((0 < (args_570434767).length))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,52,55,49,44,32,53,41,32,96,10,48,32,60,32,108,101,110,40,97,114,103,115,41,96,32]);
      }
      
      result_570434714 = ast__lisp_u2683(true);
      Label128: {
        var a_570436813 = null;
        var i_570442622 = 0;
        var L_570442623 = (args_570434767).length;
        Label129: {
            Label130: while (true) {
            if (!(i_570442622 < L_570442623)) break Label130;
              a_570436813 = args_570434767[chckIndx(i_570442622, 0, (args_570434767).length - 1)];
              if (!(getBool__lisp_u8125(evaluate__lisp_u9364(s_p0, n_p1)))) {
              var Temporary131 = result_570434714;
              if (ConstSet441[Temporary131.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolean\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary131.atomicKind, NTI570425391)); }
              Temporary131.boolean = false;
              break Label128;
              }
              
              i_570442622 += 1;
              if (!(((args_570434767).length == L_570442623))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 34:
      if (!((0 < (args_570434767).length))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,52,56,49,44,32,53,41,32,96,10,48,32,60,32,108,101,110,40,97,114,103,115,41,96,32]);
      }
      
      result_570434714 = ast__lisp_u2683(false);
      Label132: {
        var a_570436825 = null;
        var i_570442626 = 0;
        var L_570442627 = (args_570434767).length;
        Label133: {
            Label134: while (true) {
            if (!(i_570442626 < L_570442627)) break Label134;
              a_570436825 = args_570434767[chckIndx(i_570442626, 0, (args_570434767).length - 1)];
              if (getBool__lisp_u8125(evaluate__lisp_u9364(s_p0, a_570436825))) {
              var Temporary135 = result_570434714;
              if (ConstSet442[Temporary135.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolean\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary135.atomicKind, NTI570425391)); }
              Temporary135.boolean = true;
              break Label132;
              }
              
              i_570442626 += 1;
              if (!(((args_570434767).length == L_570442627))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 33:
      if (!((ConstSet443[chckRange((args_570434767).length, 0, 255)] != undefined))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,52,57,49,44,32,53,41,32,96,99,111,110,116,97,105,110,115,40,123,48,44,32,49,125,44,32,108,101,110,40,97,114,103,115,41,41,96,32]);
      }
      
      if (((args_570434767).length == 0)) {
      Temporary136 = {kind: 16, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      }
      else {
        if (!(((args_570434767).length == 1))) {
        failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,52,57,55,44,32,57,41,32,96,108,101,110,40,97,114,103,115,41,32,61,61,32,49,96,32]);
        }
        
      Temporary136 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      }
      
      var res_570436850 = Temporary136;
      if (!(!(HEX3DHEX3D__lisp_u1499(res_570436850, null)))) {
      var inst_570436853 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1500, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436853.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
      }
      
      raiseException({value: res_570436850, m_type: NTI570425399, parent: null, name: null, message: [], trace: [], up: null}, "Return:ObjectType");
      break;
    case 31:
      if (!(((args_570434767).length == 1))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,53,48,52,44,32,53,41,32,96,108,101,110,40,97,114,103,115,41,32,61,61,32,49,96,32]);
      }
      
      result_570434714 = ast__lisp_u2683(isKind__lisp_u288(evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]), 1));
      break;
    case 19:
      if (!(((args_570434767).length == 1))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,53,48,56,44,32,53,41,32,96,108,101,110,40,97,114,103,115,41,32,61,61,32,49,96,32]);
      }
      
      result_570434714 = ast__lisp_u2683((evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]).kind == 1));
      break;
    case 17:
      if (!(((args_570434767).length == 2))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,53,49,49,44,32,53,41,32,96,108,101,110,40,97,114,103,115,41,32,61,61,32,50,96,32]);
      }
      
      result_570434714 = {kind: 16, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      var a_570436882 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var b_570436883 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      if (!(HEX3DHEX3D__lisp_u1499(a_570436882, b_570436883))) {
      var inst_570436885 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1518, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436885.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32],([69,120,112,101,99,116,97,116,105,111,110,32,102,97,105,108,101,100,32,61,62,32]).concat(HEX24__lisp_u6182(n_p1),[10],HEX24__lisp_u6182(args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]),[32,61,62,32],HEX24__lisp_u6182(a_570436882),[10],HEX24__lisp_u6182(args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]),[32,61,62,32],HEX24__lisp_u6182(b_570436883))));
      }
      
      break;
    case 28:
      if (!(((args_570434767).length == 1))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,53,50,54,44,32,53,41,32,96,108,101,110,40,97,114,103,115,41,32,61,61,32,49,96,32]);
      }
      
      var l_570436894 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var nHEX60gensym806_570436897 = l_570436894;
      var kindHEX60gensym806_570436898 = 1;
      var nHEX60gensym807_570436900 = nHEX60gensym806_570436897;
      if (!(!((nHEX60gensym807_570436900 == null)))) {
      var inst_570436905 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436905.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym807_570436900.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym806_570436897.kind == kindHEX60gensym806_570436898))) {
      var inst_570436920 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436920.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym806_570436897.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym806_570436898, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym806_570436897.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym806_570436897)));
      }
      
      var Temporary137 = l_570436894;
      if (ConstSet444[Temporary137.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary137.kind, NTI570425392)); }
      result_570434714 = ast__lisp_u2680((Temporary137.kids).length);
      break;
    case 15:
      if (!(((args_570434767).length == 1))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,53,51,51,44,32,53,41,32,96,108,101,110,40,97,114,103,115,41,32,61,61,32,49,96,32]);
      }
      
      var l_570436932 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var nHEX60gensym812_570436935 = l_570436932;
      var kindHEX60gensym812_570436936 = 1;
      var nHEX60gensym813_570436938 = nHEX60gensym812_570436935;
      if (!(!((nHEX60gensym813_570436938 == null)))) {
      var inst_570436943 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436943.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym813_570436938.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym812_570436935.kind == kindHEX60gensym812_570436936))) {
      var inst_570436958 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436958.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym812_570436935.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym812_570436936, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym812_570436935.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym812_570436935)));
      }
      
      result_570434714 = ast__lisp_u2680(0.0);
      break;
    case 14:
      if (!(((args_570434767).length == 1))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,53,52,48,44,32,53,41,32,96,108,101,110,40,97,114,103,115,41,32,61,61,32,49,96,32]);
      }
      
      var l_570436970 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var nHEX60gensym818_570436973 = l_570436970;
      var kindHEX60gensym818_570436974 = 1;
      var nHEX60gensym819_570436976 = nHEX60gensym818_570436973;
      if (!(!((nHEX60gensym819_570436976 == null)))) {
      var inst_570436981 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436981.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym819_570436976.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym818_570436973.kind == kindHEX60gensym818_570436974))) {
      var inst_570436996 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570436996.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym818_570436973.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym818_570436974, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym818_570436973.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym818_570436973)));
      }
      
      var Temporary138 = l_570436970;
      if (ConstSet445[Temporary138.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary138.kind, NTI570425392)); }
      result_570434714 = ast__lisp_u2680((Temporary138.kids).length - 1);
      break;
    case 16:
      if (!(((args_570434767).length == 2))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,53,52,56,44,32,53,41,32,96,108,101,110,40,97,114,103,115,41,32,61,61,32,50,96,32]);
      }
      
      var a_570437008 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      expectInt__lisp_u8170(a_570437008);
      var b_570437009 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      expectInt__lisp_u8170(a_570437008);
      result_570434714 = {kind: 1, kids: [], listType: null, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      Label139: {
        var i_570437014 = 0;
        var colontmp__570442630 = 0;
        var colontmp__570442631 = 0;
        var Temporary140 = a_570437008;
        if (ConstSet446[Temporary140.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary140.atomicKind, NTI570425391)); }
        colontmp__570442630 = ((Temporary140.num) | 0);
        var Temporary141 = b_570437009;
        if (ConstSet447[Temporary141.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary141.atomicKind, NTI570425391)); }
        colontmp__570442631 = ((Temporary141.num) | 0);
        var res_570442632 = colontmp__570442630;
        Label142: {
            Label143: while (true) {
            if (!(res_570442632 <= colontmp__570442631)) break Label143;
              i_570437014 = res_570442632;
              var Temporary144 = result_570434714;
              if (ConstSet448[Temporary144.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary144.kind, NTI570425392)); }
              Temporary144.kids.push(ast__lisp_u2680(i_570437014));;
              res_570442632 = addInt(res_570442632, 1);
            }
        };
      };
      break;
    case 13:
      if (!((2 <= (args_570434767).length))) {
      failedAssertImpl__stdZassertions_u84(([108,105,115,112,46,110,105,109,40,49,53,54,49,44,32,53,41,32,96,10,50,32,60,61,32,108,101,110,40,97,114,103,115,41,96,32]).concat(HEX24__systemZdollars_u8(n_p1.line)));
      }
      
      var sym_570437027 = args_570434767[chckIndx(0, 0, (args_570434767).length - 1)];
      var nHEX60gensym827_570437030 = sym_570437027;
      var kindHEX60gensym827_570437031 = 0;
      var nHEX60gensym828_570437033 = nHEX60gensym827_570437030;
      if (!(!((nHEX60gensym828_570437033 == null)))) {
      var inst_570437038 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437038.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym828_570437033.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym827_570437030.kind == kindHEX60gensym827_570437031))) {
      var inst_570437053 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437053.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym827_570437030.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym827_570437031, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym827_570437030.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym827_570437030)));
      }
      
      var symVal_570437054 = evaluate__lisp_u9364(s_p0, sym_570437027);
      var nHEX60gensym831_570437057 = symVal_570437054;
      var kindHEX60gensym831_570437058 = 1;
      var nHEX60gensym832_570437061 = nHEX60gensym831_570437057;
      var kindHEX60gensym832_570437062 = 9;
      var nHEX60gensym833_570437064 = nHEX60gensym832_570437061;
      if (!(!((nHEX60gensym833_570437064 == null)))) {
      var inst_570437069 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437069.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym833_570437064.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym832_570437061.kind == kindHEX60gensym832_570437062))) {
      var inst_570437084 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437084.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym832_570437061.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym832_570437062, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym832_570437061.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym832_570437061)));
      }
      
        var Temporary145 = nHEX60gensym831_570437057;
        if (ConstSet449[Temporary145.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary145.kind, NTI570425392)); }
      if (!((Temporary145.atomicKind == kindHEX60gensym831_570437058))) {
      var inst_570437096 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
      var Temporary146 = nHEX60gensym831_570437057;
      if (ConstSet450[Temporary146.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary146.kind, NTI570425392)); }
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437096.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym831_570437057.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym831_570437058, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary146.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym831_570437057)));
      }
      
      Label147: {
        var a_570437115 = null;
        var colontmp__570442635 = [];
        colontmp__570442635 = HEX5BHEX5D__lisp_u9400(args_570434767, HEX2EHEX2E__stdZenumutils_u105(1, 1));
        var i_570442636 = 0;
        var L_570442637 = (colontmp__570442635).length;
        Label148: {
            Label149: while (true) {
            if (!(i_570442636 < L_570442637)) break Label149;
              a_570437115 = colontmp__570442635[chckIndx(i_570442636, 0, (colontmp__570442635).length - 1)];
              var str_570437116 = evaluate__lisp_u9364(s_p0, a_570437115);
              var nHEX60gensym839_570437119 = str_570437116;
              var kindHEX60gensym839_570437120 = 1;
              var nHEX60gensym840_570437123 = nHEX60gensym839_570437119;
              var kindHEX60gensym840_570437124 = 9;
              var nHEX60gensym841_570437126 = nHEX60gensym840_570437123;
              if (!(!((nHEX60gensym841_570437126 == null)))) {
              var inst_570437131 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437131.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym841_570437126.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
              }
              
              if (!((nHEX60gensym840_570437123.kind == kindHEX60gensym840_570437124))) {
              var inst_570437146 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437146.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym840_570437123.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym840_570437124, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym840_570437123.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym840_570437123)));
              }
              
                var Temporary150 = nHEX60gensym839_570437119;
                if (ConstSet451[Temporary150.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary150.kind, NTI570425392)); }
              if (!((Temporary150.atomicKind == kindHEX60gensym839_570437120))) {
              var inst_570437158 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
              var Temporary151 = nHEX60gensym839_570437119;
              if (ConstSet452[Temporary151.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary151.kind, NTI570425392)); }
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437158.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym839_570437119.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym839_570437120, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary151.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym839_570437119)));
              }
              
              var Temporary152 = symVal_570437054;
              if (ConstSet453[Temporary152.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary152.atomicKind, NTI570425391)); }
              var Temporary153 = str_570437116;
              if (ConstSet454[Temporary153.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary153.atomicKind, NTI570425391)); }
              (Temporary154 = Temporary152.str, Temporary154).push.apply(Temporary154, Temporary153.str);;
              i_570442636 += 1;
              if (!(((colontmp__570442635).length == L_570442637))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_570434714 = {kind: 16, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 12:
      if (!(((args_570434767).length == 2))) {
      var inst_570437163 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1576, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437163.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,105,103,110,32,116,97,107,101,115,32,101,120,97,99,116,108,121,32,116,119,111,32,97,114,103,117,109,101,110,116,115]));
      }
      
      var lsym_570437164 = args_570434767[chckIndx(0, 0, (args_570434767).length - 1)];
      if (!((lsym_570437164.kind == 0))) {
      var inst_570437170 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1580, Field2: 8};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437170.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(lsym_570437164.line),[41,58,32,70,105,114,115,116,32,97,114,103,117,109,101,110,116,32,116,111,32,97,115,115,105,103,110,32,109,117,115,116,32,98,101,32,97,32,115,121,109,98,111,108]));
      }
      
      var lval_570437171 = evaluate__lisp_u9364(s_p0, lsym_570437164);
      var ltype_570437172 = getType__lisp_u8338(lval_570437171);
      var rval_570437173 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      var rtype_570437174 = getType__lisp_u8338(rval_570437173);
      if (!(!((ConstSet455[lval_570437171.kind] != undefined)))) {
      var inst_570437180 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1589, Field2: 11};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437180.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(args_570434767[chckIndx(1, 0, (args_570434767).length - 1)].line),[41,58,32,82,101,98,105,110,100,105,110,103,32,116,121,112,101,115,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100]));
      }
      
      var converted_570437181 = convertValueToType__lisp_u8486(copyTree__lisp_u2692(rval_570437173), ltype_570437172);
      lval_570437171 = nimCopy(lval_570437171, converted_570437181, NTI570425406);
      result_570434714 = {kind: 16, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 32:
      if (!((0 < (args_570434767).length))) {
      var inst_570437186 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1601, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437186.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,73,110,118,97,108,105,100,32,99,108,97,115,115,32,100,101,99,108,97,114,97,116,105,111,110]));
      }
      
      var name_570437187 = args_570434767[chckIndx(0, 0, (args_570434767).length - 1)];
      var nHEX60gensym851_570437190 = name_570437187;
      var kindHEX60gensym851_570437191 = 0;
      var nHEX60gensym852_570437193 = nHEX60gensym851_570437190;
      if (!(!((nHEX60gensym852_570437193 == null)))) {
      var inst_570437198 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437198.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym852_570437193.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym851_570437190.kind == kindHEX60gensym851_570437191))) {
      var inst_570437213 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437213.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym851_570437190.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym851_570437191, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym851_570437190.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym851_570437190)));
      }
      
      var parent_570437214 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      if ((parent_570437214.kind == 15)) {
      parent_570437214 = null;
      }
      else {
        var nHEX60gensym855_570437221 = parent_570437214;
        var kindHEX60gensym855_570437222 = 17;
        var nHEX60gensym856_570437224 = nHEX60gensym855_570437221;
        if (!(!((nHEX60gensym856_570437224 == null)))) {
        var inst_570437229 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437229.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym856_570437224.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
        }
        
        if (!((nHEX60gensym855_570437221.kind == kindHEX60gensym855_570437222))) {
        var inst_570437244 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437244.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym855_570437221.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym855_570437222, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym855_570437221.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym855_570437221)));
        }
        
      }
      
      var Temporary155 = name_570437187;
      if (ConstSet456[Temporary155.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary155.kind, NTI570425392)); }
      result_570434714 = {kind: 17, classParent: parent_570437214, className: nimCopy(null, Temporary155.sym, NTI33554449), classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), line: 0, tags: {}, enumType: null, member: [], classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      Label156: {
        var a_570437263 = null;
        var colontmp__570442640 = [];
        colontmp__570442640 = HEX5BHEX5D__lisp_u9400(args_570434767, HEX2EHEX2E__stdZenumutils_u105(2, 1));
        var i_570442641 = 0;
        var L_570442642 = (colontmp__570442640).length;
        Label157: {
            Label158: while (true) {
            if (!(i_570442641 < L_570442642)) break Label158;
              a_570437263 = colontmp__570442640[chckIndx(i_570442641, 0, (colontmp__570442640).length - 1)];
              var nHEX60gensym861_570437266 = a_570437263;
              var kindHEX60gensym861_570437267 = 1;
              var nHEX60gensym862_570437269 = nHEX60gensym861_570437266;
              if (!(!((nHEX60gensym862_570437269 == null)))) {
              var inst_570437274 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437274.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym862_570437269.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
              }
              
              if (!((nHEX60gensym861_570437266.kind == kindHEX60gensym861_570437267))) {
              var inst_570437289 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437289.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym861_570437266.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym861_570437267, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym861_570437266.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym861_570437266)));
              }
              
              var nHEX60gensym865_570437292 = HEX5BHEX5D__lisp_u8216(a_570437263, 0);
              var kindHEX60gensym865_570437293 = 0;
              var nHEX60gensym866_570437295 = nHEX60gensym865_570437292;
              if (!(!((nHEX60gensym866_570437295 == null)))) {
              var inst_570437300 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437300.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym866_570437295.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
              }
              
              if (!((nHEX60gensym865_570437292.kind == kindHEX60gensym865_570437293))) {
              var inst_570437315 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437315.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym865_570437292.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym865_570437293, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym865_570437292.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym865_570437292)));
              }
              
              var Temporary159 = HEX5BHEX5D__lisp_u8216(a_570437263, 0);
              if (ConstSet457[Temporary159.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary159.kind, NTI570425392)); }
              switch (toJSStr(Temporary159.sym)) {
              case "field":
                  var Temporary160 = a_570437263;
                  if (ConstSet458[Temporary160.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary160.kind, NTI570425392)); }
                if (!(((Temporary160.kids).length == 3))) {
                var inst_570437320 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1624, Field2: 9};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437320.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(a_570437263.line),[41,58,32,70,105,101,108,100,32,100,101,99,108,97,114,97,116,105,111,110,32,109,117,115,116,32,104,97,118,101,32,101,120,97,99,116,108,121,32,50,32,97,114,103,117,109,101,110,116,115]));
                }
                
                var fieldName_570437321 = HEX5BHEX5D__lisp_u8216(a_570437263, 1);
                var nHEX60gensym870_570437324 = fieldName_570437321;
                var kindHEX60gensym870_570437325 = 0;
                var nHEX60gensym871_570437327 = nHEX60gensym870_570437324;
                if (!(!((nHEX60gensym871_570437327 == null)))) {
                var inst_570437332 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437332.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym871_570437327.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
                }
                
                if (!((nHEX60gensym870_570437324.kind == kindHEX60gensym870_570437325))) {
                var inst_570437347 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437347.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym870_570437324.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym870_570437325, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym870_570437324.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym870_570437324)));
                }
                
                  var Temporary161 = result_570434714;
                  if (ConstSet459[Temporary161.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary161.kind, NTI570425392)); }
                  var Temporary162 = fieldName_570437321;
                  if (ConstSet460[Temporary162.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary162.kind, NTI570425392)); }
                if (!(!(contains__lisp_u8776(Temporary161.classFields, Temporary162.sym)))) {
                var inst_570437392 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1630, Field2: 17};
                var Temporary163 = fieldName_570437321;
                if (ConstSet461[Temporary163.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary163.kind, NTI570425392)); }
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437392.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(fieldName_570437321.line),[41,58,32,70,105,101,108,100,32,97,108,114,101,97,100,121,32,100,101,102,105,110,101,100,58,32],Temporary163.sym));
                }
                
                var fieldType_570437393 = evaluate__lisp_u9364(s_p0, HEX5BHEX5D__lisp_u8216(a_570437263, 2));
                if (!((ConstSet462[fieldType_570437393.kind] != undefined))) {
                var inst_570437399 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1634, Field2: 17};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437399.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(fieldType_570437393.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,116,121,112,101]));
                }
                
                var Temporary164 = result_570434714;
                if (ConstSet463[Temporary164.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary164.kind, NTI570425392)); }
                var Temporary165 = fieldName_570437321;
                if (ConstSet464[Temporary165.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary165.kind, NTI570425392)); }
                HEX5BHEX5DHEX3D__lisp_u2797(Temporary164.classFields, Temporary165.sym, fieldType_570437393);
                break;
              case "method":
                  var Temporary166 = a_570437263;
                  if (ConstSet465[Temporary166.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary166.kind, NTI570425392)); }
                if (!((2 <= (Temporary166.kids).length))) {
                var inst_570437446 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1638, Field2: 9};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437446.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(a_570437263.line),[41,58,32,77,101,116,104,111,100,32,100,101,99,108,97,114,97,116,105,111,110,32,109,117,115,116,32,104,97,118,101,32,97,116,32,108,101,97,115,116,32,116,119,111,32,97,114,103,117,109,101,110,116,115]));
                }
                
                var methodName_570437447 = HEX5BHEX5D__lisp_u8216(a_570437263, 1);
                var nHEX60gensym880_570437450 = methodName_570437447;
                var kindHEX60gensym880_570437451 = 0;
                var nHEX60gensym881_570437453 = nHEX60gensym880_570437450;
                if (!(!((nHEX60gensym881_570437453 == null)))) {
                var inst_570437458 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437458.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym881_570437453.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
                }
                
                if (!((nHEX60gensym880_570437450.kind == kindHEX60gensym880_570437451))) {
                var inst_570437473 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437473.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym880_570437450.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym880_570437451, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym880_570437450.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym880_570437450)));
                }
                
                  var Temporary167 = result_570434714;
                  if (ConstSet466[Temporary167.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classMethods\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary167.kind, NTI570425392)); }
                  var Temporary168 = methodName_570437447;
                  if (ConstSet467[Temporary168.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary168.kind, NTI570425392)); }
                if (!(!(contains__lisp_u8776(Temporary167.classMethods, Temporary168.sym)))) {
                var inst_570437518 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1642, Field2: 18};
                var Temporary169 = methodName_570437447;
                if (ConstSet468[Temporary169.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary169.kind, NTI570425392)); }
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437518.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(methodName_570437447.line),[41,58,32,77,101,116,104,111,100,32,97,108,114,101,97,100,121,32,100,101,102,105,110,101,100,58,32],Temporary169.sym));
                }
                
                var funcNode_570437519 = evaluate__lisp_u9364(s_p0, HEX5BHEX5D__lisp_u8216(a_570437263, 2));
                var nHEX60gensym886_570437522 = funcNode_570437519;
                var kindHEX60gensym886_570437523 = 2;
                var nHEX60gensym887_570437525 = nHEX60gensym886_570437522;
                if (!(!((nHEX60gensym887_570437525 == null)))) {
                var inst_570437530 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437530.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym887_570437525.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
                }
                
                if (!((nHEX60gensym886_570437522.kind == kindHEX60gensym886_570437523))) {
                var inst_570437545 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437545.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym886_570437522.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym886_570437523, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym886_570437522.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym886_570437522)));
                }
                
                var Temporary170 = result_570434714;
                if (ConstSet469[Temporary170.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classMethods\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary170.kind, NTI570425392)); }
                var Temporary171 = methodName_570437447;
                if (ConstSet470[Temporary171.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary171.kind, NTI570425392)); }
                HEX5BHEX5DHEX3D__lisp_u2797(Temporary170.classMethods, Temporary171.sym, funcNode_570437519);
                break;
              default: 
                if (true) {
                var inst_570437589 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1650, Field2: 9};
                var Temporary172 = HEX5BHEX5D__lisp_u8216(a_570437263, 0);
                if (ConstSet471[Temporary172.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary172.kind, NTI570425392)); }
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437589.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,73,110,118,97,108,105,100,32,99,108,97,115,115,32,109,101,109,98,101,114,58,32],Temporary172.sym));
                }
                
                break;
              }
              i_570442641 += 1;
              if (!(((colontmp__570442640).length == L_570442642))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      var Temporary174 = name_570437187;
      if (ConstSet472[Temporary174.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary174.kind, NTI570425392)); }
      HEX5BHEX5DHEX3D__lisp_u2797((Temporary173 = HEX5BHEX5D__lisp_u10516(s_p0.stacks, 1), Temporary173)[0][Temporary173[1]].symbols, Temporary174.sym, result_570434714);
      result_570434714 = {kind: 16, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 11:
      if (!(((args_570434767).length == 1))) {
      var inst_570437640 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1656, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437640.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,84,121,112,101,32,100,101,99,108,97,114,97,116,105,111,110,32,104,97,115,32,110,111,32,97,114,103,117,109,101,110,116,115]));
      }
      
      var fields_570437641 = args_570434767[chckIndx(0, 0, (args_570434767).length - 1)];
      if (!((fields_570437641.kind == 1))) {
      var inst_570437647 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1659, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437647.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,84,121,112,101,32,102,105,101,108,100,115,32,109,117,115,116,32,98,101,32,97,32,108,105,115,116]));
      }
      
      result_570434714 = {kind: 6, objectTypeFields: ({data: [], counter: 0}), line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      Label175: {
        var f_570437651 = null;
        var colontmp__570442645 = [];
        var Temporary176 = fields_570437641;
        if (ConstSet473[Temporary176.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary176.kind, NTI570425392)); }
        colontmp__570442645 = Temporary176.kids;
        var i_570442646 = 0;
        var L_570442647 = (colontmp__570442645).length;
        Label177: {
            Label178: while (true) {
            if (!(i_570442646 < L_570442647)) break Label178;
              f_570437651 = colontmp__570442645[chckIndx(i_570442646, 0, (colontmp__570442645).length - 1)];
              if (!((f_570437651.kind == 1))) {
              var inst_570437657 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1664, Field2: 7};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437657.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(f_570437651.line),[41,58,32,84,121,112,101,32,102,105,101,108,100,115,32,109,117,115,116,32,98,101,32,108,105,115,116,115]));
              }
              
                var Temporary179 = f_570437651;
                if (ConstSet474[Temporary179.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary179.kind, NTI570425392)); }
              if (!(((Temporary179.kids).length == 2))) {
              var inst_570437662 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1665, Field2: 7};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437662.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(f_570437651.line),[41,58,32,84,121,112,101,32,102,105,101,108,100,115,32,109,117,115,116,32,104,97,118,101,32,101,120,97,99,116,108,121,32,116,119,111,32,101,108,101,109,101,110,116,115]));
              }
              
              var Temporary180 = f_570437651;
              if (ConstSet475[Temporary180.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary180.kind, NTI570425392)); }
              var name_570437663 = (Temporary181 = Temporary180.kids, Temporary181)[chckIndx(0, 0, (Temporary181).length - 1)];
              if (!((name_570437663.kind == 0))) {
              var inst_570437669 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1668, Field2: 10};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437669.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(name_570437663.line),[41,58,32,84,121,112,101,32,102,105,101,108,100,32,110,97,109,101,115,32,109,117,115,116,32,98,101,32,115,121,109,98,111,108,115]));
              }
              
                var Temporary182 = result_570434714;
                if (ConstSet476[Temporary182.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectTypeFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary182.kind, NTI570425392)); }
                var Temporary183 = name_570437663;
                if (ConstSet477[Temporary183.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary183.kind, NTI570425392)); }
              if (!(!(contains__lisp_u8776(Temporary182.objectTypeFields, Temporary183.sym)))) {
              var inst_570437714 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1669, Field2: 10};
              var Temporary184 = name_570437663;
              if (ConstSet478[Temporary184.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary184.kind, NTI570425392)); }
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437714.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(name_570437663.line),[41,58,32,70,105,101,108,100,32,97,108,114,101,97,100,121,32,100,101,102,105,110,101,100,58,32],Temporary184.sym));
              }
              
              var Temporary185 = f_570437651;
              if (ConstSet479[Temporary185.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary185.kind, NTI570425392)); }
              var typ_570437715 = evaluate__lisp_u9364(s_p0, (Temporary186 = Temporary185.kids, Temporary186)[chckIndx(1, 0, (Temporary186).length - 1)]);
              if (!((ConstSet480[typ_570437715.kind] != undefined))) {
              var inst_570437724 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1673, Field2: 9};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437724.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(typ_570437715.line),[41,58,32],([69,120,112,101,99,116,101,100,32,97,32,116,121,112,101,58,32]).concat(reprEnum(typ_570437715.kind, NTI570425392))));
              }
              
              var Temporary187 = result_570434714;
              if (ConstSet481[Temporary187.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectTypeFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary187.kind, NTI570425392)); }
              var Temporary188 = name_570437663;
              if (ConstSet482[Temporary188.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary188.kind, NTI570425392)); }
              HEX5BHEX5DHEX3D__lisp_u2797(Temporary187.objectTypeFields, Temporary188.sym, typ_570437715);
              i_570442646 += 1;
              if (!(((colontmp__570442645).length == L_570442647))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 10:
      if (!(((args_570434767).length == 2))) {
      var inst_570437771 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1678, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437771.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,84,101,115,116,32,116,97,107,101,115,32,50,32,97,114,103,117,109,101,110,116,115]));
      }
      
      result_570434714 = {kind: 16, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      var expected_570437772 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var actual_570437773 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      var cond_570437774 = HEX3DHEX3D__lisp_u1499(expected_570437772, actual_570437773);
      if (!(cond_570437774)) {
      var inst_570437776 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1693, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437776.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,10],HEX24__lisp_u6182(n_p1),[10],HEX24__lisp_u6182(args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]),[32,61,62,32],HEX24__lisp_u6182(expected_570437772),[10],HEX24__lisp_u6182(args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]),[32,61,62,32],HEX24__lisp_u6182(actual_570437773)));
      }
      
      break;
    case 9:
      result_570434714 = {kind: 4, tableType: {kind: 12, tableKeyType: null, tableValueType: null, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], arrayValueType: null}, tableVal: ({data: [], counter: 0}), line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      var Temporary189 = result_570434714;
      if (ConstSet484[Temporary189.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary189.kind, NTI570425392)); }
      var Temporary190 = Temporary189.tableType;
      if (ConstSet483[Temporary190.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableKeyType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary190.kind, NTI570425392)); }
      Temporary190.tableKeyType = {kind: 14, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      var Temporary191 = result_570434714;
      if (ConstSet486[Temporary191.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary191.kind, NTI570425392)); }
      var Temporary192 = Temporary191.tableType;
      if (ConstSet485[Temporary192.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableValueType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary192.kind, NTI570425392)); }
      Temporary192.tableValueType = {kind: 14, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      Label193: {
        var a_570437780 = null;
        var i_570442650 = 0;
        var L_570442651 = (args_570434767).length;
        Label194: {
            Label195: while (true) {
            if (!(i_570442650 < L_570442651)) break Label195;
              a_570437780 = args_570434767[chckIndx(i_570442650, 0, (args_570434767).length - 1)];
              if (!((a_570437780.kind == 1))) {
              var inst_570437786 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1703, Field2: 7};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437786.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,69,120,112,101,99,116,101,100,32,112,97,105,114,115,32,111,102,32,107,101,121,115,32,97,110,100,32,118,97,108,117,101,115]));
              }
              
                var Temporary196 = a_570437780;
                if (ConstSet487[Temporary196.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary196.kind, NTI570425392)); }
              if (!(((Temporary196.kids).length == 2))) {
              var inst_570437791 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1704, Field2: 7};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437791.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,69,120,112,101,99,116,101,100,32,112,97,105,114,115,32,111,102,32,107,101,121,115,32,97,110,100,32,118,97,108,117,101,115]));
              }
              
              var Temporary197 = a_570437780;
              if (ConstSet488[Temporary197.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary197.kind, NTI570425392)); }
              var key_570437792 = evaluate__lisp_u9364(s_p0, (Temporary198 = Temporary197.kids, Temporary198)[chckIndx(0, 0, (Temporary198).length - 1)]);
              var Temporary199 = a_570437780;
              if (ConstSet489[Temporary199.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary199.kind, NTI570425392)); }
              var value_570437793 = evaluate__lisp_u9364(s_p0, (Temporary200 = Temporary199.kids, Temporary200)[chckIndx(1, 0, (Temporary200).length - 1)]);
              var Temporary201 = result_570434714;
              if (ConstSet490[Temporary201.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableVal\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary201.kind, NTI570425392)); }
              HEX5BHEX5DHEX3D__lisp_u4056(Temporary201.tableVal, key_570437792, value_570437793);
              i_570442650 += 1;
              if (!(((args_570434767).length == L_570442651))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 8:
      var initialStacksHEX60gensym905_570437841 = (s_p0.stacks).length;
      var newStackHEX60gensym905_570437842 = {kind: 0, symbols: ({data: [], counter: 0}), currentClassObj: null};
      s_p0.stacks.push(newStackHEX60gensym905_570437842);;
      try {
      result_570434714 = {kind: 16, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      Label203: {
        var a_570437850 = null;
        var i_570442654 = 0;
        var L_570442655 = (args_570434767).length;
        Label204: {
            Label205: while (true) {
            if (!(i_570442654 < L_570442655)) break Label205;
              a_570437850 = args_570434767[chckIndx(i_570442654, 0, (args_570434767).length - 1)];
              result_570434714 = evaluate__lisp_u9364(s_p0, a_570437850);
              i_570442654 += 1;
              if (!(((args_570434767).length == L_570442655))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      } finally {
      if (!(((Temporary206 = HEX5BHEX5D__lisp_u10516(s_p0.stacks, 1), Temporary206)[0][Temporary206[1]] == newStackHEX60gensym905_570437842))) {
      failedAssertImpl__stdZassertions_u84(makeNimstrLit("lisp.nim(537, 5) `s.stacks[BackwardsIndex(1)] == newStack`gensym905` "));
      }
      
      delete__lisp_u10553(s_p0, "stacks", chckRange((s_p0.stacks).length - 1, 0, 2147483647));
      }
      if (!(((s_p0.stacks).length == initialStacksHEX60gensym905_570437841))) {
      failedAssertImpl__stdZassertions_u84(makeNimstrLit("lisp.nim(1710, 5) `len(s.stacks) == initialStacks`gensym905` Stack imbalance"));
      }
      
      break;
    case 7:
      if (!(((args_570434767).length == 1))) {
      var inst_570437883 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1716, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437883.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,82,101,112,114,32,116,97,107,101,115,32,101,120,97,99,116,108,121,32,111,110,101,32,97,114,103,117,109,101,110,116]));
      }
      
      var arg_570437884 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      if (isKind__lisp_u288(arg_570437884, 1)) {
      var Temporary208 = arg_570437884;
      if (ConstSet491[Temporary208.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary208.atomicKind, NTI570425391)); }
      Temporary207 = [34].concat(Temporary208.str,[34]);
      }
      else {
      Temporary207 = HEX24__lisp_u6182(arg_570437884);
      }
      
      var str_570437885 = nimCopy(null, Temporary207, NTI33554449);
      print__lisp_u13(([91]).concat(HEX24__systemZdollars_u8(n_p1.line),[93,32],HEX24__lisp_u6182(n_p1),[32,61,62,32],str_570437885));
      result_570434714 = {kind: 16, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 6:
      if (!(((args_570434767).length == 1))) {
      var inst_570437890 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1738, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437890.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,69,99,104,111,32,116,97,107,101,115,32,101,120,97,99,116,108,121,32,111,110,101,32,97,114,103,117,109,101,110,116]));
      }
      
      result_570434714 = {kind: 16, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      var arg_570437891 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      print__lisp_u13(HEX24__lisp_u6182(arg_570437891));
      break;
    case 5:
      if (!((2 <= (args_570434767).length))) {
      failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,49,55,52,53,44,32,53,41,32,96,10,50,32,60,61,32,108,101,110,40,97,114,103,115,41,96,32]);
      }
      
      var params_570437900 = args_570434767[chckIndx(0, 0, (args_570434767).length - 1)];
      var nHEX60gensym916_570437903 = params_570437900;
      var kindHEX60gensym916_570437904 = 1;
      var nHEX60gensym917_570437906 = nHEX60gensym916_570437903;
      if (!(!((nHEX60gensym917_570437906 == null)))) {
      var inst_570437911 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437911.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym917_570437906.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym916_570437903.kind == kindHEX60gensym916_570437904))) {
      var inst_570437926 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437926.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym916_570437903.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym916_570437904, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym916_570437903.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym916_570437903)));
      }
      
      var funcReturnType_570437927 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      if (!((ConstSet492[funcReturnType_570437927.kind] != undefined))) {
      var inst_570437933 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1752, Field2: 11};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437933.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(args_570434767[chckIndx(1, 0, (args_570434767).length - 1)].line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,114,101,116,117,114,110,32,116,121,112,101,58,32],HEX24__lisp_u6182(funcReturnType_570437927)));
      }
      
      var funcParams_570437934 = [];
      var funcTypes_570437935 = [];
      Label209: {
        var p_570437939 = null;
        var colontmp__570442658 = [];
        var Temporary210 = params_570437900;
        if (ConstSet493[Temporary210.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary210.kind, NTI570425392)); }
        colontmp__570442658 = Temporary210.kids;
        var i_570442659 = 0;
        var L_570442660 = (colontmp__570442658).length;
        Label211: {
            Label212: while (true) {
            if (!(i_570442659 < L_570442660)) break Label212;
              p_570437939 = colontmp__570442658[chckIndx(i_570442659, 0, (colontmp__570442658).length - 1)];
              if ((p_570437939.kind == 0)) {
              var Temporary213 = p_570437939;
              if (ConstSet494[Temporary213.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary213.kind, NTI570425392)); }
              var Temporary214 = nimCopy(null, Temporary213.sym, NTI33554449);
              funcParams_570437934.push(Temporary214);;
              funcTypes_570437935.push(null);;
              }
              else {
                if (!((p_570437939.kind == 1))) {
                var inst_570437957 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1763, Field2: 9};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437957.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,73,110,118,97,108,105,100,32,108,97,109,98,100,97,32,112,97,114,97,109,101,116,101,114,58,32],HEX24__lisp_u6182(p_570437939)));
                }
                
                  var Temporary215 = p_570437939;
                  if (ConstSet495[Temporary215.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary215.kind, NTI570425392)); }
                if (!(((Temporary215.kids).length == 2))) {
                var inst_570437962 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1764, Field2: 9};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437962.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(p_570437939.line),[41,58,32,73,110,118,97,108,105,100,32,108,97,109,98,100,97,32,112,97,114,97,109,101,116,101,114,58,32],HEX24__lisp_u6182(p_570437939)));
                }
                
                var Temporary216 = p_570437939;
                if (ConstSet496[Temporary216.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary216.kind, NTI570425392)); }
                var name_570437963 = (Temporary217 = Temporary216.kids, Temporary217)[chckIndx(0, 0, (Temporary217).length - 1)];
                if (!((name_570437963.kind == 0))) {
                var inst_570437969 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1767, Field2: 12};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437969.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(name_570437963.line),[41,58,32,73,110,118,97,108,105,100,32,108,97,109,98,100,97,32,112,97,114,97,109,101,116,101,114,58,32],HEX24__lisp_u6182(p_570437939)));
                }
                
                var Temporary218 = p_570437939;
                if (ConstSet497[Temporary218.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary218.kind, NTI570425392)); }
                var typ_570437970 = evaluate__lisp_u9364(s_p0, (Temporary219 = Temporary218.kids, Temporary219)[chckIndx(1, 0, (Temporary219).length - 1)]);
                if (!((ConstSet498[typ_570437970.kind] != undefined))) {
                var inst_570437976 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1770, Field2: 11};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570437976.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(typ_570437970.line),[41,58,32,73,110,118,97,108,105,100,32,108,97,109,98,100,97,32,112,97,114,97,109,101,116,101,114,58,32],HEX24__lisp_u6182(p_570437939)));
                }
                
                var Temporary220 = name_570437963;
                if (ConstSet499[Temporary220.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary220.kind, NTI570425392)); }
                var Temporary221 = nimCopy(null, Temporary220.sym, NTI33554449);
                funcParams_570437934.push(Temporary221);;
                funcTypes_570437935.push(typ_570437970);;
              }
              
              i_570442659 += 1;
              if (!(((colontmp__570442658).length == L_570442660))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      var body_570437989 = astList__lisp_u2689([ast__lisp_u2661(8)]);
      var Temporary222 = body_570437989;
      if (ConstSet500[Temporary222.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary222.kind, NTI570425392)); }
      add__lisp_u8865(Temporary222, "kids", HEX5BHEX5D__lisp_u9400(args_570434767, HEX2EHEX2E__stdZenumutils_u105(1, 1)));
      if (!(!((body_570437989 == null)))) {
      var inst_570438014 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1778, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438014.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
      }
      
      if (!(!((funcReturnType_570437927 == null)))) {
      var inst_570438020 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1779, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438020.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
      }
      
      result_570434714 = {kind: 2, funcParams: nimCopy(null, funcParams_570437934, NTI570434255), funcTypes: nimCopy(null, funcTypes_570437935, NTI570434256), funcBody: body_570437989, funcReturnType: funcReturnType_570437927, funcObj: null, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      break;
    case 0:
      if (!(((args_570434767).length == 1))) {
      var inst_570438025 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1789, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438025.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,81,117,111,116,101,32,116,97,107,101,115,32,101,120,97,99,116,108,121,32,111,110,101,32,97,114,103,117,109,101,110,116]));
      }
      
      result_570434714 = args_570434767[chckIndx(0, 0, (args_570434767).length - 1)];
      break;
    case 1:
      if (!(((args_570434767).length == 1))) {
      var inst_570438030 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1792, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438030.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,69,118,97,108,32,116,97,107,101,115,32,101,120,97,99,116,108,121,32,111,110,101,32,97,114,103,117,109,101,110,116]));
      }
      
      var a_570438031 = args_570434767[chckIndx(0, 0, (args_570434767).length - 1)];
      if ((a_570438031.kind == 0)) {
      a_570438031 = evaluate__lisp_u9364(s_p0, a_570438031);
      }
      
      if (!((a_570438031.kind == 1))) {
      var inst_570438041 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1796, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438041.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,69,118,97,108,32,116,97,107,101,115,32,97,32,108,105,115,116,32,97,115,32,97,110,32,97,114,103,117,109,101,110,116]));
      }
      
      result_570434714 = evaluate__lisp_u9364(s_p0, a_570438031);
      break;
    case 2:
      if (!(((args_570434767).length == 2))) {
      var inst_570438046 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1799, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438046.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,86,97,114,32,116,97,107,101,115,32,101,120,97,99,116,108,121,32,116,119,111,32,97,114,103,117,109,101,110,116,115]));
      }
      
      var sym_570438047 = args_570434767[chckIndx(0, 0, (args_570434767).length - 1)];
      if (!((sym_570438047.kind == 0))) {
      var inst_570438053 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1802, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438053.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,70,105,114,115,116,32,97,114,103,117,109,101,110,116,32,116,111,32,118,97,114,32,109,117,115,116,32,98,101,32,97,32,115,121,109,98,111,108]));
      }
      
        var Temporary224 = sym_570438047;
        if (ConstSet501[Temporary224.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary224.kind, NTI570425392)); }
      if (!(!(hasKey__lisp_u2089((Temporary223 = HEX5BHEX5D__lisp_u10516(s_p0.stacks, 1), Temporary223)[0][Temporary223[1]].symbols, Temporary224.sym)))) {
      var inst_570438100 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1803, Field2: 5};
      var Temporary225 = sym_570438047;
      if (ConstSet502[Temporary225.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary225.kind, NTI570425392)); }
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438100.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,83,121,109,98,111,108,32,97,108,114,101,97,100,121,32,100,101,102,105,110,101,100,58,32],Temporary225.sym));
      }
      
      var value_570438101 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      if (!(!((value_570438101.kind == 0)))) {
      var inst_570438107 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1808, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438107.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),makeNimstrLit("): This is why Common Lisp uses keywords instead of symbols for this purpose.")));
      }
      
      var Temporary227 = sym_570438047;
      if (ConstSet503[Temporary227.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary227.kind, NTI570425392)); }
      HEX5BHEX5DHEX3D__lisp_u2797((Temporary226 = HEX5BHEX5D__lisp_u10516(s_p0.stacks, 1), Temporary226)[0][Temporary226[1]].symbols, Temporary227.sym, value_570438101);
      result_570434714 = value_570438101;
      break;
    case 3:
      if (!(contains__lisp_u12851(new Int32Array([2, 3]), (args_570434767).length))) {
      var inst_570438232 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1822, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438232.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,73,102,32,116,97,107,101,115,32,116,119,111,32,111,114,32,116,104,114,101,101,32,97,114,103,117,109,101,110,116,115]));
      }
      
      var condition_570438233 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      if (!((getAtomicValueKind__lisp_u5514(condition_570438233) == 2))) {
      var inst_570438239 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1825, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438239.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,70,105,114,115,116,32,97,114,103,117,109,101,110,116,32,116,111,32,105,102,32,109,117,115,116,32,98,101,32,97,32,98,111,111,108,101,97,110]));
      }
      
        var Temporary228 = condition_570438233;
        if (ConstSet504[Temporary228.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolean\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary228.atomicKind, NTI570425391)); }
      if (Temporary228.boolean) {
      result_570434714 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      }
      else {
        if (((args_570434767).length == 3)) {
        result_570434714 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(2, 0, (args_570434767).length - 1)]);
        }
        else {
          result_570434714 = {kind: 16, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
        }
        
      }
      
      break;
    case 25:
      if (!(((args_570434767).length == 2))) {
      var inst_570438247 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1836, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438247.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,102,105,108,116,101,114,45,97,114,114,97,121,32,116,97,107,101,115,32,101,120,97,99,116,108,121,32,116,119,111,32,97,114,103,117,109,101,110,116,115]));
      }
      
      var arr_570438248 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var nHEX60gensym947_570438251 = arr_570438248;
      var kindHEX60gensym947_570438252 = 1;
      var nHEX60gensym948_570438254 = nHEX60gensym947_570438251;
      if (!(!((nHEX60gensym948_570438254 == null)))) {
      var inst_570438259 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438259.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym948_570438254.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym947_570438251.kind == kindHEX60gensym947_570438252))) {
      var inst_570438274 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438274.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym947_570438251.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym947_570438252, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym947_570438251.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym947_570438251)));
      }
      
      var compare_570438275 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      var nHEX60gensym951_570438278 = compare_570438275;
      var kindHEX60gensym951_570438279 = 2;
      var nHEX60gensym952_570438281 = nHEX60gensym951_570438278;
      if (!(!((nHEX60gensym952_570438281 == null)))) {
      var inst_570438286 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438286.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym952_570438281.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym951_570438278.kind == kindHEX60gensym951_570438279))) {
      var inst_570438301 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438301.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym951_570438278.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym951_570438279, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym951_570438278.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym951_570438278)));
      }
      
      result_570434714 = {kind: 1, kids: [], listType: null, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      Label229: {
        var a_570438305 = null;
        var colontmp__570442663 = [];
        var Temporary230 = arr_570438248;
        if (ConstSet505[Temporary230.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary230.kind, NTI570425392)); }
        colontmp__570442663 = Temporary230.kids;
        var i_570442664 = 0;
        var L_570442665 = (colontmp__570442663).length;
        Label231: {
            Label232: while (true) {
            if (!(i_570442664 < L_570442665)) break Label232;
              a_570438305 = colontmp__570442663[chckIndx(i_570442664, 0, (colontmp__570442663).length - 1)];
              var res_570438310 = evaluate__lisp_u9364(s_p0, astList__lisp_u2689([compare_570438275, a_570438305]));
              var nHEX60gensym955_570438313 = res_570438310;
              var kindHEX60gensym955_570438314 = 9;
              var nHEX60gensym956_570438316 = nHEX60gensym955_570438313;
              if (!(!((nHEX60gensym956_570438316 == null)))) {
              var inst_570438321 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438321.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym956_570438316.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
              }
              
              if (!((nHEX60gensym955_570438313.kind == kindHEX60gensym955_570438314))) {
              var inst_570438336 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438336.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym955_570438313.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym955_570438314, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym955_570438313.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym955_570438313)));
              }
              
              var nHEX60gensym959_570438339 = res_570438310;
              var kindHEX60gensym959_570438340 = 2;
              var nHEX60gensym960_570438343 = nHEX60gensym959_570438339;
              var kindHEX60gensym960_570438344 = 9;
              var nHEX60gensym961_570438346 = nHEX60gensym960_570438343;
              if (!(!((nHEX60gensym961_570438346 == null)))) {
              var inst_570438351 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438351.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym961_570438346.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
              }
              
              if (!((nHEX60gensym960_570438343.kind == kindHEX60gensym960_570438344))) {
              var inst_570438366 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438366.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym960_570438343.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym960_570438344, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym960_570438343.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym960_570438343)));
              }
              
                var Temporary233 = nHEX60gensym959_570438339;
                if (ConstSet506[Temporary233.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary233.kind, NTI570425392)); }
              if (!((Temporary233.atomicKind == kindHEX60gensym959_570438340))) {
              var inst_570438378 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
              var Temporary234 = nHEX60gensym959_570438339;
              if (ConstSet507[Temporary234.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary234.kind, NTI570425392)); }
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438378.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym959_570438339.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym959_570438340, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary234.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym959_570438339)));
              }
              
                var Temporary235 = res_570438310;
                if (ConstSet508[Temporary235.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'boolean\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary235.atomicKind, NTI570425391)); }
              if (Temporary235.boolean) {
              var Temporary236 = result_570434714;
              if (ConstSet509[Temporary236.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary236.kind, NTI570425392)); }
              Temporary236.kids.push(a_570438305);;
              }
              
              i_570442664 += 1;
              if (!(((colontmp__570442663).length == L_570442665))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 24:
      if (!(((args_570434767).length == 2))) {
      var inst_570438387 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1854, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438387.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,97,114,114,97,121,45,103,101,116,32,116,97,107,101,115,32,101,120,97,99,116,108,121,32,116,119,111,32,97,114,103,117,109,101,110,116,115]));
      }
      
      var arr_570438388 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(0, 0, (args_570434767).length - 1)]);
      var nHEX60gensym966_570438391 = arr_570438388;
      var kindHEX60gensym966_570438392 = 1;
      var nHEX60gensym967_570438394 = nHEX60gensym966_570438391;
      if (!(!((nHEX60gensym967_570438394 == null)))) {
      var inst_570438399 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438399.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym967_570438394.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
      }
      
      if (!((nHEX60gensym966_570438391.kind == kindHEX60gensym966_570438392))) {
      var inst_570438414 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438414.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym966_570438391.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym966_570438392, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym966_570438391.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym966_570438391)));
      }
      
      var idx_570438415 = evaluate__lisp_u9364(s_p0, args_570434767[chckIndx(1, 0, (args_570434767).length - 1)]);
      expectInt__lisp_u8170(idx_570438415);
      var Temporary237 = arr_570438388;
      if (ConstSet510[Temporary237.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary237.kind, NTI570425392)); }
      var Temporary238 = idx_570438415;
      if (ConstSet511[Temporary238.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary238.atomicKind, NTI570425391)); }
      result_570434714 = (Temporary239 = Temporary237.kids, Temporary239)[chckIndx(((Temporary238.num) | 0), 0, (Temporary239).length - 1)];
      break;
    case 26:
      if (!((0 < (args_570434767).length))) {
      var inst_570438421 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1864, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438421.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
      }
      
      Label240: {
        var iHEX60gensym973_570438442 = 0;
        var resultHEX60gensym973_570438466 = newSeq__lisp_u3899(chckRange((args_570434767).length, 0, 2147483647));
        Label241: {
          var it_570438470 = null;
          var i_570442669 = 0;
          var L_570442670 = (args_570434767).length;
          Label242: {
              Label243: while (true) {
              if (!(i_570442669 < L_570442670)) break Label243;
                it_570438470 = args_570434767[chckIndx(i_570442669, 0, (args_570434767).length - 1)];
                resultHEX60gensym973_570438466[chckIndx(iHEX60gensym973_570438442, 0, (resultHEX60gensym973_570438466).length - 1)] = evaluate__lisp_u9364(s_p0, it_570438470);
                iHEX60gensym973_570438442 = addInt(iHEX60gensym973_570438442, 1);
                i_570442669 += 1;
                if (!(((args_570434767).length == L_570442670))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      var args_570438475 = nimCopy(null, resultHEX60gensym973_570438466, NTI570427886);
      Label244: {
        var a_570438479 = null;
        var i_570442673 = 0;
        var L_570442674 = (args_570438475).length;
        Label245: {
            Label246: while (true) {
            if (!(i_570442673 < L_570442674)) break Label246;
              a_570438479 = args_570438475[chckIndx(i_570442673, 0, (args_570438475).length - 1)];
              var nHEX60gensym976_570438482 = a_570438479;
              var kindHEX60gensym976_570438483 = 0;
              var nHEX60gensym977_570438486 = nHEX60gensym976_570438482;
              var kindHEX60gensym977_570438487 = 9;
              var nHEX60gensym978_570438489 = nHEX60gensym977_570438486;
              if (!(!((nHEX60gensym978_570438489 == null)))) {
              var inst_570438494 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438494.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym978_570438489.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
              }
              
              if (!((nHEX60gensym977_570438486.kind == kindHEX60gensym977_570438487))) {
              var inst_570438509 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438509.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym977_570438486.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym977_570438487, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym977_570438486.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym977_570438486)));
              }
              
                var Temporary247 = nHEX60gensym976_570438482;
                if (ConstSet512[Temporary247.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary247.kind, NTI570425392)); }
              if (!((Temporary247.atomicKind == kindHEX60gensym976_570438483))) {
              var inst_570438521 = {Field0: [108,105,115,112,46,110,105,109], Field1: 793, Field2: 3};
              var Temporary248 = nHEX60gensym976_570438482;
              if (ConstSet513[Temporary248.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'atomicKind\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary248.kind, NTI570425392)); }
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438521.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym976_570438482.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym976_570438483, NTI570425391),[32,98,117,116,32,103,111,116,32],reprEnum(Temporary248.atomicKind, NTI570425391),[32,105,110,32],HEX24__lisp_u6182(nHEX60gensym976_570438482)));
              }
              
              i_570442673 += 1;
              if (!(((args_570438475).length == L_570442674))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((args_570438475).length == 1)) {
      var Temporary249 = evaluate__lisp_u9364(s_p0, args_570438475[chckIndx(0, 0, (args_570438475).length - 1)]);
      if (ConstSet514[Temporary249.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary249.atomicKind, NTI570425391)); }
      result_570434714 = ast__lisp_u2680(-(Temporary249.num));
      }
      else {
        var Temporary250 = evaluate__lisp_u9364(s_p0, args_570438475[chckIndx(0, 0, (args_570438475).length - 1)]);
        if (ConstSet515[Temporary250.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary250.atomicKind, NTI570425391)); }
        result_570434714 = ast__lisp_u2680(Temporary250.num);
        Label251: {
          var a_570438543 = null;
          var colontmp__570442677 = [];
          colontmp__570442677 = HEX5BHEX5D__lisp_u9400(args_570438475, HEX2EHEX2E__stdZenumutils_u105(1, 1));
          var i_570442678 = 0;
          var L_570442679 = (colontmp__570442677).length;
          Label252: {
              Label253: while (true) {
              if (!(i_570442678 < L_570442679)) break Label253;
                a_570438543 = colontmp__570442677[chckIndx(i_570442678, 0, (colontmp__570442677).length - 1)];
                var Temporary254 = result_570434714;
                if (ConstSet516[Temporary254.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary254.atomicKind, NTI570425391)); }
                var Temporary255 = evaluate__lisp_u9364(s_p0, a_570438543);
                if (ConstSet517[Temporary255.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary255.atomicKind, NTI570425391)); }
                HEX2DHEX3D__lisp_u11428(Temporary254, "num", Temporary255.num);
                i_570442678 += 1;
                if (!(((colontmp__570442677).length == L_570442679))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      }
      
      break;
    case 4:
      result_570434714 = {kind: 9, atomicKind: 0, num: 0.0, line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
      Label256: {
        var a_570438551 = null;
        var i_570442682 = 0;
        var L_570442683 = (args_570434767).length;
        Label257: {
            Label258: while (true) {
            if (!(i_570442682 < L_570442683)) break Label258;
              a_570438551 = args_570434767[chckIndx(i_570442682, 0, (args_570434767).length - 1)];
              var a_570438552 = evaluate__lisp_u9364(s_p0, a_570438551);
              if (!((getAtomicValueKind__lisp_u5514(a_570438552) == 0))) {
              var inst_570438558 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1883, Field2: 7};
              raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438558.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,114,103,117,109,101,110,116,32,116,111,32,43,32,109,117,115,116,32,98,101,32,97,32,110,117,109,98,101,114]));
              }
              
              var Temporary259 = result_570434714;
              if (ConstSet518[Temporary259.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary259.atomicKind, NTI570425391)); }
              var Temporary260 = a_570438552;
              if (ConstSet519[Temporary260.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary260.atomicKind, NTI570425391)); }
              HEX2BHEX3D__pureZstrutils_u2340(Temporary259, "num", Temporary260.num);
              i_570442682 += 1;
              if (!(((args_570434767).length == L_570442683))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    }

  return result_570434714;

}

function insert__lisp_u15138(dest_p0, dest_p0_Idx, src_p1, pos_p2) {
    var Temporary1;

  BeforeRet: {
    var j_570440490 = subInt((dest_p0[dest_p0_Idx]).length, 1);
    var i_570440494 = addInt(j_570440490, (src_p1).length);
    if ((i_570440494 == j_570440490)) {
    break BeforeRet;
    }
    
    if (dest_p0[dest_p0_Idx].length < (Temporary1 = chckRange(addInt(i_570440494, 1), 0, 2147483647), Temporary1)) { for (var i = dest_p0[dest_p0_Idx].length ; i < Temporary1 ; ++i) dest_p0[dest_p0_Idx].push(null); }
               else { dest_p0[dest_p0_Idx].length = Temporary1; };
    Label2: {
        Label3: while (true) {
        if (!(pos_p2 <= j_570440490)) break Label3;
          dest_p0[dest_p0_Idx][chckIndx(i_570440494, 0, (dest_p0[dest_p0_Idx]).length - 1)] = dest_p0[dest_p0_Idx][chckIndx(j_570440490, 0, (dest_p0[dest_p0_Idx]).length - 1)];
          i_570440494 = subInt(i_570440494, 1);
          j_570440490 = subInt(j_570440490, 1);
        }
    };
    j_570440490 = addInt(j_570440490, 1);
    Label4: {
      var item_570440521 = null;
      var i_570442704 = 0;
      Label5: {
          Label6: while (true) {
          if (!(i_570442704 < (src_p1).length)) break Label6;
            item_570440521 = src_p1[chckIndx(i_570442704, 0, (src_p1).length - 1)];
            dest_p0[dest_p0_Idx][chckIndx(j_570440490, 0, (dest_p0[dest_p0_Idx]).length - 1)] = item_570440521;
            j_570440490 = addInt(j_570440490, 1);
            i_570442704 += 1;
          }
      };
    };
  };

  
}

function update__lisp_u14793(s_p0, n_p1, n_p1_Idx, templateArgs_p2, parent_p3, indexInParent_p4) {
      var Temporary1;
    var Temporary2;
    var Temporary3;
      var Temporary4;
    var Temporary5;
      var Temporary6;
    var Temporary7;
    var Temporary8;
    var Temporary9;
    var Temporary10;
          var Temporary13;
          var Temporary14;
          var Temporary15;

    if (!(!((n_p1[n_p1_Idx] == null)))) {
    failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,50,48,55,57,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,41,96,32]);
    }
    
    if ((n_p1[n_p1_Idx].tags[0] != undefined)) {
    delete n_p1[n_p1_Idx].tags[0];
      var Temporary1 = n_p1[n_p1_Idx];
      if (ConstSet523[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI570425392)); }
    if (!(contains__lisp_u8776(templateArgs_p2, Temporary1.sym))) {
    var inst_570440205 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2084, Field2: 11};
    var Temporary2 = n_p1[n_p1_Idx];
    if (ConstSet524[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI570425392)); }
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440205.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1[n_p1_Idx].line),[41,58,32],([84,101,109,112,108,97,116,101,32,99,97,108,108,32,104,97,115,32,110,111,32,97,114,103,117,109,101,110,116,32,116,111,32,117,110,113,117,111,116,101,58,32]).concat(Temporary2.sym)));
    }
    
    var Temporary3 = n_p1[n_p1_Idx];
    if (ConstSet525[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI570425392)); }
    n_p1[n_p1_Idx] = HEX5BHEX5D__lisp_u14028(templateArgs_p2, Temporary3.sym);
    if (!(!((n_p1[n_p1_Idx] == null)))) {
    failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,50,48,56,57,44,32,49,49,41,32,96,110,111,116,32,105,115,78,105,108,40,110,41,96,32]);
    }
    
    }
    else {
    if ((n_p1[n_p1_Idx].tags[1] != undefined)) {
      var Temporary4 = n_p1[n_p1_Idx];
      if (ConstSet526[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI570425392)); }
    if (!(contains__lisp_u8776(templateArgs_p2, Temporary4.sym))) {
    var inst_570440316 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2091, Field2: 11};
    var Temporary5 = n_p1[n_p1_Idx];
    if (ConstSet527[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI570425392)); }
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440316.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1[n_p1_Idx].line),[41,58,32],([84,101,109,112,108,97,116,101,32,99,97,108,108,32,104,97,115,32,110,111,32,97,114,103,117,109,101,110,116,32,116,111,32,117,110,113,117,111,116,101,45,115,112,108,105,99,105,110,103,58,32]).concat(Temporary5.sym)));
    }
    
    if (!(!(HEX3DHEX3D__lisp_u1499(parent_p3, null)))) {
    var inst_570440318 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2093, Field2: 11};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440318.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1[n_p1_Idx].line),[41,58,32,67,97,110,39,116,32,117,110,113,117,111,116,101,45,115,112,108,105,99,101,32,97,116,32,116,104,101,32,116,111,112,32,108,101,118,101,108]));
    }
    
    if (!(!((parent_p3 == null)))) {
    var inst_570440323 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2095, Field2: 11};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440323.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1[n_p1_Idx].line),[41,58,32,67,97,110,39,116,32,117,110,113,117,111,116,101,45,115,112,108,105,99,101,32,97,116,32,116,104,101,32,116,111,112,32,108,101,118,101,108]));
    }
    
    if (!((parent_p3.kind == 1))) {
    var inst_570440329 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2097, Field2: 11};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440329.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1[n_p1_Idx].line),[41,58,32,67,97,110,39,116,32,117,110,113,117,111,116,101,45,115,112,108,105,99,101,32,111,117,116,115,105,100,101,32,111,102,32,97,32,108,105,115,116]));
    }
    
      var Temporary6 = parent_p3;
      if (ConstSet528[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI570425392)); }
    if (!(contains__lisp_u8292(HEX2EHEX2E__stdZstrbasics_u48(0, (Temporary6.kids).length - 1), indexInParent_p4))) {
    var inst_570440386 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2099, Field2: 11};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440386.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1[n_p1_Idx].line),[41,58,32,73,110,118,97,108,105,100,32,105,110,100,101,120,73,110,80,97,114,101,110,116]));
    }
    
    if (false) {
    var inst_570440392 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2101, Field2: 11};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440392.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1[n_p1_Idx].line),[41,58,32,67,97,110,39,116,32,117,110,113,117,111,116,101,45,115,112,108,105,99,101,32,97,32,110,111,110,45,108,105,115,116]));
    }
    
    delete n_p1[n_p1_Idx].tags[1];
    var Temporary7 = n_p1[n_p1_Idx];
    if (ConstSet529[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI570425392)); }
    var argToSplice_570440451 = HEX5BHEX5D__lisp_u14028(templateArgs_p2, Temporary7.sym);
    var nHEX60gensym1055_570440454 = argToSplice_570440451;
    var kindHEX60gensym1055_570440455 = 1;
    var nHEX60gensym1056_570440457 = nHEX60gensym1055_570440454;
    if (!(!((nHEX60gensym1056_570440457 == null)))) {
    var inst_570440462 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440462.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym1056_570440457.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
    }
    
    if (!((nHEX60gensym1055_570440454.kind == kindHEX60gensym1055_570440455))) {
    var inst_570440477 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440477.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym1055_570440454.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym1055_570440455, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym1055_570440454.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym1055_570440454)));
    }
    
    var Temporary8 = parent_p3;
    if (ConstSet530[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI570425392)); }
    delete__lisp_u9180(Temporary8, "kids", chckRange(indexInParent_p4, 0, 2147483647));
    var Temporary9 = parent_p3;
    if (ConstSet531[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI570425392)); }
    var Temporary10 = argToSplice_570440451;
    if (ConstSet532[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI570425392)); }
    insert__lisp_u15138(Temporary9, "kids", Temporary10.kids, indexInParent_p4);
    }
    else {
    if ((n_p1[n_p1_Idx].kind == 1)) {
    var i_570440534 = 0;
    Label11: {
        Label12: while (true) {
          var Temporary13 = n_p1[n_p1_Idx];
          if (ConstSet533[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI570425392)); }
        if (!(i_570440534 <= (Temporary13.kids).length - 1)) break Label12;
          var nHEX60gensym1059_570440540 = n_p1[n_p1_Idx];
          var kindHEX60gensym1059_570440541 = 1;
          var nHEX60gensym1060_570440543 = nHEX60gensym1059_570440540;
          if (!(!((nHEX60gensym1060_570440543 == null)))) {
          var inst_570440548 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
          raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440548.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym1060_570440543.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
          }
          
          if (!((nHEX60gensym1059_570440540.kind == kindHEX60gensym1059_570440541))) {
          var inst_570440563 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
          raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440563.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym1059_570440540.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym1059_570440541, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym1059_570440540.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym1059_570440540)));
          }
          
          var Temporary14 = n_p1[n_p1_Idx];
          if (ConstSet534[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI570425392)); }
          update__lisp_u14793(s_p0, (Temporary15 = Temporary14.kids, Temporary15), chckIndx(i_570440534, 0, (Temporary15).length - 1), templateArgs_p2, n_p1[n_p1_Idx], i_570440534);
          i_570440534 = addInt(i_570440534, 1);
        }
    };
    }
    else {
    }
    }}

  
}

function getCurrentException() {
  var result_33556452 = null;

    if (isNimException__system_u2017()) {
    result_33556452 = lastJSError;
    }
    

  return result_33556452;

}

function evaluate__lisp_u9364(s_p0, n_p1) {
              var Temporary4;
              var Temporary5;
      var Temporary6;
          var Temporary9;
                    var Temporary14;
                    var Temporary15;
                    var Temporary16;
                var Temporary17;
        var Temporary18;
      var Temporary19;
      var Temporary20;
      var Temporary21;
        var Temporary22;
      var Temporary23;
        var Temporary24;
        var Temporary25;
        var Temporary26;
                  var Temporary30;
                var Temporary31;
                  var Temporary32;
                  var Temporary33;
                var Temporary34;
                  var Temporary35;
                var Temporary36;
                var Temporary37;
                    var Temporary42;
        var Temporary43;
                var Temporary47;
                          var Temporary51;
                        var Temporary52;
                        var Temporary53;
                        var Temporary54;
                        var Temporary55;
              var Temporary56;
          var Temporary58;
                  var Temporary61;
                var Temporary62;
                var Temporary63;
                  var Temporary64;
                  var Temporary65;
                var Temporary66;
                var Temporary67;
                var Temporary68;
                var Temporary69;
                var Temporary70;
                var Temporary71;
                var Temporary72;
                var Temporary73;
                var Temporary74;
                var Temporary75;
                var Temporary76;
          var Temporary78;
                    var Temporary82;
        var Temporary83;
        var Temporary84;
        var Temporary85;
          var Temporary86;
          var Temporary88;
        var Temporary91;
          var Temporary92;
          var Temporary93;
        var Temporary96;
        var Temporary97;
          var Temporary98;
        var Temporary99;
          var Temporary101;
                var Temporary104;
                var Temporary105;
                var Temporary106;
                var Temporary107;
                var Temporary108;
                var Temporary109;
                var Temporary110;
        var Temporary111;
        var Temporary112;
          var Temporary113;

  var result_570438742 = null;

    switch (n_p1.kind) {
    case 3:
    case 2:
    case 4:
    case 5:
    case 6:
    case 8:
    case 9:
    case 11:
    case 7:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 18:
    case 17:
      result_570438742 = n_p1;
      break;
    case 19:
      Label1: {
        var i_570438754 = 0;
        var colontmp__570442183 = 0;
        colontmp__570442183 = (s_p0.stacks).length - 1;
        var res_570442184 = colontmp__570442183;
        Label2: {
            Label3: while (true) {
            if (!(0 <= res_570442184)) break Label3;
              i_570438754 = res_570442184;
              var s_570438755 = s_p0.stacks[chckIndx(i_570438754, 0, (s_p0.stacks).length - 1)];
              if (!((s_570438755.currentClassObj == null))) {
              var Temporary4 = s_570438755.currentClassObj;
              if (ConstSet69[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI570425392)); }
              var Temporary5 = n_p1;
              if (ConstSet70[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'member\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI570425392)); }
              var field_570438826 = getOrDefault__lisp_u2366(Temporary4.classObjFields, Temporary5.member);
              if (!((field_570438826 == null))) {
              result_570438742 = field_570438826;
              break Label1;
              }
              
              }
              
              res_570442184 = subInt(res_570442184, 1);
            }
        };
      };
      if ((result_570438742 == null)) {
      if (true) {
      var inst_570438834 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1905, Field2: 7};
      var Temporary6 = n_p1;
      if (ConstSet71[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'member\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI570425392)); }
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570438834.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,77,101,109,98,101,114,32,110,111,116,32,102,111,117,110,100,58,32],Temporary6.member));
      }
      
      }
      
      break;
    case 10:
      Label7: {
        var i_570438853 = (-1);
        Label8: {
          var sym_570438854 = [];
          var colontmp__570442188 = [];
          var Temporary9 = n_p1;
          if (ConstSet72[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'dot\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI570425392)); }
          colontmp__570442188 = Temporary9.dot;
          var sepLen_570442191 = 1;
          var lastHEX60gensym41_570442192 = 0;
          var splitsHEX60gensym41_570442193 = (-1);
          Label10: {
              Label11: while (true) {
              if (!(lastHEX60gensym41_570442192 <= (colontmp__570442188).length)) break Label11;
                var firstHEX60gensym41_570442195 = lastHEX60gensym41_570442192;
                Label12: {
                    Label13: while (true) {
                    if (!((lastHEX60gensym41_570442192 < (colontmp__570442188).length) && !(substrEq__pureZstrutils_u255(colontmp__570442188, lastHEX60gensym41_570442192, [46])))) break Label13;
                      lastHEX60gensym41_570442192 = addInt(lastHEX60gensym41_570442192, 1);
                    }
                };
                if ((splitsHEX60gensym41_570442193 == 0)) {
                lastHEX60gensym41_570442192 = (colontmp__570442188).length;
                }
                
                sym_570438854 = substr__system_u3700(colontmp__570442188, firstHEX60gensym41_570442195, subInt(lastHEX60gensym41_570442192, 1));
                i_570438853 = addInt(i_570438853, 1);
                if ((i_570438853 == 0)) {
                result_570438742 = evalSymbol__lisp_u5228(s_p0, {kind: 0, sym: nimCopy(null, sym_570438854, NTI33554449), line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null});
                }
                else {
                  switch (result_570438742.kind) {
                  case 8:
                    var Temporary14 = result_570438742;
                    if (ConstSet77[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI570425392)); }
                    result_570438742 = getOrDefault__lisp_u2366(Temporary14.objectFields, sym_570438854);
                    break;
                  case 18:
                    var Temporary15 = result_570438742;
                    if (ConstSet78[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI570425392)); }
                    var tmp_570438994 = getOrDefault__lisp_u2366(Temporary15.classObjFields, sym_570438854);
                    if ((tmp_570438994 == null)) {
                    var Temporary16 = result_570438742;
                    if (ConstSet79[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjMethods\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI570425392)); }
                    tmp_570438994 = getOrDefault__lisp_u2366(Temporary16.classObjMethods, sym_570438854);
                    }
                    
                    result_570438742 = tmp_570438994;
                    break;
                  default: 
                    if (true) {
                    var inst_570439066 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1924, Field2: 11};
                    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439066.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,68,111,116,32,99,97,108,108,32,111,110,32,110,111,110,45,111,98,106,101,99,116,58,32],HEX24__lisp_u6182(result_570438742)));
                    }
                    
                    break;
                  }
                }
                
                if (!(!(HEX3DHEX3D__lisp_u1499(result_570438742, null)))) {
                var inst_570439133 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1926, Field2: 7};
                var Temporary17 = n_p1;
                if (ConstSet180[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'dot\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI570425392)); }
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439133.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,68,111,116,32,99,97,108,108,32,115,121,109,98,111,108,32,110,111,116,32,102,111,117,110,100,58,32],sym_570438854,[32,102,114,111,109,32],Temporary17.dot,[32,119,104,101,114,101,32,115,116,97,99,107,115,32],HEX24__lisp_u13723(s_p0.stacks)));
                }
                
                if ((splitsHEX60gensym41_570442193 == 0)) {
                break Label10;
                }
                
                splitsHEX60gensym41_570442193 = subInt(splitsHEX60gensym41_570442193, 1);
                lastHEX60gensym41_570442192 = addInt(lastHEX60gensym41_570442192, sepLen_570442191);
              }
          };
        };
      };
      break;
    case 1:
        var Temporary18 = n_p1;
        if (ConstSet181[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI570425392)); }
      if (!((0 < (Temporary18.kids).length))) {
      var inst_570439138 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1931, Field2: 5};
      raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439138.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,69,109,112,116,121,32,108,105,115,116,32,99,97,110,110,111,116,32,98,101,32,105,110,116,101,114,112,114,101,116,101,100,32,97,115,32,97,32,114,111,117,116,105,110,101,32,99,97,108,108]));
      }
      
      var Temporary19 = n_p1;
      if (ConstSet182[Temporary19.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary19.kind, NTI570425392)); }
      var f_570439139 = evaluate__lisp_u9364(s_p0, (Temporary20 = Temporary19.kids, Temporary20)[chckIndx(0, 0, (Temporary20).length - 1)]);
        var Temporary22 = n_p1;
        if (ConstSet183[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI570425392)); }
      if ((1 < (Temporary22.kids).length)) {
      var Temporary23 = n_p1;
      if (ConstSet184[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI570425392)); }
      Temporary21 = HEX5BHEX5D__lisp_u9400(Temporary23.kids, HEX2EHEX2E__stdZenumutils_u105(1, 1));
      }
      else {
      Temporary21 = [];
      }
      
      var args_570439162 = nimCopy(null, Temporary21, NTI570431977);
      switch (f_570439139.kind) {
      case 0:
      case 10:
      case 19:
        if (true) {
        var inst_570439164 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1946, Field2: 7};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439164.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),makeNimstrLit("): This node should have been evaluated before getting passed here")));
        }
        
        break;
      case 5:
      case 8:
      case 9:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 18:
        if (true) {
        var inst_570439166 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1949, Field2: 7};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439166.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,70,105,114,115,116,32,101,108,101,109,101,110,116,32,111,102,32,108,105,115,116,32,105,115,32,110,111,116,32,99,97,108,108,97,98,108,101,58,32],HEX24__lisp_u6182(n_p1),[44,32],HEX24__lisp_u6182(f_570439139)));
        }
        
        break;
      case 7:
        if (!(((args_570439162).length == 1))) {
        var inst_570439171 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1951, Field2: 7};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439171.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,69,110,117,109,32,116,121,112,101,32,118,97,114,105,97,98,108,101,32,100,101,99,108,97,114,97,116,105,111,110,32,114,101,113,117,105,114,101,115,32,101,120,97,99,116,108,121,32,49,32,97,114,103,117,109,101,110,116]));
        }
        
        result_570438742 = evaluate__lisp_u9364(s_p0, args_570439162[chckIndx(0, 0, (args_570439162).length - 1)]);
        result_570438742.enumType = f_570439139;
        expectValidEnumValue__lisp_u6543(result_570438742);
        break;
      case 1:
        expectListLen__lisp_u8301(n_p1, 2);
        var idx_570439172 = evaluate__lisp_u9364(s_p0, args_570439162[chckIndx(0, 0, (args_570439162).length - 1)]);
        expectInt__lisp_u8170(idx_570439172);
        var Temporary24 = f_570439139;
        if (ConstSet239[Temporary24.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary24.kind, NTI570425392)); }
        var Temporary25 = idx_570439172;
        if (ConstSet240[Temporary25.atomicKind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'Node\' using \'atomicKind = "), reprDiscriminant(Temporary25.atomicKind, NTI570425391)); }
        result_570438742 = (Temporary26 = Temporary24.kids, Temporary26)[chckIndx(((Temporary25.num) | 0), 0, (Temporary26).length - 1)];
        break;
      case 17:
        var obj_570439173 = {kind: 18, classObjType: f_570439139, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), objectType: null, objectFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
        var allFields_570439174 = allInheritedClassFields__lisp_u8700(f_570439139);
        Label27: {
          var a_570439178 = null;
          var i_570442199 = 0;
          var L_570442200 = (args_570439162).length;
          Label28: {
              Label29: while (true) {
              if (!(i_570442199 < L_570442200)) break Label29;
                a_570439178 = args_570439162[chckIndx(i_570442199, 0, (args_570439162).length - 1)];
                var nHEX60gensym999_570439181 = a_570439178;
                var kindHEX60gensym999_570439182 = 1;
                var nHEX60gensym1000_570439184 = nHEX60gensym999_570439181;
                if (!(!((nHEX60gensym1000_570439184 == null)))) {
                var inst_570439189 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439189.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym1000_570439184.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
                }
                
                if (!((nHEX60gensym999_570439181.kind == kindHEX60gensym999_570439182))) {
                var inst_570439204 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439204.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym999_570439181.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym999_570439182, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym999_570439181.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym999_570439181)));
                }
                
                expectListLen__lisp_u8301(a_570439178, 2);
                var fieldName_570439205 = HEX5BHEX5D__lisp_u8216(a_570439178, 0);
                var nHEX60gensym1003_570439208 = fieldName_570439205;
                var kindHEX60gensym1003_570439209 = 0;
                var nHEX60gensym1004_570439211 = nHEX60gensym1003_570439208;
                if (!(!((nHEX60gensym1004_570439211 == null)))) {
                var inst_570439216 = {Field0: [108,105,115,112,46,110,105,109], Field1: 779, Field2: 3};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439216.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym1004_570439211.line),[41,58,32,69,120,112,101,99,116,101,100,32,97,32,110,111,110,45,110,105,108,32,110,111,100,101]));
                }
                
                if (!((nHEX60gensym1003_570439208.kind == kindHEX60gensym1003_570439209))) {
                var inst_570439231 = {Field0: [108,105,115,112,46,110,105,109], Field1: 786, Field2: 3};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439231.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(nHEX60gensym1003_570439208.line),[41,58,32,69,120,112,101,99,116,101,100,32],reprEnum(kindHEX60gensym1003_570439209, NTI570425392),[32,98,117,116,32,103,111,116,32],reprEnum(nHEX60gensym1003_570439208.kind, NTI570425392),[32,105,110,32],HEX24__lisp_u6568(nHEX60gensym1003_570439208)));
                }
                
                  var Temporary30 = fieldName_570439205;
                  if (ConstSet247[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI570425392)); }
                if (!(contains__lisp_u8776(allFields_570439174, Temporary30.sym))) {
                var inst_570439276 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1979, Field2: 17};
                var Temporary31 = fieldName_570439205;
                if (ConstSet248[Temporary31.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary31.kind, NTI570425392)); }
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439276.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(fieldName_570439205.line),[41,58,32,70,105,101,108,100,32,110,111,116,32,102,111,117,110,100,32,105,110,32,99,108,97,115,115,32,116,121,112,101,58,32],Temporary31.sym));
                }
                
                  var Temporary32 = obj_570439173;
                  if (ConstSet249[Temporary32.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary32.kind, NTI570425392)); }
                  var Temporary33 = fieldName_570439205;
                  if (ConstSet250[Temporary33.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary33.kind, NTI570425392)); }
                if (!(!(contains__lisp_u8776(Temporary32.classObjFields, Temporary33.sym)))) {
                var inst_570439321 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1981, Field2: 17};
                var Temporary34 = fieldName_570439205;
                if (ConstSet251[Temporary34.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary34.kind, NTI570425392)); }
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439321.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(fieldName_570439205.line),[41,58,32,70,105,101,108,100,32,97,108,114,101,97,100,121,32,100,101,102,105,110,101,100,58,32],Temporary34.sym));
                }
                
                var fieldValue_570439322 = evaluate__lisp_u9364(s_p0, HEX5BHEX5D__lisp_u8216(a_570439178, 1));
                  var Temporary35 = fieldName_570439205;
                  if (ConstSet271[Temporary35.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary35.kind, NTI570425392)); }
                if (!(canConvertToType__lisp_u8439(fieldValue_570439322, HEX5BHEX5D__lisp_u14028(allFields_570439174, Temporary35.sym)))) {
                var inst_570439439 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1985, Field2: 18};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439439.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(fieldValue_570439322.line),[41,58,32,73,110,118,97,108,105,100,32,102,105,101,108,100,32,116,121,112,101]));
                }
                
                var Temporary36 = obj_570439173;
                if (ConstSet272[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI570425392)); }
                var Temporary37 = fieldName_570439205;
                if (ConstSet273[Temporary37.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary37.kind, NTI570425392)); }
                HEX5BHEX5DHEX3D__lisp_u2797(Temporary36.classObjFields, Temporary37.sym, fieldValue_570439322);
                i_570442199 += 1;
                if (!(((args_570439162).length == L_570442200))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        Label38: {
          var name_570439486 = [];
          var L_570442207 = len__lisp_u498(allFields_570439174);
          Label39: {
            var h_570442209 = 0;
            var colontmp__570442210 = 0;
            colontmp__570442210 = (allFields_570439174.data).length - 1;
            var res_570442211 = 0;
            Label40: {
                Label41: while (true) {
                if (!(res_570442211 <= colontmp__570442210)) break Label41;
                  h_570442209 = res_570442211;
                  if (isFilled__pureZcollectionsZtables_u31(allFields_570439174.data[chckIndx(h_570442209, 0, (allFields_570439174.data).length - 1)].Field0)) {
                  name_570439486 = allFields_570439174.data[chckIndx(h_570442209, 0, (allFields_570439174.data).length - 1)]["Field1"];
                    var Temporary42 = obj_570439173;
                    if (ConstSet274[Temporary42.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary42.kind, NTI570425392)); }
                  if (!(contains__lisp_u8776(Temporary42.classObjFields, name_570439486))) {
                  var inst_570439531 = {Field0: [108,105,115,112,46,110,105,109], Field1: 1991, Field2: 9};
                  raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439531.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,70,105,101,108,100,32,109,105,115,115,105,110,103,58,32],name_570439486));
                  }
                  
                  if (!((len__lisp_u498(allFields_570439174) == L_570442207))) {
                  failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(752, 13) `len(t) == L` the length of the table changed while iterating over it"));
                  }
                  
                  }
                  
                  res_570442211 = addInt(res_570442211, 1);
                }
            };
          };
        };
        var Temporary43 = obj_570439173;
        if (ConstSet275[Temporary43.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary43.kind, NTI570425392)); }
        var currentAncestor_570439532 = Temporary43.classObjType;
        Label44: {
            Label45: while (true) {
            if (!!(HEX3DHEX3D__lisp_u1499(currentAncestor_570439532, null))) break Label45;
              Label46: {
                var methodName_570439537 = [];
                var colontmp__570442215 = ({data: [], counter: 0});
                var Temporary47 = currentAncestor_570439532;
                if (ConstSet276[Temporary47.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classMethods\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary47.kind, NTI570425392)); }
                colontmp__570442215 = nimCopy(colontmp__570442215, Temporary47.classMethods, NTI570425415);
                var L_570442216 = len__lisp_u498(colontmp__570442215);
                Label48: {
                  var h_570442218 = 0;
                  var colontmp__570442219 = 0;
                  colontmp__570442219 = (colontmp__570442215.data).length - 1;
                  var res_570442220 = 0;
                  Label49: {
                      Label50: while (true) {
                      if (!(res_570442220 <= colontmp__570442219)) break Label50;
                        h_570442218 = res_570442220;
                        if (isFilled__pureZcollectionsZtables_u31(colontmp__570442215.data[chckIndx(h_570442218, 0, (colontmp__570442215.data).length - 1)].Field0)) {
                        methodName_570439537 = colontmp__570442215.data[chckIndx(h_570442218, 0, (colontmp__570442215.data).length - 1)]["Field1"];
                          var Temporary51 = obj_570439173;
                          if (ConstSet277[Temporary51.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjMethods\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary51.kind, NTI570425392)); }
                        if (!(contains__lisp_u8776(Temporary51.classObjMethods, methodName_570439537))) {
                        var Temporary52 = currentAncestor_570439532;
                        if (ConstSet326[Temporary52.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classMethods\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary52.kind, NTI570425392)); }
                        var meth_570439635 = copyTree__lisp_u2692((Temporary53 = HEX5BHEX5D__lisp_u5332(Temporary52.classMethods, methodName_570439537), Temporary53)[0][Temporary53[1]]);
                        var Temporary54 = meth_570439635;
                        if (ConstSet327[Temporary54.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcObj\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary54.kind, NTI570425392)); }
                        Temporary54.funcObj = obj_570439173;
                        var Temporary55 = obj_570439173;
                        if (ConstSet328[Temporary55.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classObjMethods\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary55.kind, NTI570425392)); }
                        HEX5BHEX5DHEX3D__lisp_u2797(Temporary55.classObjMethods, methodName_570439537, meth_570439635);
                        }
                        
                        if (!((len__lisp_u498(colontmp__570442215) == L_570442216))) {
                        failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(752, 13) `len(t) == L` the length of the table changed while iterating over it"));
                        }
                        
                        }
                        
                        res_570442220 = addInt(res_570442220, 1);
                      }
                  };
                };
              };
              var Temporary56 = currentAncestor_570439532;
              if (ConstSet329[Temporary56.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'classParent\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary56.kind, NTI570425392)); }
              currentAncestor_570439532 = Temporary56.classParent;
            }
        };
        result_570438742 = obj_570439173;
        break;
      case 6:
        if (!(((args_570439162).length == 1))) {
        var inst_570439682 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2021, Field2: 7};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439682.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,79,98,106,101,99,116,32,116,121,112,101,32,118,97,114,105,97,98,108,101,32,100,101,99,108,97,114,97,116,105,111,110,32,114,101,113,117,105,114,101,115,32,101,120,97,99,116,108,121,32,49,32,97,114,103,117,109,101,110,116]));
        }
        
        var fields_570439683 = args_570439162[chckIndx(0, 0, (args_570439162).length - 1)];
        if (!((fields_570439683.kind == 1))) {
        var inst_570439689 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2024, Field2: 12};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439689.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(fields_570439683.line),[41,58,32,79,98,106,101,99,116,32,102,105,101,108,100,115,32,109,117,115,116,32,98,101,32,97,32,108,105,115,116]));
        }
        
        result_570438742 = {kind: 8, objectType: f_570439139, objectFields: ({data: [], counter: 0}), line: 0, tags: {}, enumType: null, member: [], className: [], classParent: null, classFields: ({data: [], counter: 0}), classMethods: ({data: [], counter: 0}), classObjType: null, classObjFields: ({data: [], counter: 0}), classObjMethods: ({data: [], counter: 0}), dot: [], keyword: 0, atomicKind: 0, num: 0.0, str: [], boolean: false, sym: [], atomicType: 0, kids: [], listType: null, tableVal: ({data: [], counter: 0}), tableType: null, funcParams: [], funcTypes: [], funcBody: null, funcReturnType: null, funcObj: null, templateParams: [], templateBody: null, objectTypeFields: ({data: [], counter: 0}), enumTypeValues: [], tableKeyType: null, tableValueType: null, arrayValueType: null};
        Label57: {
          var a_570439693 = null;
          var colontmp__570442223 = [];
          var Temporary58 = fields_570439683;
          if (ConstSet330[Temporary58.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary58.kind, NTI570425392)); }
          colontmp__570442223 = Temporary58.kids;
          var i_570442224 = 0;
          var L_570442225 = (colontmp__570442223).length;
          Label59: {
              Label60: while (true) {
              if (!(i_570442224 < L_570442225)) break Label60;
                a_570439693 = colontmp__570442223[chckIndx(i_570442224, 0, (colontmp__570442223).length - 1)];
                if (!((a_570439693.kind == 1))) {
                var inst_570439699 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2029, Field2: 9};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439699.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(a_570439693.line),[41,58,32,69,120,112,101,99,116,101,100,32,112,97,105,114,115,32,111,102,32,107,101,121,115,32,97,110,100,32,118,97,108,117,101,115]));
                }
                
                  var Temporary61 = a_570439693;
                  if (ConstSet331[Temporary61.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary61.kind, NTI570425392)); }
                if (!(((Temporary61.kids).length == 2))) {
                var inst_570439704 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2030, Field2: 9};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439704.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(a_570439693.line),[41,58,32,69,120,112,101,99,116,101,100,32,112,97,105,114,115,32,111,102,32,107,101,121,115,32,97,110,100,32,118,97,108,117,101,115]));
                }
                
                var Temporary62 = a_570439693;
                if (ConstSet332[Temporary62.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary62.kind, NTI570425392)); }
                var key_570439705 = (Temporary63 = Temporary62.kids, Temporary63)[chckIndx(0, 0, (Temporary63).length - 1)];
                if (!((key_570439705.kind == 0))) {
                var inst_570439714 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2033, Field2: 11};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439714.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(key_570439705.line),[41,58,32,79,98,106,101,99,116,32,102,105,101,108,100,32,110,97,109,101,115,32,109,117,115,116,32,98,101,32,115,121,109,98,111,108,115,44,32,103,111,116,58,32],reprEnum(key_570439705.kind, NTI570425392)));
                }
                
                  var Temporary64 = result_570438742;
                  if (ConstSet333[Temporary64.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary64.kind, NTI570425392)); }
                  var Temporary65 = key_570439705;
                  if (ConstSet334[Temporary65.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary65.kind, NTI570425392)); }
                if (!(!(contains__lisp_u8776(Temporary64.objectFields, Temporary65.sym)))) {
                var inst_570439759 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2035, Field2: 11};
                var Temporary66 = key_570439705;
                if (ConstSet335[Temporary66.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary66.kind, NTI570425392)); }
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439759.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(key_570439705.line),[41,58,32,70,105,101,108,100,32,97,108,114,101,97,100,121,32,100,101,102,105,110,101,100,58,32],Temporary66.sym));
                }
                
                var Temporary67 = f_570439139;
                if (ConstSet336[Temporary67.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectTypeFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary67.kind, NTI570425392)); }
                var Temporary68 = key_570439705;
                if (ConstSet337[Temporary68.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary68.kind, NTI570425392)); }
                var fieldTyp0_570439827 = getOrDefault__lisp_u2366(Temporary67.objectTypeFields, Temporary68.sym);
                if (!(!((fieldTyp0_570439827 == null)))) {
                var inst_570439832 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2039, Field2: 11};
                var Temporary69 = key_570439705;
                if (ConstSet338[Temporary69.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary69.kind, NTI570425392)); }
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439832.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(key_570439705.line),[41,58,32,70,105,101,108,100,32,110,111,116,32,102,111,117,110,100,32,105,110,32,111,98,106,101,99,116,32,116,121,112,101,58,32],Temporary69.sym));
                }
                
                var fieldTyp_570439833 = evaluate__lisp_u9364(s_p0, fieldTyp0_570439827);
                if (!((ConstSet339[fieldTyp_570439833.kind] != undefined))) {
                var inst_570439842 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2042, Field2: 11};
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439842.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(key_570439705.line),[41,58,32],([73,110,118,97,108,105,100,32,102,105,101,108,100,32,116,121,112,101,58,32]).concat(reprEnum(fieldTyp_570439833.kind, NTI570425392))));
                }
                
                var Temporary70 = a_570439693;
                if (ConstSet346[Temporary70.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary70.kind, NTI570425392)); }
                var value_570439843 = convertValueToType__lisp_u8486(evaluate__lisp_u9364(s_p0, (Temporary71 = Temporary70.kids, Temporary71)[chckIndx(1, 0, (Temporary71).length - 1)]), fieldTyp_570439833);
                if (!(!(HEX3DHEX3D__lisp_u1499(value_570439843, null)))) {
                var Temporary72 = a_570439693;
                if (ConstSet347[Temporary72.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary72.kind, NTI570425392)); }
                failedAssertImpl__stdZassertions_u84(([108,105,115,112,46,110,105,109,40,50,48,52,56,44,32,57,41,32,96,10,110,111,116,32,40,118,97,108,117,101,32,61,61,32,110,105,108,41,96,32]).concat(HEX24__lisp_u6182((Temporary73 = Temporary72.kids, Temporary73)[chckIndx(1, 0, (Temporary73).length - 1)])));
                }
                
                if (!(HEX3DHEX3D__lisp_u1499(getType__lisp_u8338(value_570439843), fieldTyp_570439833))) {
                var inst_570439850 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2050, Field2: 13};
                var Temporary74 = key_570439705;
                if (ConstSet348[Temporary74.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary74.kind, NTI570425392)); }
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439850.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(value_570439843.line),[41,58,32],([84,121,112,101,32,109,105,115,109,97,116,99,104,32,102,111,114,32,102,105,101,108,100,32,96]).concat(Temporary74.sym,[96,46,32,69,120,112,101,99,116,101,100,32],HEX24__lisp_u6182(fieldTyp_570439833),[44,32,103,111,116,32],HEX24__lisp_u6182(getType__lisp_u8338(value_570439843)))));
                }
                
                var Temporary75 = result_570438742;
                if (ConstSet349[Temporary75.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary75.kind, NTI570425392)); }
                var Temporary76 = key_570439705;
                if (ConstSet350[Temporary76.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'sym\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary76.kind, NTI570425392)); }
                HEX5BHEX5DHEX3D__lisp_u2797(Temporary75.objectFields, Temporary76.sym, value_570439843);
                i_570442224 += 1;
                if (!(((colontmp__570442223).length == L_570442225))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        Label77: {
          var field_570439897 = [];
          var colontmp__570442228 = ({data: [], counter: 0});
          var Temporary78 = f_570439139;
          if (ConstSet351[Temporary78.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectTypeFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary78.kind, NTI570425392)); }
          colontmp__570442228 = nimCopy(colontmp__570442228, Temporary78.objectTypeFields, NTI570425415);
          var L_570442229 = len__lisp_u498(colontmp__570442228);
          Label79: {
            var h_570442231 = 0;
            var colontmp__570442232 = 0;
            colontmp__570442232 = (colontmp__570442228.data).length - 1;
            var res_570442233 = 0;
            Label80: {
                Label81: while (true) {
                if (!(res_570442233 <= colontmp__570442232)) break Label81;
                  h_570442231 = res_570442233;
                  if (isFilled__pureZcollectionsZtables_u31(colontmp__570442228.data[chckIndx(h_570442231, 0, (colontmp__570442228.data).length - 1)].Field0)) {
                  field_570439897 = colontmp__570442228.data[chckIndx(h_570442231, 0, (colontmp__570442228.data).length - 1)]["Field1"];
                    var Temporary82 = result_570438742;
                    if (ConstSet352[Temporary82.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'objectFields\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary82.kind, NTI570425392)); }
                  if (!(contains__lisp_u8776(Temporary82.objectFields, field_570439897))) {
                  var inst_570439942 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2057, Field2: 9};
                  raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570439942.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,70,105,101,108,100,32,109,105,115,115,105,110,103,58,32],field_570439897));
                  }
                  
                  if (!((len__lisp_u498(colontmp__570442228) == L_570442229))) {
                  failedAssertImpl__stdZassertions_u84(makeNimstrLit("tables.nim(752, 13) `len(t) == L` the length of the table changed while iterating over it"));
                  }
                  
                  }
                  
                  res_570442233 = addInt(res_570442233, 1);
                }
            };
          };
        };
        break;
      case 4:
        var Temporary83 = n_p1;
        if (ConstSet353[Temporary83.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary83.kind, NTI570425392)); }
        var key_570439943 = evaluate__lisp_u9364(s_p0, (Temporary84 = Temporary83.kids, Temporary84)[chckIndx(1, 0, (Temporary84).length - 1)]);
        var Temporary85 = f_570439139;
        if (ConstSet354[Temporary85.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tableVal\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary85.kind, NTI570425392)); }
        result_570438742 = getOrDefault__lisp_u1925(Temporary85.tableVal, key_570439943);
        if (!(!(HEX3DHEX3D__lisp_u1499(result_570438742, null)))) {
        var inst_570440012 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2061, Field2: 7};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440012.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,75,101,121,32,110,111,116,32,102,111,117,110,100,58,32],HEX24__lisp_u6182(key_570439943)));
        }
        
        break;
      case 3:
        result_570438742 = evaluateKeywordCall__lisp_u9367(s_p0, n_p1);
        break;
      case 11:
          var Temporary86 = f_570439139;
          if (ConstSet520[Temporary86.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'templateParams\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary86.kind, NTI570425392)); }
        if (!(((args_570439162).length == (Temporary86.templateParams).length))) {
        var inst_570440020 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2065, Field2: 7};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440020.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32],([87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,32,102,111,114,32,116,101,109,112,108,97,116,101,58,32]).concat(HEX24__lisp_u6182(n_p1))));
        }
        
        var collectResult_570440021 = [initTable__lisp_u2737(32)];
        Label87: {
          var i_570440092 = 0;
          var param_570440093 = [];
          var colontmp__570442236 = [];
          var Temporary88 = f_570439139;
          if (ConstSet521[Temporary88.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'templateParams\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary88.kind, NTI570425392)); }
          colontmp__570442236 = Temporary88.templateParams;
          var i_570442238 = 0;
          var L_570442239 = (colontmp__570442236).length;
          Label89: {
              Label90: while (true) {
              if (!(i_570442238 < L_570442239)) break Label90;
                i_570440092 = i_570442238;
                param_570440093 = colontmp__570442236[chckIndx(i_570442238, 0, (colontmp__570442236).length - 1)];
                HEX5BHEX5DHEX3D__lisp_u2797(collectResult_570440021[0], param_570440093, args_570439162[chckIndx(i_570440092, 0, (args_570439162).length - 1)]);
                i_570442238 += 1;
                if (!(((colontmp__570442236).length == L_570442239))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(187, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var templateArgs_570440136 = nimCopy(null, collectResult_570440021[0], NTI570425415);
        var Temporary91 = f_570439139;
        if (ConstSet522[Temporary91.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'templateBody\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary91.kind, NTI570425392)); }
        var templateBody_570440569 = [copyTree__lisp_u2692(Temporary91.templateBody)];
        update__lisp_u14793(s_p0, templateBody_570440569, 0, templateArgs_570440136, null, (-1));
        result_570438742 = evaluate__lisp_u9364(s_p0, templateBody_570440569[0]);
        break;
      case 2:
          var Temporary92 = f_570439139;
          if (ConstSet535[Temporary92.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcBody\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary92.kind, NTI570425392)); }
        if (!(!(HEX3DHEX3D__lisp_u1499(Temporary92.funcBody, null)))) {
        var inst_570440572 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2137, Field2: 7};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440572.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
        }
        
          var Temporary93 = f_570439139;
          if (ConstSet536[Temporary93.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcReturnType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary93.kind, NTI570425392)); }
        if (!(!(HEX3DHEX3D__lisp_u1499(Temporary93.funcReturnType, null)))) {
        var inst_570440575 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2138, Field2: 7};
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440575.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100]));
        }
        
        var initialStacksHEX60gensym1069_570440581 = (s_p0.stacks).length;
        var newStackHEX60gensym1069_570440582 = {kind: 1, symbols: ({data: [], counter: 0}), currentClassObj: null};
        s_p0.stacks.push(newStackHEX60gensym1069_570440582);;
        try {
++excHandler;
        try {
        var Temporary97 = f_570439139;
        if (ConstSet537[Temporary97.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcObj\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary97.kind, NTI570425392)); }
        (Temporary96 = HEX5BHEX5D__lisp_u10516(s_p0.stacks, 1), Temporary96)[0][Temporary96[1]].currentClassObj = Temporary97.funcObj;
          var Temporary98 = f_570439139;
          if (ConstSet538[Temporary98.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcParams\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary98.kind, NTI570425392)); }
        if (!(((args_570439162).length == (Temporary98.funcParams).length))) {
        var inst_570440604 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2144, Field2: 11};
        var Temporary99 = f_570439139;
        if (ConstSet539[Temporary99.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcParams\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary99.kind, NTI570425392)); }
        raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440604.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,46,32,71,111,116,32],HEX24__systemZdollars_u8((args_570439162).length),[44,32,101,120,112,101,99,116,101,100,32],HEX24__systemZdollars_u8((Temporary99.funcParams).length)));
        }
        
        Label100: {
          var i_570440610 = 0;
          var param_570440611 = [];
          var colontmp__570442242 = [];
          var Temporary101 = f_570439139;
          if (ConstSet540[Temporary101.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcParams\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary101.kind, NTI570425392)); }
          colontmp__570442242 = Temporary101.funcParams;
          var i_570442243 = 0;
          var L_570442244 = (colontmp__570442242).length;
          Label102: {
              Label103: while (true) {
              if (!(i_570442243 < L_570442244)) break Label103;
                i_570440610 = i_570442243;
                param_570440611 = colontmp__570442242[chckIndx(i_570442243, 0, (colontmp__570442242).length - 1)];
                var Temporary104 = n_p1;
                if (ConstSet541[Temporary104.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kids\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary104.kind, NTI570425392)); }
                var val_570440612 = evaluate__lisp_u9364(s_p0, (Temporary105 = Temporary104.kids, Temporary105)[chckIndx(addInt(i_570440610, 1), 0, (Temporary105).length - 1)]);
                var Temporary106 = f_570439139;
                if (ConstSet542[Temporary106.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcTypes\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary106.kind, NTI570425392)); }
                var typ_570440613 = (Temporary107 = Temporary106.funcTypes, Temporary107)[chckIndx(i_570440610, 0, (Temporary107).length - 1)];
                if (!((typ_570440613 == null))) {
                if (!((typ_570440613.kind == 14))) {
                if (!(HEX3DHEX3D__lisp_u1499(getType__lisp_u8338(val_570440612), typ_570440613))) {
                var inst_570440622 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2155, Field2: 17};
                var Temporary108 = f_570439139;
                if (ConstSet543[Temporary108.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcTypes\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary108.kind, NTI570425392)); }
                raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440622.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,84,121,112,101,32,109,105,115,109,97,116,99,104,32,102,111,114,32,112,97,114,97,109,101,116,101,114,32],param_570440611,[46,32,69,120,112,101,99,116,101,100,32],HEX24__lisp_u6182((Temporary109 = Temporary108.funcTypes, Temporary109)[chckIndx(i_570440610, 0, (Temporary109).length - 1)]),[44,32,103,111,116,32],HEX24__lisp_u6182(getType__lisp_u8338(val_570440612))));
                }
                
                }
                
                }
                
                HEX5BHEX5DHEX3D__lisp_u2797((Temporary110 = HEX5BHEX5D__lisp_u10516(s_p0.stacks, 1), Temporary110)[0][Temporary110[1]].symbols, param_570440611, val_570440612);
                i_570442243 += 1;
                if (!(((colontmp__570442242).length == L_570442244))) {
                failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(187, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary111 = f_570439139;
        if (ConstSet544[Temporary111.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcBody\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary111.kind, NTI570425392)); }
        result_570438742 = evaluate__lisp_u9364(s_p0, copyTree__lisp_u2692(Temporary111.funcBody));
        if (!(!(HEX3DHEX3D__lisp_u1499(result_570438742, null)))) {
        failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,50,49,54,52,44,32,49,49,41,32,96,10,110,111,116,32,40,114,101,115,117,108,116,32,61,61,32,110,105,108,41,96,32]);
        }
        
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI570425399))) {
        var r_570440674 = getCurrentException();
        if (!(!(HEX3DHEX3D__lisp_u1499(r_570440674.value, null)))) {
        failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,50,49,54,54,44,32,49,49,41,32,96,10,110,111,116,32,40,114,46,118,97,108,117,101,32,61,61,32,110,105,108,41,96,32]);
        }
        
        result_570438742 = r_570440674.value;
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
        if (!(!(HEX3DHEX3D__lisp_u1499(result_570438742, null)))) {
        failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,50,49,54,57,44,32,57,41,32,96,10,110,111,116,32,40,114,101,115,117,108,116,32,61,61,32,110,105,108,41,96,32]);
        }
        
        var Temporary112 = f_570439139;
        if (ConstSet545[Temporary112.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'funcReturnType\' is not accessible for type \'Node\' using \'kind = "), reprDiscriminant(Temporary112.kind, NTI570425392)); }
        result_570438742 = convertValueToType__lisp_u8486(result_570438742, Temporary112.funcReturnType);
        if (!(!(HEX3DHEX3D__lisp_u1499(result_570438742, null)))) {
        failedAssertImpl__stdZassertions_u84([108,105,115,112,46,110,105,109,40,50,49,55,49,44,32,57,41,32,96,10,110,111,116,32,40,114,101,115,117,108,116,32,61,61,32,110,105,108,41,96,32]);
        }
        
        } finally {
        if (!(((Temporary113 = HEX5BHEX5D__lisp_u10516(s_p0.stacks, 1), Temporary113)[0][Temporary113[1]] == newStackHEX60gensym1069_570440582))) {
        failedAssertImpl__stdZassertions_u84(makeNimstrLit("lisp.nim(537, 5) `s.stacks[BackwardsIndex(1)] == newStack`gensym1069` "));
        }
        
        delete__lisp_u10553(s_p0, "stacks", chckRange((s_p0.stacks).length - 1, 0, 2147483647));
        }
        if (!(((s_p0.stacks).length == initialStacksHEX60gensym1069_570440581))) {
        failedAssertImpl__stdZassertions_u84(makeNimstrLit("lisp.nim(2140, 7) `len(s.stacks) == initialStacks`gensym1069` Stack imbalance"));
        }
        
        break;
      }
      break;
    case 0:
      result_570438742 = evalSymbol__lisp_u5228(s_p0, n_p1);
      break;
    }
    if (!(!(HEX3DHEX3D__lisp_u1499(result_570438742, null)))) {
    var inst_570440719 = {Field0: [108,105,115,112,46,110,105,109], Field1: 2175, Field2: 3};
    raiseAssert__stdZassertions_u42(([10,10,69,114,114,111,114,32,105,110,32,108,105,115,112,32,115,99,114,105,112,116,44,32,108,105,110,101,32]).concat(HEX24__systemZdollars_u8(inst_570440719.Field1),[32,40,115,99,114,105,112,116,32,108,105,110,101,32],HEX24__systemZdollars_u8(n_p1.line),[41,58,32,65,65,65,65,65,65,65,65,65,65,65,65]));
    }
    

  return result_570438742;

}

function newState__lisp_u15392() {
  var result_570440737 = null;

    result_570440737 = {stacks: [{kind: 0, symbols: ({data: [], counter: 0}), currentClassObj: null}]};

  return result_570440737;

}

function getStackTrace__system_u2221(e_p0) {
  var result_33556655 = [];

    result_33556655 = nimCopy(null, e_p0.trace, NTI33554449);

  return result_33556655;

}

function runScript__lisp_u15857(name_p0, code_p1, modified_p2) {
    clearTerminal__lisp_u12();
++excHandler;
    try {
    if (modified_p2) {
    print__lisp_u13((styled__lisp_u15853(([82,117,110,110,110,105,110,103,58,32]).concat(name_p0), [49,59,51,51])).concat(styled__lisp_u15853([32,40,109,111,100,105,102,105,101,100,41], [49,59,51,49])));
    }
    else {
    print__lisp_u13(styled__lisp_u15853(([82,117,110,110,110,105,110,103,58,32]).concat(name_p0), [49,59,51,51]));
    }
    
    Label2: {
      var HEX3Atmp_570441337 = tokenize__lisp_u5532(code_p1);
      var iHEX60gensym1108_570441340 = 0;
      var resultHEX60gensym1108_570441369 = newSeq__lisp_u16016(chckRange((HEX3Atmp_570441337).length, 0, 2147483647));
      Label3: {
        var itHEX60gensym1108_570441373 = null;
        var i_570442134 = 0;
        var L_570442135 = (HEX3Atmp_570441337).length;
        Label4: {
            Label5: while (true) {
            if (!(i_570442134 < L_570442135)) break Label5;
              itHEX60gensym1108_570441373 = HEX3Atmp_570441337[chckIndx(i_570442134, 0, (HEX3Atmp_570441337).length - 1)];
              resultHEX60gensym1108_570441369[chckIndx(iHEX60gensym1108_570441340, 0, (resultHEX60gensym1108_570441369).length - 1)] = itHEX60gensym1108_570441373;
              iHEX60gensym1108_570441340 = addInt(iHEX60gensym1108_570441340, 1);
              i_570442134 += 1;
              if (!(((HEX3Atmp_570441337).length == L_570442135))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    var ast_570441378 = buildAst__lisp_u8946(resultHEX60gensym1108_570441369);
    (evaluate__lisp_u9364(newState__lisp_u15392(), ast_570441378));
    print__lisp_u13(styled__lisp_u15853([83,99,114,105,112,116,32,102,105,110,105,115,104,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,46], [49,59,51,50]));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555171))) {
    var e_570441379 = getCurrentException();
    print__lisp_u13(styled__lisp_u15853([69,120,99,101,112,116,105,111,110], [49,59,51,49,59,49]));
    print__lisp_u13(styled__lisp_u15853(e_570441379.message, [49,59,51,49]));
    print__lisp_u13(styled__lisp_u15853([83,116,97,99,107,32,116,114,97,99,101], [49,59,51,49,59,49]));
    print__lisp_u13(getStackTrace__system_u2221(e_570441379));
    reraiseException();
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  
}

function text__pkgZkaraxZvdom_u1013(s_p0) {
  var result_1627390967 = null;

    result_1627390967 = {kind: 0, text: s_p0, index: (-1), m_type: NTI1627390046, id: null, class: null, kids: [], attrs: [], events: [], style: null, styleVersion: 0, dom: null};

  return result_1627390967;

}

function renderer__lisp_u16065() {
    var Temporary4;

function HEX3Aanonymous__lisp_u16116(ev_p0, n_p1) {
    currentScriptName_570441405[0] = nimCopy(null, cstrToNimstr(value__pkgZkaraxZvdom_u474(n_p1)), NTI33554449);
    var resultHEX60gensym1113_570441468 = ({kind: 0, name: [], code: []});
    Label1: {
      Label2: {
        var it_570441473 = ({kind: 0, name: [], code: []});
        var i_570442038 = 0;
        var L_570442039 = 6;
        Label3: {
            Label4: while (true) {
            if (!(i_570442038 < L_570442039)) break Label4;
              it_570441473 = scripts_570441196[chckIndx(i_570442038, 0, (scripts_570441196).length - 1)];
              if (eqStrings(it_570441473.name, currentScriptName_570441405[0])) {
              resultHEX60gensym1113_570441468 = nimCopy(resultHEX60gensym1113_570441468, it_570441473, NTI570436196);
              break Label1;
              }
              
              i_570442038 += 1;
              if (!((6 == L_570442039))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      raiseAssert__stdZassertions_u42([102,105,110,100,73,116,58,32,110,111,116,32,102,111,117,110,100]);
    };
    var script_570441474 = nimCopy(null, resultHEX60gensym1113_570441468, NTI570436196);
    var code_570441475 = toJSStr(script_570441474.code);
                        editor.setValue(code_570441475);
                    editor.clearSelection();
                  
    currentScriptModified_570441406[0] = false;

  
}
    var Temporary5;

function HEX3Aanonymous__lisp_u16148() {
    var code_570441493 = null;
    code_570441493 = editor.getValue();
    rawEcho([99,111,100,101], [32,61,32], cstrToNimstr(code_570441493));
    runScript__lisp_u15857(currentScriptName_570441405[0], cstrToNimstr(code_570441493), currentScriptModified_570441406[0]);

  
}
    var Temporary10;

function HEX3Aanonymous__lisp_u16164(ev_p0, n_p1) {
    currentScriptModified_570441406[0] = true;

  
}

  var result_570441410 = null;

    var tmp_570441437 = tree__pkgZkaraxZvdom_u942(16, []);
    tmp_570441437.class = "bg-black";
    var tmp_570441439 = tree__pkgZkaraxZvdom_u942(44, []);
    tmp_570441439.class = "flex gap-1 h-screen p-3 gap-3";
    var tmp_570441440 = tree__pkgZkaraxZvdom_u942(44, []);
    tmp_570441440.class = "flex-1 h-full flex flex-col gap-4";
    var tmp_570441441 = tree__pkgZkaraxZvdom_u942(44, []);
    tmp_570441441.class = "flex gap-4";
    var tmp_570441442 = tree__pkgZkaraxZvdom_u942(196, []);
    tmp_570441442.id = "scripts-select";
    tmp_570441442.class = "w-full bg-white/10 text-white p-2 rounded-lg appearance-none";
    Label1: {
      var s_570441456 = ({kind: 0, name: [], code: []});
      var i_570442042 = 0;
      var L_570442043 = 6;
      Label2: {
          Label3: while (true) {
          if (!(i_570442042 < L_570442043)) break Label3;
            s_570441456 = scripts_570441196[chckIndx(i_570442042, 0, (scripts_570441196).length - 1)];
            var tmp_570441443 = tree__pkgZkaraxZvdom_u942(199, []);
            valueHEX3D__pkgZkaraxZvdom_u477(tmp_570441443, toJSStr(s_570441456.name));
            setAttr__pkgZkaraxZvdom_u771(tmp_570441443, "value", toJSStr(s_570441456.name));
            setAttr__pkgZkaraxZvdom_u816(tmp_570441443, "selected", eqStrings(s_570441456.name, currentScriptName_570441405[0]));
            add__pkgZkaraxZvdom_u856(tmp_570441443, text__pkgZkaraxZvdom_u1010((s_570441456.name).concat([32,40],reprEnum(s_570441456.kind, NTI570436195),[41])));
            add__pkgZkaraxZvdom_u856(tmp_570441442, tmp_570441443);
            i_570442042 += 1;
            if (!((6 == L_570442043))) {
            failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Temporary4 = HEX3Aanonymous__lisp_u16116.bind(null); Temporary4.ClP_0 = HEX3Aanonymous__lisp_u16116; Temporary4.ClE_0 = null;
    addEventHandler__pkgZkaraxZkarax_u1963(tmp_570441442, 8, Temporary4, kxi__);
    add__pkgZkaraxZvdom_u856(tmp_570441441, tmp_570441442);
    var tmp_570441448 = tree__pkgZkaraxZvdom_u942(195, []);
    tmp_570441448.class = "btn bg-blue-500 px-4 rounded-lg py-2";
    add__pkgZkaraxZvdom_u856(tmp_570441448, text__pkgZkaraxZvdom_u1010([82,117,110]));
    Temporary5 = HEX3Aanonymous__lisp_u16148.bind(null); Temporary5.ClP_0 = HEX3Aanonymous__lisp_u16148; Temporary5.ClE_0 = null;
    addEventHandler__pkgZkaraxZkarax_u1971(tmp_570441448, 0, Temporary5, kxi__);
    add__pkgZkaraxZvdom_u856(tmp_570441441, tmp_570441448);
    add__pkgZkaraxZvdom_u856(tmp_570441440, tmp_570441441);
    var tmp_570441449 = tree__pkgZkaraxZvdom_u942(44, []);
    tmp_570441449.class = "h-full w-full bg-black resize-none bg-white/10 text-xs rounded-lg";
    tmp_570441449.id = "input";
    var resultHEX60gensym1115_570441499 = ({kind: 0, name: [], code: []});
    Label6: {
      Label7: {
        var it_570441504 = ({kind: 0, name: [], code: []});
        var i_570442046 = 0;
        var L_570442047 = 6;
        Label8: {
            Label9: while (true) {
            if (!(i_570442046 < L_570442047)) break Label9;
              it_570441504 = scripts_570441196[chckIndx(i_570442046, 0, (scripts_570441196).length - 1)];
              if (eqStrings(it_570441504.name, [99,111,114,101])) {
              resultHEX60gensym1115_570441499 = nimCopy(resultHEX60gensym1115_570441499, it_570441504, NTI570436196);
              break Label6;
              }
              
              i_570442046 += 1;
              if (!((6 == L_570442047))) {
              failedAssertImpl__stdZassertions_u84(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      raiseAssert__stdZassertions_u42([102,105,110,100,73,116,58,32,110,111,116,32,102,111,117,110,100]);
    };
    add__pkgZkaraxZvdom_u856(tmp_570441449, text__pkgZkaraxZvdom_u1013(toJSStr(resultHEX60gensym1115_570441499.code)));
    Temporary10 = HEX3Aanonymous__lisp_u16164.bind(null); Temporary10.ClP_0 = HEX3Aanonymous__lisp_u16164; Temporary10.ClE_0 = null;
    addEventHandler__pkgZkaraxZkarax_u1963(tmp_570441449, 8, Temporary10, kxi__);
    add__pkgZkaraxZvdom_u856(tmp_570441440, tmp_570441449);
    add__pkgZkaraxZvdom_u856(tmp_570441439, tmp_570441440);
    var tmp_570441450 = tree__pkgZkaraxZvdom_u942(44, []);
    tmp_570441450.class = "h-full w-0.5 bg-white/10";
    add__pkgZkaraxZvdom_u856(tmp_570441439, tmp_570441450);
    var tmp_570441451 = tree__pkgZkaraxZvdom_u942(44, []);
    tmp_570441451.class = "flex-1 h-full max-w-1/2";
    var tmp_570441452 = tree__pkgZkaraxZvdom_u942(44, []);
    tmp_570441452.id = "terminal";
    tmp_570441452.class = "h-full";
    add__pkgZkaraxZvdom_u856(tmp_570441451, tmp_570441452);
    add__pkgZkaraxZvdom_u856(tmp_570441439, tmp_570441451);
    add__pkgZkaraxZvdom_u856(tmp_570441437, tmp_570441439);
    result_570441410 = tmp_570441437;

  return result_570441410;

}

function setForeignNodeId__pkgZkaraxZkarax_u1997(id_p0, kxi_p1) {
    kxi_p1.orphans[id_p0] = true;

  
}

function runTests__lisp_u16051() {
  
}

function main__lisp_u16052() {
    print__lisp_u13(styled__lisp_u15853([68,97,119,105,100,39,115,32,76,105,115,112,32,105,110,116,101,114,112,114,101,116,101,114], [49,59,51,51]));
    runTests__lisp_u16051();
          editor = ace.edit("input");
      editor.session.setUseSoftTabs(true);
      editor.session.setUseWrapMode(true);
      editor.setHighlightActiveLine(true);
      editor.setTheme("ace/theme/solarized_dark");
      editor.session.setMode("ace/mode/clojure");
    

  
}

function postRender__lisp_u16064() {
    if (!(terminalInitialized_570441404[0])) {
            term.open(document.getElementById("terminal"));
        fitAddon.fit();
        if (editor) {
          editor.resize();
        }
      
    setForeignNodeId__pkgZkaraxZkarax_u1997("terminal", kxi__);
    main__lisp_u16052();
    terminalInitialized_570441404[0] = true;
    }
    

  
}
var Temporary1;
var Temporary2;
var Temporary3;
    const term = new Terminal({cursorBlink: true, rows: 48, cols: 8, fontSize: 12});
    const fitAddon = new FitAddon.FitAddon();
    term.loadAddon(fitAddon);

    let editor;

    window.addEventListener("resize", () => {
      fitAddon.fit();
      if (editor) {
        editor.resize();
      }
    });
  
var terminalInitialized_570441404 = [false];
var currentScriptName_570441405 = [[99,111,114,101]];
var currentScriptModified_570441406 = [false];
Temporary1 = resize__lisp_u16063.bind(null); Temporary1.ClP_0 = resize__lisp_u16063; Temporary1.ClE_0 = null;
(setInterval(Temporary1, 100));
Temporary2 = renderer__lisp_u16065.bind(null); Temporary2.ClP_0 = renderer__lisp_u16065; Temporary2.ClE_0 = null;
Temporary3 = postRender__lisp_u16064.bind(null); Temporary3.ClP_0 = postRender__lisp_u16064; Temporary3.ClE_0 = null;
setRenderer__pkgZkaraxZkarax_u1870(Temporary2, "ROOT", Temporary3);
